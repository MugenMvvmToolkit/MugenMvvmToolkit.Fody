<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MugenMvvmToolkit</name>
    </assembly>
    <members>
        <member name="T:MugenMvvmToolkit.Annotations.BaseViewAttribute">
            <summary>
                Indicates that the interface can be used in context action implement view.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.BaseViewAttribute.Priority">
            <summary>
                A number indicating the priority of the action. Affects the position of the action in the pop-up menu.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.BaseViewAttribute.ViewTypeName">
            <summary>
                Gets or sets the base view type name, for examle for IWindowViewModel it's System.Windows.Window
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.BaseViewAttribute.Name">
            <summary>
                Gets or sets the name, default is interface name.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Annotations.BaseViewModelAttribute">
            <summary>
                Indicates that the class can be used in context action inherit from.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.BaseViewModelAttribute.Priority">
            <summary>
                A number indicating the priority of the action. Affects the position of the action in the pop-up menu.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.BaseViewModelAttribute.Name">
            <summary>
                Gets or sets the name, default is interface name.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Annotations.WrapperAttribute">
            <summary>
                Indicates that the class can be used in context action wrap to.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.WrapperAttribute.Priority">
            <summary>
                A number indicating the priority of the action. Affects the position of the action in the pop-up menu.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.WrapperAttribute.Name">
            <summary>
                Gets or sets the name, default is member name.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Annotations.WrapperAttribute.Types">
            <summary>
                Gets or sets the supported types.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Annotations.NotEmptyParamsAttribute">
            <summary>
                Indicates that the value of the marked parameter could never be <c>empty</c>
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Annotations.ViewModelTypeRequiredAttribute">
            <summary>
                When applied to a target attribute, specifies a requirement for any parameter marked with
                the target attribute to implement or inherit view model type.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Annotations.SuppressTaskBusyHandlerAttribute">
            <summary>
                When applied to the member of a type, specifies that the member is not required an TaskBusyHandler.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ApplicationSettings">
            <summary>
                Represents the static class for application settings.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ApplicationSettings.DataContractNamespace">
            <summary>
            Gets the data contract namespace.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.Platform">
            <summary>
                Gets the current platform.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.ViewModelSettings">
            <summary>
                Gets or sets the default view-model settings.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.IsDesignMode">
            <summary>
                Gets the value indicating whether the control is in design mode (running under Blend or Visual Studio).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.AddCanExecuteChangedEvent">
            <summary>
                Gets the delegate that is responsible to add can execute changed event to external provider.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.RemoveCanExecuteChangedEvent">
            <summary>
                Gets the delegate that is responsible to remove can execute changed event from external provider.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.GetDesignTimeManager">
            <summary>
                Gets the design time manager.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.InitializeDesignViewModel">
            <summary>
                Gets the delegate that initializes a design view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.ItemsSourceDecorator">
            <summary>
                Gets or sets the delegate that allows to decorate items source collection.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.SynchronizedCollectionExecutionMode">
            <summary>
                Specifies the execution mode for <c>SyncronizedNotifiableCollection</c> by default, if not set explicitly.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.NotificationCollectionMode">
            <summary>
                Specifies the mode for <c>NotifiableCollection</c> by default, if not set explicitly.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.PropertyChangeExecutionMode">
            <summary>
                Specifies the execution mode for raise property changed event in <c>NotifyPropertyChangedBase</c> by default, if
                not set explicitly.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.ViewModelObservationMode">
            <summary>
                Gets or sets the value that responsible for listen messages in child view models, if not set explicitly.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.HandleTaskExceptionWithBusyIndicator">
            <summary>
                Responsible for handling errors in the WithBusyIndicator method.
                If true errors will be processed using the <see cref="T:MugenMvvmToolkit.Interfaces.ITaskExceptionHandler"/> interface; otherwise false.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.CommandCanExecuteMode">
            <summary>
                Specifies the execution mode for <c>RaiseCanExecuteChanged</c> method in <c>IRelayCommand</c> by default.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ApplicationSettings.CommandExecutionMode">
            <summary>
                Specifies the execution mode for <c>Execute</c> method in <c>IRelayCommand</c> by default.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Attributes.DesignTimeModuleAttribute">
            <summary>
                When applied to the class, specifies that the class will be loaded in design mode.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Attributes.DisplayNameAttribute">
            <summary>
                Specifies the display name for a property, event, or method.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.DisplayNameAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Attributes.DisplayNameAttribute"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.DisplayNameAttribute.#ctor(System.Type,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Attributes.DisplayNameAttribute"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Attributes.DisplayNameAttribute.DisplayName">
            <summary>
                Gets or sets the display name.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Attributes.IgnorePropertyAttribute">
            <summary>
                When applied to the member of a type, specifies that the member is not validatable.
            </summary>
        </member>
        <member name="T:System.SerializableAttribute">
            <summary>
                Indicates that a class can be serialized. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:System.NonSerializedAttribute">
            <summary>
                Indicates that a field of a serializable class should not be serialized. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Attributes.MetadataTypeAttribute">
            <summary>
                Specifies the metadata class to associate with a data model class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.MetadataTypeAttribute.#ctor(System.Type[])">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Attributes.MetadataTypeAttribute" /> class.
            </summary>
            <param name="metadataClassTypes">The series of metadata class to reference.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.MetadataTypeAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Attributes.MetadataTypeAttribute" /> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.MetadataTypeAttribute.#ctor(System.Type,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Attributes.MetadataTypeAttribute" /> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.MetadataTypeAttribute.GetTypes(System.Type)">
            <summary>
                Gets the metadata classes that is associated with a data-model partial class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Attributes.ModelPropertyAttribute">
            <summary>
                Attribute to link a property in a model to a view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.ModelPropertyAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Attributes.ModelPropertyAttribute"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Attributes.ModelPropertyAttribute.Property">
            <summary>
                Gets the property name that holds the model object.
            </summary>
            <value>The model property name.</value>
        </member>
        <member name="T:MugenMvvmToolkit.Attributes.ViewModelAttribute">
            <summary>
                Attribute class used to specify a specific View Model derivement or visual representation to be used on the target element.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Attributes.ViewModelAttribute.#ctor(System.Type,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Attributes.ViewModelAttribute"/> class.
            </summary>
            <param name="viewModelType">The specified type of view model.</param>
            <param name="name">The name of view mapping</param>
        </member>
        <member name="P:MugenMvvmToolkit.Attributes.ViewModelAttribute.Uri">
            <summary>
                Gets the url.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Attributes.ViewModelAttribute.ViewModelType">
            <summary>
                Gets the type of view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Attributes.ViewModelAttribute.UriKind">
            <summary>
                Gets or sets the <see cref="P:MugenMvvmToolkit.Attributes.ViewModelAttribute.UriKind"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Attributes.ViewModelAttribute.Name">
            <summary>
                Gets or sets the name of view binding.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1">
            <summary>
                Represents the collection which supports custom filter and <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/>,
                <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>
                events.
            </summary>
            <typeparam name="T">The type of model.</typeparam>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1">
            <summary>
                Represents the syncronized observable collection.
            </summary>
            <typeparam name="T">The type of model.</typeparam>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Collections.INotifiableCollection">
            <summary>
                Represents the notifiable collection interface.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Collections.INotifyCollectionChanging">
            <summary>
                Notifies listeners of dynamic changes, such as when items get added and removed or the whole list is refreshed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.Collections.INotifyCollectionChanging.CollectionChanging">
            <summary>
                Occurs before the collection changes.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.ISuspendNotifications">
            <summary>
                Represents an interface for suspend notifications.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.ISuspendNotifications.SuspendNotifications">
            <summary>
                Suspends the change notifications until the returned <see cref="T:System.IDisposable"/> is disposed.
            </summary>
            <returns>An instance of token.</returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.ISuspendNotifications.IsNotificationsSuspended">
            <summary>
                Gets a value indicating whether change notifications are suspended. <c>True</c> if notifications are suspended,
                otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.INotifiableCollection.RaiseReset">
            <summary>
                Raises a <c>CollectionChanged</c> event of type reset.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.INotifiableCollection.AddRange(System.Collections.IEnumerable)">
            <summary>
                Adds the specified items to the collection without causing a change notification for all items.
                <para/>
                This method will raise a change notification at the end.
            </summary>
            <param name="collection">The collection.</param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="collection"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Collections.INotifiableCollection`1">
            <summary>
                Represents the notifiable collection interface.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.INotifiableCollection`1.RaiseReset">
            <summary>
                Raises a <c>CollectionChanged</c> event of type reset.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.INotifiableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Adds the specified items to the collection without causing a change notification for all items.
                <para/>
                This method will raise a change notification at the end.
            </summary>
            <param name="collection">The collection.</param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="collection"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.INotifiableCollection`1.Update(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Clears collection and then adds a range of IEnumerable collection.
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="F:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Locker">
            <summary>
                Gets the internal object to synchronize access to collection.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.ItemsInternal">
            <summary>
                Gets the internal collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.#ctor(System.Collections.Generic.IList{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.#ctor(MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1"/> class that contains elements
                copied from the specified collection.
            </summary>
            <param name="threadManager">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.
            </param>
            <param name="collection">
                The collection from which the elements are copied.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="collection"/> parameter cannot be null.
            </exception>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.ExclusiveLock(System.Action{MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection{`0}})">
            <summary>
            Allows to perform an action in the exclusive access to the collection.
            </summary>
            <param name="action">The specified action to invoke.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.RaiseReset">
            <summary>
            Raises a <see cref="E:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.CollectionChanged"/> event of type reset.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Update(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Clears collection and then adds a range of IEnumerable collection.
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Adds the specified items to the collection without causing a change notification for all items.
                <para/>
                This method will raise a change notification at the end.
            </summary>
            <param name="collection">The collection.</param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="collection"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.AddRange(System.Collections.IEnumerable)">
            <summary>
                Adds the specified items to the collection without causing a change notification for all items.
                <para/>
                This method will raise a change notification at the end.
            </summary>
            <param name="collection">The collection.</param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="collection"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Removes the specified items from the collection without causing a change notification for all items.
                <para/>
                This method will raise a change notification at the end.
            </summary>
            <param name="collection">The collection.</param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="collection"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.RemoveRange(System.Collections.IEnumerable)">
            <summary>
                Removes the specified items from the collection without causing a change notification for all items.
                <para/>
                This method will raise a change notification at the end.
            </summary>
            <param name="collection">The collection.</param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="collection"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Replace(`0,`0)">
            <summary>
                Replaces the specified item to new item.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.OnInitialized">
            <summary>
                Initializes default values.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.CopyToInternal(System.Array,System.Int32)">
            <summary>
                Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an
                <see
                    cref="T:System.Array" />
                , starting at a particular <see cref="T:System.Array" /> index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.ClearItemsInternal(System.Boolean@)">
            <summary>
                Removes all items from the collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.RemoveItemInternal(System.Int32,System.Boolean@)">
            <summary>
                Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
                The zero-based index of the element to remove.
            </param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.SetItemInternal(System.Int32,`0,System.Boolean@)">
            <summary>
                Replaces the element at the specified index.
            </summary>
            <param name="index">
                The zero-based index of the element to replace.
            </param>
            <param name="item">
                The new value for the element at the specified index.
            </param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.GetItemInternal(System.Int32)">
            <summary>
                Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.InsertItemInternal(System.Int32,`0,System.Boolean,System.Boolean@)">
            <summary>
                Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
                The zero-based index at which <paramref name="item" /> should be inserted.
            </param>
            <param name="item">
                The object to insert.
            </param>
            <param name="isAdd"></param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.IndexOfInternal(`0)">
            <summary>
                Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <returns>
                The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
            <param name="item">
                The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.ContainsInternal(`0)">
            <summary>
                Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
                true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />;
                otherwise, false.
            </returns>
            <param name="item">
                The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.GetEnumeratorInternal">
            <summary>
                Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
                A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.RaiseEvents">
            <summary>
                Raises events from queue of events.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.OnCollectionChanging(MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs)">
            <summary>
                Invokes the <c>CollectionChanging</c> event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Invokes the <c>CollectionChanged</c> event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                Invokes the <c>PropertyChanged</c> event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.GetCollectionChangeArgs(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
                Helper to raise CollectionChanged event to any listeners.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.GetCollectionChangeArgs(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
                Helper to raise CollectionChanged event to any listeners
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.GetCollectionChangeArgs">
            <summary>
                Helper to raise CollectionChanged event with action == Reset to any listeners
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.IsCompatibleObject(System.Object)">
            <summary>
                Checks that an object is compatible with collection type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.CheckDeserialization">
            <summary>
            OnDeserializedAttribute doesn't work with custom SerializableAttribute 
            Exception: Type '' in assembly '' has method 'Test' with an incorrect signature for the serialization attribute that it is decorated with
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.SuspendNotifications">
            <summary>
                Suspends the change notifications until the returned <see cref="T:System.IDisposable"/> is disposed.
            </summary>
            <returns>An instance of token.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Returns an enumerator that iterates through a collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
                Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />,
                starting at a particular
                <see
                    cref="T:System.Array" />
                index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#Contains(System.Object)">
            <summary>
                Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#Clear">
            <summary>
                Removes all items from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
                Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
                Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#Remove(System.Object)">
            <summary>
                Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
                Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Add(`0)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Clear">
            <summary>
                Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Contains(`0)">
            <summary>
                Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
                Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an
                <see
                    cref="T:System.Array" />
                , starting at a particular <see cref="T:System.Array" /> index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Remove(`0)">
            <summary>
                Removes the first occurrence of a specific object from the
                <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.IndexOf(`0)">
            <summary>
                Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Insert(System.Int32,`0)">
            <summary>
                Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.RemoveAt(System.Int32)">
            <summary>
                Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.ThreadManager">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.NotificationCount">
            <summary>
                Gets the number of notification elements contained in the collection.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Count">
            <summary>
                Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.BatchSize">
            <summary>
                Gets or sets the size that collection will used to notify about changes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.ExecutionMode">
            <summary>
                Specifies the execution mode.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.NotificationMode">
            <summary>
                Gets or sets the count mode.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.CountInternal">
            <summary>
                Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
                The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventsTracker">
            <summary>
                Gets the event tracker.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.IsNotificationsSuspended">
            <summary>
                Gets or sets a value indicating whether change notifications are suspended. <c>True</c> if notifications are
                suspended, otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.CollectionChanging">
            <summary>
                Occurs before the collection changes.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.CollectionChanged">
            <summary>
                Occurs when the collection changes.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.PropertyChanged">
            <summary>
                Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#ICollection#Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#ICollection#SyncRoot">
            <summary>
                Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#ICollection#IsSynchronized">
            <summary>
                Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized
                (thread safe).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
                Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#IList#IsFixedSize">
            <summary>
                Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.System#Collections#Generic#ICollection{T}#Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.Item(System.Int32)">
            <summary>
                Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventTracker">
            <summary>
                Represents the class that stores information about notification events.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventTracker.#ctor(MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventTracker"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventTracker.AddEvent(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Adds event to collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventTracker.Clear">
            <summary>
                Clears events.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventTracker.AddedCount">
            <summary>
                Gets the count of added items.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1.EventTracker.RemovedCount">
            <summary>
                Gets the count of removed items.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.#ctor(MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.#ctor(System.Collections.Generic.IList{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.UpdateFilter">
            <summary>
                Updates a filter.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.UpdateFilterInternal(System.Boolean@)">
            <summary>
                Updates a filter.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.OnSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Occurs when source collection changed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.OnInitialized">
            <summary>
                Initializes default values.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.ClearItemsInternal(System.Boolean@)">
            <summary>
                Removes all items from the collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.RemoveItemInternal(System.Int32,System.Boolean@)">
            <summary>
                Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
                The zero-based index of the element to remove.
            </param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.SetItemInternal(System.Int32,`0,System.Boolean@)">
            <summary>
                Replaces the element at the specified index.
            </summary>
            <param name="index">
                The zero-based index of the element to replace.
            </param>
            <param name="item">
                The new value for the element at the specified index.
            </param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.InsertItemInternal(System.Int32,`0,System.Boolean,System.Boolean@)">
            <summary>
                Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
                The zero-based index at which <paramref name="item" /> should be inserted.
            </param>
            <param name="item">
                The object to insert.
            </param>
            <param name="isAdd"></param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.IndexOfInternal(`0)">
            <summary>
                Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <returns>
                The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
            <param name="item">
                The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.CopyToInternal(System.Array,System.Int32)">
            <summary>
                Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an
                <see
                    cref="T:System.Array" />
                , starting at a particular <see cref="T:System.Array" /> index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.GetItemInternal(System.Int32)">
            <summary>
                Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.ContainsInternal(`0)">
            <summary>
                Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
                true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />;
                otherwise, false.
            </returns>
            <param name="item">
                The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.GetEnumeratorInternal">
            <summary>
                Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
                A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.RaiseEvents">
            <summary>
                Raises events from queue of events.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.Filter">
            <summary>
                Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.SourceCollection">
            <summary>
                Gets the source <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.AlwaysReset">
            <summary>
                Indicates that always need reset internal collection on any changes in original collection.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.CountInternal">
            <summary>
                Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
                The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="E:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1.CollectionChanging">
            <summary>
                Occurs before the collection changes.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2">
            <summary>
                Represents a collection of keys and values.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Add(`0,`1)">
            <summary>
                Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null for reference types.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Clear">
            <summary>
                Removes all keys and values from the <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.ContainsKey(`0)">
            <summary>
                Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains the specified key.
            </summary>
            <returns>
                true if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified key;
                otherwise, false.
            </returns>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Remove(`0)">
            <summary>
                Removes the value with the specified key from the <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </summary>
            <returns>
                true if the element is successfully found and removed; otherwise, false.  This method returns false if
                <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </returns>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.TryGetValue(`0,`1@)">
            <summary>
                Gets the value associated with the specified key.
            </summary>
            <returns>
                true if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified key;
                otherwise, false.
            </returns>
            <param name="key">The key of the value to get.</param>
            <param name="value">
                When this method returns, contains the value associated with the specified key, if the key is
                found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is
                passed uninitialized.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </summary>
            <returns>
                A <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /> structure for the
                <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.ToArray">
            <summary>
                Copies the elements of the <see cref="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2"/> to a new array.
            </summary>
            <returns>
                An array containing copies of the elements of the <see cref="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Equals(`0,`0)">
            <summary>
                Determines whether the specified objects are equal.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.GetHashCode(`0)">
            <summary>
                Returns a hash code for the specified object.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Initialize(System.Int32)">
            <summary>
                Initialize the capacity.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Count">
            <summary>
                Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </summary>
            <returns>
                The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Item(`0)">
            <summary>
                Gets or sets the value associated with the specified key.
            </summary>
            <returns>
                The value associated with the specified key. If the specified key is not found, a get operation throws a
                <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with
                the specified key.
            </returns>
            <param name="key">The key of the value to get or set.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Enumerator">
            <summary>
                Enumerates the elements of a <see cref="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Enumerator.MoveNext">
            <summary>
                Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </summary>
            <returns>
                true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of
                the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Enumerator.Dispose">
            <summary>
                Releases all resources used by the <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.LightDictionaryBase`2.Enumerator.Current">
            <summary>
                Gets the element at the current position of the enumerator.
            </summary>
            <returns>
                The element in the <see cref="T:System.Collections.Generic.Dictionary`2" /> at the current position of the
                enumerator.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.OrderedListInternal`2">
            <summary>
                Represents a collection of key/value pairs that are sorted by key based on the associated
                <see
                    cref="T:System.Collections.Generic.IComparer`1" />
                implementation.
            </summary>
            <typeparam name="TKey">
                The type of keys in the collection.
            </typeparam>
            <typeparam name="TValue">
                The type of values in the collection.
            </typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/> class that is empty, has the
                default initial capacity, and uses the default
                <see cref="T:System.Collections.Generic.IComparer`1"/>
                .
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`2.Add(`0,`1)">
            <summary>
                Adds an element with the specified key and value into the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`2.Clear">
            <summary>
                Removes all elements from the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`2.IndexOfKey(`0)">
            <summary>
                Searches for the specified key and returns the zero-based index within the entire
                <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>
                .
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`2.IndexOfValue(`1)">
            <summary>
                Searches for the specified value and returns the zero-based index of the first occurrence within the entire
                <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>
                .
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`2.RemoveAt(System.Int32)">
            <summary>
                Removes the element at the specified index of the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`2.Capacity">
            <summary>
                Gets or sets the number of elements that the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/> can contain.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`2.Keys">
            <summary>
                Gets a collection containing the keys in the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`2.Values">
            <summary>
                Gets a collection containing the values in the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`2.Count">
            <summary>
                Gets the number of key/value pairs contained in the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`2"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.OrderedListInternal`1">
            <summary>
                Represents a collection of objects that are sorted by key based on the associated
                <see
                    cref="T:System.Collections.Generic.IComparer`1" />
                implementation. Duplicate items (items that compare equal to each other) are allows in an OrderedListInternal.
            </summary>
            <typeparam name="T">
                The type of item in the collection.
            </typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#Add(System.Object)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#Contains(System.Object)">
            <summary>
                Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#Clear">
            <summary>
                Removes all items from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
                Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
                Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#Remove(System.Object)">
            <summary>
                Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
                Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.CopyTo(System.Array,System.Int32)">
            <summary>
                Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />,
                starting at a particular <see cref="T:System.Array" /> index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Returns an enumerator that iterates through a collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.Clear">
            <summary>
                Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.Contains(`0)">
            <summary>
                Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.CopyTo(`0[],System.Int32)">
            <summary>
                Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an
                <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.Remove(`0)">
            <summary>
                Removes the first occurrence of a specific object from the
                <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.IndexOf(`0)">
            <summary>
                Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.Insert(System.Int32,`0)">
            <summary>
                Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.RemoveAt(System.Int32)">
            <summary>
                Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedListInternal`1.Add(`0)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.Comparer">
            <summary>
                Gets the comparer.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.Capacity">
            <summary>
                Gets or sets the number of elements that the <see cref="T:MugenMvvmToolkit.Collections.OrderedListInternal`1"/> can contain.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#Item(System.Int32)">
            <summary>
                Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#IList#IsFixedSize">
            <summary>
                Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#ICollection#Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#ICollection#SyncRoot">
            <summary>
                Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.System#Collections#ICollection#IsSynchronized">
            <summary>
                Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized
                (thread safe).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedListInternal`1.Item(System.Int32)">
            <summary>
                Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1">
            <summary>
                Represents the sorted syncronized observable collection, duplicate items (items that compare equal to each other)
                are allows in an OrderedNotifiableCollection.
            </summary>
            <typeparam name="T">The type of model.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Comparison{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.#ctor(System.Comparison{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.#ctor(System.Collections.Generic.IComparer{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1"/> class that contains elements
                copied from the specified collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.OnInitialized">
            <summary>
                Initializes default values.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.SetItemInternal(System.Int32,`0,System.Boolean@)">
            <summary>
                Replaces the element at the specified index.
            </summary>
            <param name="index">
                The zero-based index of the element to replace.
            </param>
            <param name="item">
                The new value for the element at the specified index.
            </param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.InsertItemInternal(System.Int32,`0,System.Boolean,System.Boolean@)">
            <summary>
                Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
                The zero-based index at which <paramref name="item" /> should be inserted.
            </param>
            <param name="item">
                The object to insert.
            </param>
            <param name="isAdd"></param>
            <param name="shouldRaiseEvents"></param>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.Comparer">
            <summary>
                Gets the comparer.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.ValidateOnInsert">
            <summary>
                Gets or sets the value that indicates that collection should check index on insert.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.OrderedNotifiableCollection`1.Items">
            <summary>
                Gets the internal collection.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Collections.TrackingCollection">
            <summary>
                Represents the collection that can track changes.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection">
            <summary>
                Represents the collection that can track changes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.Contains(System.Object)">
            <summary>
                Determines whether the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.Contains``1(System.Func{MugenMvvmToolkit.Models.TrackingEntity{``0},System.Boolean})">
            <summary>
                Determines whether the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.Find``1(System.Func{MugenMvvmToolkit.Models.TrackingEntity{``0},System.Boolean})">
            <summary>
                Gets an array of all objects with specified entity state.
            </summary>
            <returns>
                An array of objects.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.GetChanges">
            <summary>
                Gets the changes of objects.
            </summary>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.IList`1"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.GetChanges(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Gets the changes of objects.
            </summary>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.IList`1"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.GetState(System.Object)">
            <summary>
                Gets the object state.
            </summary>
            <param name="value">The specified value.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Models.EntityState"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.UpdateState(System.Object,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Updates a state in the specified value.
            </summary>
            <param name="value">The specified value to update state.</param>
            <param name="state">The state value.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
            <returns>
                If <c>true</c> the state was changed; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.Clear">
            <summary>
                Removes all items from the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.Clone">
            <summary>
                Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.StateTransitionManager">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.IStateTransitionManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/>.
            </summary>
            <returns>
                The number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection.HasChanges">
            <summary>
                Gets a value indicating whether the collection has changes, including new, deleted, or modified values.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.#ctor(MugenMvvmToolkit.Interfaces.IStateTransitionManager,System.Collections.Generic.IEqualityComparer{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.TrackingCollection"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.#ctor(System.Collections.Generic.IEnumerable{System.Object},MugenMvvmToolkit.Models.EntityState,MugenMvvmToolkit.Interfaces.IStateTransitionManager,System.Collections.Generic.IEqualityComparer{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.TrackingCollection"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,MugenMvvmToolkit.Models.EntityState}},MugenMvvmToolkit.Interfaces.IStateTransitionManager,System.Collections.Generic.IEqualityComparer{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.TrackingCollection"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
                A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
                An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.Contains(System.Object)">
            <summary>
                Determines whether the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.Contains``1(System.Func{MugenMvvmToolkit.Models.TrackingEntity{``0},System.Boolean})">
            <summary>
                Determines whether the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/> contains a specific value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.Find``1(System.Func{MugenMvvmToolkit.Models.TrackingEntity{``0},System.Boolean})">
            <summary>
                Gets an array of all objects with specified entity state.
            </summary>
            <returns>
                An array of objects.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.GetChanges">
            <summary>
                Gets the changes of objects.
            </summary>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.IList`1"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.GetChanges(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Gets the changes of objects.
            </summary>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.IList`1"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.GetState(System.Object)">
            <summary>
                Gets the object state.
            </summary>
            <param name="value">The specified value.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Models.EntityState"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.UpdateState(System.Object,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Updates a state in the specified value.
            </summary>
            <param name="value">The specified value to update state.</param>
            <param name="state">The state value.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
            <returns>
                If <c>true</c> the state was changed; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.Clear">
            <summary>
                Removes all items from the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.Clone">
            <summary>
                Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.UpdateStateInternal(System.Object,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Updates the state of value.
            </summary>
            <param name="value">The specified value.</param>
            <param name="state">The specified state.</param>
            <param name="validate">The flag indicating that state will be validated before assigned.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.ClearInternal">
            <summary>
                Removes all items from the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Collections.TrackingCollection.CloneInternal">
            <summary>
                Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.TrackingCollection.Items">
            <summary>
                Gets the internal dictionary with entity and their states.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.TrackingCollection.Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/>.
            </summary>
            <returns>
                The number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.TrackingCollection.StateTransitionManager">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.IStateTransitionManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Collections.TrackingCollection.HasChanges">
            <summary>
                Gets a value indicating whether the collection has changes, including new, deleted, or modified values.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.MvvmExtensions">
            <summary>
                Represents the extensions method for mvvm application.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetRoot(MugenMvvmToolkit.Interfaces.IIocContainer)">
            <summary>
                Gets a root container.
            </summary>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Get``1(MugenMvvmToolkit.Interfaces.IIocContainer,System.String,MugenMvvmToolkit.Interfaces.IIocParameter[])">
            <summary>
                Gets an instance of the specified service.
            </summary>
            <typeparam name="T">The specified service type.</typeparam>
            <param name="iocContainer">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </param>
            <param name="parameters">The specified parameters.</param>
            <param name="name">The specified binding name.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.TryGet``1(MugenMvvmToolkit.Interfaces.IIocContainer,``0@,System.String,MugenMvvmToolkit.Interfaces.IIocParameter[])">
            <summary>
               Tries to get an instance of the specified service.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.TryGet(MugenMvvmToolkit.Interfaces.IIocContainer,System.Type,System.Object@,System.String,MugenMvvmToolkit.Interfaces.IIocParameter[])">
            <summary>
               Tries to get an instance of the specified service.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetAll``1(MugenMvvmToolkit.Interfaces.IIocContainer,System.String,MugenMvvmToolkit.Interfaces.IIocParameter[])">
            <summary>
                Gets all instances of the specified service.
            </summary>
            <param name="iocContainer">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </param>
            <param name="name">The specified binding name.</param>
            <param name="parameters">The specified parameters.</param>
            <returns>An instance of the service.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Bind``2(MugenMvvmToolkit.Interfaces.IIocContainer,MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Indicates that the service should be bound to the specified type.
            </summary>
            <typeparam name="T">The specified service type.</typeparam>
            <typeparam name="TTypeTo">The specified to type</typeparam>
            <param name="iocContainer">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </param>
            <param name="lifecycle">
                Specified <see cref="T:MugenMvvmToolkit.Models.IoC.DependencyLifecycle"/>
            </param>
            <param name="name">The specified binding name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.BindToConstant``1(MugenMvvmToolkit.Interfaces.IIocContainer,``0,System.String)">
            <summary>
                Indicates that the service should be bound to the specified constant value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="iocContainer">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </param>
            <param name="constValue">The specified constant value.</param>
            <param name="name">The specified binding name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.BindToMethod``1(MugenMvvmToolkit.Interfaces.IIocContainer,System.Func{MugenMvvmToolkit.Interfaces.IIocContainer,System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.IIocParameter},``0},MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Indicates that the service should be bound to the specified method.
            </summary>
            <param name="iocContainer">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </param>
            <param name="methodBindingDelegate">The specified factory delegate.</param>
            <param name="lifecycle">
                The specified <see cref="T:MugenMvvmToolkit.Models.IoC.DependencyLifecycle"/>
            </param>
            <param name="name">The specified binding name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.BindToBindingInfo``1(MugenMvvmToolkit.Interfaces.IIocContainer,MugenMvvmToolkit.Models.IoC.BindingInfo{``0})">
            <summary>
                Indicates that the service should be bound to the specified constant value.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Unbind``1(MugenMvvmToolkit.Interfaces.IIocContainer)">
            <summary>
                Unregisters all bindings with specified conditions for the specified service.
            </summary>
            <typeparam name="T">The specified service type.</typeparam>
            <param name="iocContainer">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.CanResolve``1(MugenMvvmToolkit.Interfaces.IIocContainer,System.String)">
            <summary>
                Determines whether the specified request can be resolved.
            </summary>
            <param name="iocContainer">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.</param>
            <param name="name">The specified binding name.</param>
            <returns>
                <c>True</c> if the specified service has been resolved; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetService``1(System.IServiceProvider)">
            <summary>
                Gets an instance of the specified service.
            </summary>
            <typeparam name="T">The specified service type.</typeparam>
            <param name="serviceProvider">
                The specified <see cref="T:System.IServiceProvider"/>.
            </param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Flatten(System.Exception,System.Boolean)">
            <summary>
                Flatten the exception and inner exception data.
            </summary>
            <param name="exception">Exception</param>
            <param name="includeStackTrace">True to include stack trace at end</param>
            <returns>String with Message and all InnerException messages appended together</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Flatten(System.Exception,System.String,System.Boolean)">
            <summary>
                Flatten the exception and inner exception data.
            </summary>
            <param name="exception">Exception</param>
            <param name="message">Any string prefix to add</param>
            <param name="includeStackTrace">True to include stack trace at end</param>
            <returns>String with Message and all InnerException messages appended together</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.SafeContains(System.String,System.String,System.StringComparison)">
            <summary>
                Returns a value indicating whether the specified <see cref="T:System.String"/> object occurs within this string.
                Not throws an exception.
            </summary>
            <param name="source">The specified source string.</param>
            <param name="value">The string to seek. </param>
            <param name="stringComparison">The specified <see cref="T:System.StringComparison"/>.</param>
            <returns>
                true if the <paramref name="value"/> parameter occurs within this string, or if <paramref name="value"/> is the
                empty string (""); otherwise, false.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.FromResult``1(``0)">
            <summary>
                Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that's completed successfully with the specified result.
            </summary>
            <returns>
                The successfully completed task.
            </returns>
            <param name="result">The result to store into the completed task.</param>
            <typeparam name="TResult">The type of the result returned by the task.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.TryExecuteSynchronously``1(System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Tries to inline task callback method.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.TryExecuteSynchronously``2(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``1},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Tries to inline task callback method.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.TryExecuteSynchronously(System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Tries to inline task callback method.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IndexOf(System.Collections.IEnumerable,System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ElementAtIndex(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Returns the element at a specified index in a sequence.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToArrayFast``1(System.Collections.Generic.IList{``0})">
            <summary>
                Creates an array from a <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
                An array that contains the elements from the input sequence.
            </returns>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> to create an array from.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToArrayFast``2(System.Collections.Generic.IList{``0},System.Func{``0,``1})">
            <summary>
                Creates an array from a <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
                An array that contains the elements from the input sequence.
            </returns>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> to create an array from.</param>
            <param name="selector">
                A transform function to apply to each source element; the second parameter of the function
                represents the index of the source element.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToArrayFast``2(System.Collections.Generic.ICollection{``0},System.Func{``0,``1})">
            <summary>
                Creates an array from a <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
                An array that contains the elements from the input sequence.
            </returns>
            <param name="collection">An <see cref="T:System.Collections.Generic.ICollection`1"/> to create an array from.</param>
            <param name="selector">
                A transform function to apply to each source element; the second parameter of the function
                represents the index of the source element.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToArrayFast``1(System.Collections.Generic.ICollection{``0})">
            <summary>
                Creates an array from a <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
                An array that contains the elements from the input sequence.
            </returns>
            <param name="collection">An <see cref="T:System.Collections.Generic.ICollection`1"/> to create an array from.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.AddIfNotNull``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
                Adds an item to the collection if the item is not null.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
                Returns <c>true</c> if and only if <paramref name="collection" /> is empty (has no elements) or null.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsNullOrEmpty(System.Collections.IEnumerable)">
            <summary>
                Returns <c>true</c> if and only if <paramref name="enumerable" /> is empty (has no elements) or null.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsEmpty(System.Collections.IEnumerable)">
            <summary>
                Returns <c>true</c> if and only if <paramref name="enumerable" /> is empty (has no elements).
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Count(System.Collections.IEnumerable)">
            <summary>
                Returns the number of elements in a sequence.
            </summary>
            <returns>
                The number of elements in the input sequence.
            </returns>
            <param name="source">A sequence that contains elements to be counted.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
                Enumerates a collection and executes a predicate against each item
            </summary>
            <typeparam name="T">Type of elements</typeparam>
            <param name="collection">The specified collection.</param>
            <param name="action">Action to execute on each element</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Adds a range of IEnumerable collection to an existing Collection.
            </summary>
            <typeparam name="T">Type of collection</typeparam>
            <param name="collection">The specified collection.</param>
            <param name="items">Items to add</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
                Adds all items from the source into the target dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.RemoveRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Removes a range of IEnumerable collection to an existing Collection.
            </summary>
            <typeparam name="T">Type of collection</typeparam>
            <param name="collection">The specified collection.</param>
            <param name="items">Items to remove</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToSynchronizedCollection``1(System.Collections.Generic.IEnumerable{``0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Converts a collection to the <see cref="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1"/> collection.
            </summary>
            <typeparam name="T">The type of collection.</typeparam>
            <param name="collection">The specified collection.</param>
            <param name="threadManager">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.</param>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Collections.SynchronizedNotifiableCollection`1"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToFilterableCollection``1(System.Collections.Generic.IEnumerable{``0},MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Converts a collection to the <see cref="T:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1"/> collection.
            </summary>
            <typeparam name="T">The type of collection.</typeparam>
            <param name="collection">The specified collection.</param>
            <param name="threadManager">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.</param>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Collections.FilterableNotifiableCollection`1"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ContinueWith(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation,System.Action{MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ContinueWith``1(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation,System.Func{MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult,``0})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ContinueWith``1(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``0},System.Action{MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{``0}})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ContinueWith``2(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``0},System.Func{MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{``0},``1})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ContinueWith``2(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``1},System.Action{``0,MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{``1}})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ContinueWith``3(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``1},System.Func{``0,MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{``1},``2})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.AsTask``1(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``0})">
            <summary>
            Converts an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1"/> to an instance of <see cref="T:System.Threading.Tasks.Task`1"/>
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.AsTask(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation)">
            <summary>
            Converts an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1"/> to an instance of <see cref="T:System.Threading.Tasks.Task`1"/>
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetAwaiter(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetAwaiter``1(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``0})">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter`1"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToArray(System.IO.Stream,System.Int32)">
            <summary>
            Writes the stream contents to a byte array.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.SerializeToString(MugenMvvmToolkit.Interfaces.ISerializer,System.Object)">
            <summary>
                Serializes data to string.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Deserialize``1(MugenMvvmToolkit.Interfaces.ISerializer,System.String)">
            <summary>
                Deserializes data using string.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Sleep(System.Int32)">
            <summary>
            Suspends the current thread for a specified time.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Sleep(System.TimeSpan)">
            <summary>
            Suspends the current thread for a specified time.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ShowAsync(MugenMvvmToolkit.Interfaces.Presenters.IToastPresenter,System.Object,MugenMvvmToolkit.Models.ToastDuration,MugenMvvmToolkit.Models.ToastPosition,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified message.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.LoadModules(MugenMvvmToolkit.Interfaces.Models.IModuleContext,System.Collections.Generic.IEnumerable{MugenMvvmToolkit.Interfaces.IModule})">
            <summary>
            Loads the specified modules using module context;
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetWeakReference(System.Object)">
            <summary>
            Gets an instance of <see cref="T:System.WeakReference"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToDictionary(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Converts the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> to the <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToDataContext(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})">
            <summary>
                Converts the <see cref="T:System.Collections.Generic.IDictionary`2"/> to the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.AddIfNotNull``1(MugenMvvmToolkit.Interfaces.Models.IDataContext,MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetData``1(MugenMvvmToolkit.Interfaces.Models.IDataContext,MugenMvvmToolkit.Models.DataConstant{``0},System.Boolean)">
            <summary>
                Gets the data using the specified data constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.PropertyNameEqual``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Checks whether the properties are equal.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <param name="getProperty">The expression to get property.</param>
            <returns>If true property is equal, otherwise false.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.PropertyNameEqual``1(System.ComponentModel.PropertyChangedEventArgs,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Checks whether the properties are equal.
            </summary>
            <param name="propertyChangedEvent">The specified property changed event.</param>
            <param name="getProperty">The expression to get property.</param>
            <returns>If true property is equal, otherwise false.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.PropertyNameEqual``1(MugenMvvmToolkit.Models.Messages.AsyncValidationMessage,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Checks whether the properties are equal.
            </summary>
            <param name="validationMessage">The specified property changed event.</param>
            <param name="getProperty">The expression to get property.</param>
            <returns>If true property equals, otherwise false.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.PropertyNameEqual``1(MugenMvvmToolkit.Models.Messages.DataErrorsChangedMessage,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Checks whether the properties are equal.
            </summary>
            <param name="errorsChangedMessage">The specified property changed event.</param>
            <param name="getProperty">The expression to get property.</param>
            <returns>If true property equals, otherwise false.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Gets property name from the specified expression.
            </summary>
            <typeparam name="T">The type of model.</typeparam>
            <param name="expression">The specified expression.</param>
            <returns>An instance of string.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.GetPropertyName``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Gets property name from the specified expression.
            </summary>
            <typeparam name="T">The type of model.</typeparam>
            <param name="item">The specified model.</param>
            <param name="expression">The specified expression.</param>
            <returns>An instance of string.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.SetStateForAll(MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Sets the specified state for all items in the collection.
            </summary>
            <param name="collection">The specified collection.</param>
            <param name="state">The state value.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.SetStateForAll(MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection,System.Func{MugenMvvmToolkit.Models.TrackingEntity{System.Object},System.Boolean},MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Updates states of entities.
            </summary>
            <param name="collection">The specified collection.</param>
            <param name="predicate">The specified condition.</param>
            <param name="state">The specified state.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.UpdateState(MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection,System.Object,MugenMvvmToolkit.Models.EntityState,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Updates state of entity.
            </summary>
            <param name="collection">The specified collection.</param>
            <param name="item">The item to add.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
            <param name="newState">The state if item is new.</param>
            <param name="updateState">The state if item exist in collection.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.UpdateState(MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection,MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry,System.Boolean)">
            <summary>
                Updates state of entity.
            </summary>
            <param name="collection">The specified collection.</param>
            <param name="item">The item to add.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.UpdateStates(MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection,System.Collections.IEnumerable,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Updates states of entities.
            </summary>
            <param name="collection">The specified collection.</param>
            <param name="items">The range of values.</param>
            <param name="state">The specified state.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.UpdateStates(MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection,System.Collections.Generic.IEnumerable{MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry},System.Boolean)">
            <summary>
                Updates states of entities.
            </summary>
            <param name="collection">The specified collection.</param>
            <param name="items">Items to add</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.Detach(MugenMvvmToolkit.Interfaces.Collections.ITrackingCollection,System.Object)">
            <summary>
                Removes the object from the tracking collection.
            </summary>
            <param name="collection">The specified collection</param>
            <param name="entity">Object to be detached.</param>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsUnchanged(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity is unchanged.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsAdded(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been added.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsModified(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been modified.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsDetached(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been detached (either not yet attached or removed via RemoveFromManager).
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsDeleted(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been deleted (but the change has not yet been persisted to the data source).
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsAddedOrModified(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been either added or modified.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsAddedOrModifiedOrUnchanged(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been either added or modified.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsAddedOrModifiedOrDeleted(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been added, modified or deleted.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsDeletedOrDetached(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been either deleted or detached.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.IsDeletedOrModified(MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Whether this Entity has been either deleted or modified
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.MvvmExtensions.ToNonReadOnly(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
            Converts the data context to non-read only.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.MvvmExtensions.ShortDuration">
            <summary>
            Gets or sets the default duration of <see cref="F:MugenMvvmToolkit.Models.ToastDuration.Short"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.MvvmExtensions.LongDuration">
            <summary>
            Gets or sets the default duration of <see cref="F:MugenMvvmToolkit.Models.ToastDuration.Long"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ReflectionExtensions">
            <summary>
                Represents the reflection extensions.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.CreateWeakEventHandler``3(``0,System.Action{``0,System.Object,``1},System.Action{System.Object,``2},System.Func{MugenMvvmToolkit.ReflectionExtensions.IWeakEventHandler{``1},``2},System.Boolean)">
            <summary>
                Returns a weak-reference version of a delegate.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.MakeWeakPropertyChangedHandler``1(``0,System.Action{``0,System.Object,System.ComponentModel.PropertyChangedEventArgs},System.Boolean)">
            <summary>
                Returns a weak-reference version of a delegate.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.MakeWeakErrorsChangedHandler``1(``0,System.Action{``0,System.Object,System.ComponentModel.DataErrorsChangedEventArgs},System.Boolean)">
            <summary>
                Returns a weak-reference version of a delegate.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.SafeGetTypes(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Gets the types defined in this assembly.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.InvokeExt(System.Reflection.ConstructorInfo,System.Object[])">
            <summary>
                Invokes the constructor using the current <see cref="T:MugenMvvmToolkit.Interfaces.IReflectionManager"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.InvokeExt(System.Reflection.MethodInfo,System.Object,System.Object[])">
            <summary>
                Invokes the method using the current <see cref="T:MugenMvvmToolkit.Interfaces.IReflectionManager"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.GetValueExt``1(System.Reflection.MemberInfo,System.Object)">
            <summary>
                Gets the value using the current <see cref="T:MugenMvvmToolkit.Interfaces.IReflectionManager"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.SetValueExt``1(System.Reflection.MemberInfo,System.Object,``0)">
            <summary>
                Sets the value using the current <see cref="T:MugenMvvmToolkit.Interfaces.IReflectionManager"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.GetDataContext(System.Object)">
            <summary>
            Tries to get data context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.SetDataContext(System.Object,System.Object)">
            <summary>
            Tries to set data context.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ReflectionExtensions.IWeakEventHandler`1">
            <summary>
            Represents the weak reference event wrapper.
            </summary>
            <typeparam name="TArg"></typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.ReflectionExtensions.IWeakEventHandler`1.Handle(System.Object,`0)">
            <summary>
            Invokes the event.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.ViewModelExtensions">
            <summary>
                Represents the extensions method for view models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.WithBusyIndicator``1(``0,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Boolean,System.Object)">
            <summary>
                Invokes a task and wrap it to busy indicator.
            </summary>
            <param name="task">The specified <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.</param>
            <param name="message">The specified message for the <c>BusyMessage</c> property.</param>
            <param name="handleException">
                Responsible for handling errors if true errors will be processed using the
                <see cref="T:MugenMvvmToolkit.Interfaces.ITaskExceptionHandler"/> interface; otherwise false
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.WithBusyIndicator``1(``0,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Object,System.Nullable{System.Boolean})">
            <summary>
                Invokes a task and wrap it to busy indicator.
            </summary>
            <param name="task">The specified <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.</param>
            <param name="message">The specified message for the <c>BusyMessage</c> property.</param>
            <param name="handleException">
                Responsible for handling errors if true errors will be processed using the
                <see cref="T:MugenMvvmToolkit.Interfaces.ITaskExceptionHandler"/> interface; otherwise false
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.WrapTo``1(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view-model to a specified type.
            </summary>
            <param name="viewModel">The specified view-model.</param>
            <param name="context">The specified data context</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.WrapTo``1(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Wraps the specified view-model to a specified type.
            </summary>
            <param name="viewModel">The specified view-model.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.ShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="parameters">The specified parameters.</param>
            <returns>The operation result task, this task returns the result of the operation.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.ShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="context">The specified context.</param>
            <returns>The operation result task, this task returns the result of the operation.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.ShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.String,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="viewName">The name of view.</param>
            <param name="context">The specified context.</param>
            <returns>The operation result task, this task returns the result of the operation.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.ShowAsync``1(``0,System.Action{``0,MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{System.Boolean}},System.String,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="completeCallback">The specified callback.</param>
            <param name="viewName">The name of view.</param>
            <param name="context">The specified context.</param>
            <returns>The operation result task, this task returns the result of the operation.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel(MugenMvvmToolkit.Interfaces.IViewModelProvider,MugenMvvmToolkit.Models.GetViewModelDelegate{MugenMvvmToolkit.Interfaces.ViewModels.IViewModel},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="getViewModel">The specified delegate to create view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel(MugenMvvmToolkit.Interfaces.IViewModelProvider,MugenMvvmToolkit.Models.GetViewModelDelegate{MugenMvvmToolkit.Interfaces.ViewModels.IViewModel},MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="getViewModel">The specified delegate to create view model.</param>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel``1(MugenMvvmToolkit.Interfaces.IViewModelProvider,MugenMvvmToolkit.Models.GetViewModelDelegate{``0},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="getViewModelGeneric">The specified delegate to create view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel``1(MugenMvvmToolkit.Interfaces.IViewModelProvider,MugenMvvmToolkit.Models.GetViewModelDelegate{``0},MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="getViewModelGeneric">The specified delegate to create view model.</param>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel(MugenMvvmToolkit.Interfaces.IViewModelProvider,System.Type,MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelType">The type of view model.</param>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel(MugenMvvmToolkit.Interfaces.IViewModelProvider,System.Type,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelType">The type of view model.</param>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel``1(MugenMvvmToolkit.Interfaces.IViewModelProvider,MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <typeparam name="T">The type of view model.</typeparam>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.GetViewModel``1(MugenMvvmToolkit.Interfaces.IViewModelProvider,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <typeparam name="T">The type of view model.</typeparam>
            <param name="viewModelProvider">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</param>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.ValidateAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Updates information about errors in the specified property.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.DisableValidationAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Disable validation for the specified property.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.DisableValidationAsync(MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel,System.String)">
            <summary>
                Disable validation for the specified property.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.EnableValidationAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Enable validation for the specified property.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.EnableValidationAsync(MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel,System.String)">
            <summary>
                Enable validation for the specified property.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.MoveUpSelectedItem(MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel)">
            <summary>
                Moves up the selected item in the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.MoveDownSelectedItem(MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel)">
            <summary>
                Moves down the selected item in the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.CanMoveUpSelectedItem(MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel)">
            <summary>
                Determines whether the view model can move up the selected item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelExtensions.CanMoveDownSelectedItem(MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel)">
            <summary>
                Determines whether the view model can move down the selected item.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ActionToken">
            <summary>
                Represents the action token.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ActionToken.#ctor(System.Action)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ActionToken"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ActionToken.#ctor(System.Action{System.Object},System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ActionToken"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ActionToken.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.AttachedValueProviderDefault">
            <summary>
                Represents the attached value provider class, that allows to attach a value to an object using path.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase">
            <summary>
                Represents the attached value provider class, that allows to attach a value to an object using path.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider">
            <summary>
                Represents the attached value provider interface, that allows to attach a value to an object using path.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.AddOrUpdate``2(``0,System.String,``1,MugenMvvmToolkit.Models.UpdateValueDelegate{``0,``1,``1,System.Object},System.Object)">
            <summary>
                Adds an attached property value to the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property does not already
                exist, or to
                update an attached property in the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property
                already exists.
            </summary>
            <param name="item">The item to be added or whose value should be updated</param>
            <param name="path">The attached property path.</param>
            <param name="addValue">The value to be added for an absent property</param>
            <param name="updateValueFactory">
                The function used to generate a new value for an existing property based on the item's existing value
            </param>
            <param name="state">The specified state object.</param>
            <returns>
                The new value for the property. This will be either be addValue (if the property was absent) or the result of
                updateValueFactory (if the property was present).
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.AddOrUpdate``2(``0,System.String,System.Func{``0,System.Object,``1},MugenMvvmToolkit.Models.UpdateValueDelegate{``0,System.Func{``0,System.Object,``1},``1,System.Object},System.Object)">
            <summary>
                Uses the specified functions to add an attached property value to the
                <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the item does not already exist, or to
                update an attached property in the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property
                already exists.
            </summary>
            <param name="item">The item to be added or whose value should be updated</param>
            <param name="path">The attached property path.</param>
            <param name="addValueFactory">The function used to generate a value for an absent property</param>
            <param name="updateValueFactory">
                The function used to generate a new value for an existing property based on the item's existing value
            </param>
            <param name="state">The specified state object.</param>
            <returns>
                The new value for the property. This will be either be the result of addValueFactory (if the property was absent)
                or the
                result of updateValueFactory (if the property was present).
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.GetOrAdd``2(``0,System.String,System.Func{``0,System.Object,``1},System.Object)">
            <summary>
                Adds an attached property value to the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property does not already
                exist.
            </summary>
            <param name="item">The item of the element to add.</param>
            <param name="path">The attached property path.</param>
            <param name="valueFactory">The function used to generate a value for the item</param>
            <param name="state">The specified state object.</param>
            <returns>
                The value for the property. This will be either the existing value for the property if the property is already in
                the provider,
                or the new value if the property was not in the provider
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.GetOrAdd``1(System.Object,System.String,``0)">
            <summary>
                Adds an attached property value to the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property does not already
                exist.
            </summary>
            <param name="item">The item of the element to add.</param>
            <param name="path">The attached property path.</param>
            <param name="value">the value to be added, if the item does not already exist</param>
            <returns>
                The value for the property. This will be either the existing value for the property if the property is already in
                the provider,
                or the new value if the property was not in the provider
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.TryGetValue``1(System.Object,System.String,``0@)">
            <summary>
                Attempts to get the value associated with the specified property from the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/>.
            </summary>
            <returns>
                true if the property was found in the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/>; otherwise, false.
            </returns>
            <param name="item">The item of the value to get.</param>
            <param name="path">The attached property path.</param>
            <param name="value">
                When this method returns, contains the object from the
                <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> that has the specified property, or null value, if the operation failed.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.GetValue``1(System.Object,System.String,System.Boolean)">
            <summary>
                Gets the value associated with the specified property.
            </summary>
            <returns>
                The value of the property.
            </returns>
            <param name="item">The item of the value to get.</param>
            <param name="path">The path of the value to get.</param>
            <param name="throwOnError">
                true to throw an exception if the member cannot be found; false to return null. Specifying
                false also suppresses some other exception conditions, but not all of them.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.SetValue(System.Object,System.String,System.Object)">
            <summary>
                Sets the value associated with the specified property.
            </summary>
            <returns>
                The value of the property.
            </returns>
            <param name="item">The item of the value to set.</param>
            <param name="path">The path of the value to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.GetValues(System.Object,System.Func{System.String,System.Object,System.Boolean})">
            <summary>
                Gets the property values for the specified item
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.Clear(System.Object)">
            <summary>
                Clears all attached properties in the specified item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IAttachedValueProvider.Clear(System.Object,System.String)">
            <summary>
                Clears all attached properties in the specified item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.AddOrUpdate``2(``0,System.String,``1,MugenMvvmToolkit.Models.UpdateValueDelegate{``0,``1,``1,System.Object},System.Object)">
            <summary>
                Adds an attached property value to the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property does not already
                exist, or to
                update an attached property in the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property
                already exists.
            </summary>
            <param name="item">The item to be added or whose value should be updated</param>
            <param name="path">The attached property path.</param>
            <param name="addValue">The value to be added for an absent property</param>
            <param name="updateValueFactory">
                The function used to generate a new value for an existing property based on the item's existing value
            </param>
            <param name="state">The specified state object.</param>
            <returns>
                The new value for the property. This will be either be addValue (if the property was absent) or the result of
                updateValueFactory (if the property was present).
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.AddOrUpdate``2(``0,System.String,System.Func{``0,System.Object,``1},MugenMvvmToolkit.Models.UpdateValueDelegate{``0,System.Func{``0,System.Object,``1},``1,System.Object},System.Object)">
            <summary>
                Uses the specified functions to add an attached property value to the
                <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the item does not already exist, or to
                update an attached property in the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property
                already exists.
            </summary>
            <param name="item">The item to be added or whose value should be updated</param>
            <param name="path">The attached property path.</param>
            <param name="addValueFactory">The function used to generate a value for an absent property</param>
            <param name="updateValueFactory">
                The function used to generate a new value for an existing property based on the item's existing value
            </param>
            <param name="state">The specified state object.</param>
            <returns>
                The new value for the property. This will be either be the result of addValueFactory (if the property was absent)
                or the
                result of updateValueFactory (if the property was present).
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.GetOrAdd``2(``0,System.String,System.Func{``0,System.Object,``1},System.Object)">
            <summary>
                Adds an attached property value to the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property does not already
                exist.
            </summary>
            <param name="item">The item of the element to add.</param>
            <param name="path">The attached property path.</param>
            <param name="valueFactory">The function used to generate a value for the item</param>
            <param name="state">The specified state object.</param>
            <returns>
                The value for the property. This will be either the existing value for the property if the property is already in
                the provider,
                or the new value if the property was not in the provider
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.GetOrAdd``1(System.Object,System.String,``0)">
            <summary>
                Adds an attached property value to the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> if the property does not already
                exist.
            </summary>
            <param name="item">The item of the element to add.</param>
            <param name="path">The attached property path.</param>
            <param name="value">the value to be added, if the item does not already exist</param>
            <returns>
                The value for the property. This will be either the existing value for the property if the property is already in
                the provider,
                or the new value if the property was not in the provider
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.TryGetValue``1(System.Object,System.String,``0@)">
            <summary>
                Attempts to get the value associated with the specified property from the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/>.
            </summary>
            <returns>
                true if the property was found in the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/>; otherwise, false.
            </returns>
            <param name="item">The item of the value to get.</param>
            <param name="path">The attached property path.</param>
            <param name="value">
                When this method returns, contains the object from the
                <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> that has the specified property, or null value, if the operation failed.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.GetValue``1(System.Object,System.String,System.Boolean)">
            <summary>
                Gets the value associated with the specified property.
            </summary>
            <returns>
                The value of the property.
            </returns>
            <param name="item">The item of the value to get.</param>
            <param name="path">The path of the value to get.</param>
            <param name="throwOnError">
                true to throw an exception if the member cannot be found; false to return null. Specifying
                false also suppresses some other exception conditions, but not all of them.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.SetValue(System.Object,System.String,System.Object)">
            <summary>
                Sets the value associated with the specified property.
            </summary>
            <returns>
                The value of the property.
            </returns>
            <param name="item">The item of the value to set.</param>
            <param name="path">The path of the value to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.GetValues(System.Object,System.Func{System.String,System.Object,System.Boolean})">
            <summary>
                Gets the property values for the specified item
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.Clear(System.Object)">
            <summary>
                Clears all attached properties in the specified item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.Clear(System.Object,System.String)">
            <summary>
                Clears all attached properties in the specified item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.ClearInternal(System.Object)">
            <summary>
                Clears all attached properties in the specified item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderBase.GetOrAddAttachedValues(System.Object,System.Boolean)">
            <summary>
                Gets or adds the attached values container.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderDefault.ClearInternal(System.Object)">
            <summary>
                Clears all attached properties in the specified item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderDefault.GetOrAddAttachedValues(System.Object,System.Boolean)">
            <summary>
                Gets or adds the attached values container.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderDefault.AttachedValueDictionary.Equals(System.String,System.String)">
            <summary>
                Determines whether the specified objects are equal.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.AttachedValueProviderDefault.AttachedValueDictionary.GetHashCode(System.String)">
            <summary>
                Returns a hash code for the specified object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.BootstrapperBase">
            <summary>
                Represents the base class that is used to start MVVM application.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.BootstrapperBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.Initialize(System.Boolean)">
            <summary>
                Initializes the current bootstraper.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.Stop">
            <summary>
                Stops the current bootstraper.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.OnInitialize">
            <summary>
                Initializes the current bootstraper.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.OnStop">
            <summary>
                Stops the current bootstraper.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.LoadModules">
            <summary>
                Loads application modules.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.UnloadModules">
            <summary>
                Unloads application modules.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.CreateViewModelSettings">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings"/>.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.GetModules">
            <summary>
                Gets the application modules.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.GetAssemblies">
            <summary>
                Gets the application assemblies.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.CreateModuleContext(MugenMvvmToolkit.Interfaces.IIocContainer)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IModuleContext"/>.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IModuleContext"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.BootstrapperBase.CreateIocContainer">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.</returns>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.BootstrapperBase.IsInitialized">
            <summary>
                Gets the initialized state of the current bootstraper.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.BootstrapperBase.Platform">
            <summary>
                Gets the current platform.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.BootstrapperBase.IocContainer">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1">
            <summary>
                Represents the async operation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1">
            <summary>
                Represents the async operation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation">
            <summary>
                Represents the async operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation.Wait">
            <summary>
                Waits for the operation to complete execution.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation.Wait(System.Int32)">
            <summary>
                Waits for the operation to complete execution.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation.ContinueWith(MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation)">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation.ContinueWith``1(MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation{``0})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation.ToOperationCallback">
            <summary>
                Converts the current <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1"/> to the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation.IsCompleted">
            <summary>
                Gets whether the operation has completed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation.Result">
            <summary>
                Gets the operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1.ContinueWith(MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation{`0})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1.ContinueWith``1(MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation{`0,``0})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1.Result">
            <summary>
                Gets the operation result.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IContinuation">
            <summary>
                Represents the base interfaces for all continuations.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IContinuation.ToSerializableCallback">
            <summary>
                Tries to convert current operation to an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.ISerializableCallback"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation">
            <summary>
                Represents an action to run when the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation"/> completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation.Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the action using the specified operation result.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation`1">
            <summary>
                Represents an action to run when the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1"/> completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation`1.Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{`0})">
            <summary>
                Invokes the action using the specified operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.SetResult(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{`0})">
            <summary>
                Sets the result of this operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.TrySetResult(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{`0})">
            <summary>
                Tries to sets the result of this operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.ToSerializableCallback">
            <summary>
                Tries to convert current operation to an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.ISerializableCallback"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.MugenMvvmToolkit#Interfaces#Callbacks#IActionContinuation#Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the action using the specified operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.MugenMvvmToolkit#Interfaces#Callbacks#IActionContinuation{TResult}#Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{`0})">
            <summary>
                Invokes the action using the specified operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.Wait">
            <summary>
                Waits for the operation to complete execution.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.Wait(System.Int32)">
            <summary>
                Waits for the operation to complete execution.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.ContinueWith(MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation)">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.ContinueWith``1(MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation{``0})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.ContinueWith(MugenMvvmToolkit.Interfaces.Callbacks.IActionContinuation{`0})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.ContinueWith``1(MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation{`0,``0})">
            <summary>
                Creates a continuation that executes when the target operation completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.ToOperationCallback">
            <summary>
                Converts the current <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1"/> to the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.IsCompleted">
            <summary>
                Gets whether the operation has completed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.Result">
            <summary>
                Gets the operation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1.MugenMvvmToolkit#Interfaces#Callbacks#IAsyncOperation#Result">
            <summary>
                Gets the operation result.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback">
            <summary>
                Represents the operation callback.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback.Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the callback using the specified operation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback.IsSerializable">
            <summary>
                Gets a value indicating whether the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback"/> is serializable.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperationCallback.Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the callback using the specified operation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperationCallback.IsSerializable">
            <summary>
                Gets a value indicating whether the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback"/> is serializable.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperationSerializableCallback">
            <summary>
                Represents the multi serializable callback.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.ISerializableCallback">
            <summary>
                Represents the serializable callback.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.ISerializableCallback.Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the callback using the specified operation result.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Callbacks.DefaultAsyncOperationAwaiterFactory">
            <summary>
                Rerpresets the default factory that allows to create the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter"/>'s.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiterFactory">
            <summary>
                Rerpresets the factory that allows to create the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter"/>'s.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiterFactory.CreateAwaiter(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation,System.Boolean,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiterFactory.CreateAwaiter``1(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``0},System.Boolean,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter`1"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.DefaultAsyncOperationAwaiterFactory.CreateAwaiter(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation,System.Boolean,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.DefaultAsyncOperationAwaiterFactory.CreateAwaiter``1(MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation{``0},System.Boolean,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter`1"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.DefaultAsyncOperationAwaiterFactory.Instance">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiterFactory"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter`1">
            <summary>
                Represents the async operation awaiter.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter`1.GetResult">
            <summary>
                Gets the operation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter`1.IsCompleted">
            <summary>
                Gets whether the operation has completed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter">
            <summary>
                Represents the async operation awaiter.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter.GetResult">
            <summary>
                Gets the operation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiter.IsCompleted">
            <summary>
                Gets whether the operation has completed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation`1">
            <summary>
                Represents a function to run when the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation"/> completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation`1.Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the function using the specified operation result.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation`2">
            <summary>
                Represents a function to run when the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperation`1"/> completes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IFunctionContinuation`2.Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{`0})">
            <summary>
                Invokes the function using the specified operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.DelegateContinuation`3.ToSerializableCallback">
            <summary>
                Tries to convert current operation to an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.ISerializableCallback"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.DelegateContinuation`3.MugenMvvmToolkit#Interfaces#Callbacks#IActionContinuation#Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the action using the specified operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.DelegateContinuation`3.MugenMvvmToolkit#Interfaces#Callbacks#IActionContinuation{TIn}#Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{`0})">
            <summary>
                Invokes the action using the specified operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.DelegateContinuation`3.MugenMvvmToolkit#Interfaces#Callbacks#IFunctionContinuation{TIn@TOut}#Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult{`0})">
            <summary>
                Invokes the function using the specified operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.DelegateContinuation`3.MugenMvvmToolkit#Interfaces#Callbacks#IFunctionContinuation{TOut}#Invoke(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Invokes the function using the specified operation result.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager">
            <summary>
                Represents the callback manager.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager">
            <summary>
                Represents the callback manager.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager.Register(MugenMvvmToolkit.Models.OperationType,System.Object,MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Registers the specified operation callback.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager.SetResult(System.Object,MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Sets the result of operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.Register(MugenMvvmToolkit.Models.OperationType,System.Object,MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Registers the specified operation callback.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.SetResult(System.Object,MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Sets the result of operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.RegisterInternal(MugenMvvmToolkit.Models.OperationType,System.Object,MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Registers the specified operation callback.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.SetResultInternal(System.Object,MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Sets the result of operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.CallbackDictionary.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Collections.LightDictionaryBase`2"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.CallbackDictionary.Equals(System.String,System.String)">
            <summary>
                Determines whether the specified objects are equal.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationCallbackManager.CallbackDictionary.GetHashCode(System.String)">
            <summary>
                Returns a hash code for the specified object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult">
            <summary>
                Represents the result of operation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult">
            <summary>
                Represents the result of operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult.Operation">
            <summary>
                Gets the type of operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult.Source">
            <summary>
                Gets the source of the operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult.Exception">
            <summary>
                Gets the exception that caused the operartion to end prematurely.
                If the operation completed successfully or has not yet thrown any exceptions, this will return null.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult.IsCanceled">
            <summary>
                Gets whether the operation has completed execution due to being canceled.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult.IsFaulted">
            <summary>
                Gets whether the operation completed due to an unhandled exception.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult.Result">
            <summary>
                Gets the result value of this operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult.OperationContext">
            <summary>
                Gets the context of the operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.#ctor(MugenMvvmToolkit.Models.OperationType,System.Object,System.Exception,System.Boolean,System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.Convert``1(MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Converts an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> to it generic representation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.Convert(System.Type,MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult)">
            <summary>
                Converts an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> to it generic representation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.CreateCancelResult``1(MugenMvvmToolkit.Models.OperationType,System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> with canceled state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.CreateCancelResult(System.Type,MugenMvvmToolkit.Models.OperationType,System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> with canceled state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.CreateErrorResult``1(MugenMvvmToolkit.Models.OperationType,System.Object,System.Exception,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> with faulted state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.CreateErrorResult(System.Type,MugenMvvmToolkit.Models.OperationType,System.Object,System.Exception,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> with faulted state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.CreateResult``1(MugenMvvmToolkit.Models.OperationType,System.Object,``0,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> with operation result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.CreateResult(System.Type,MugenMvvmToolkit.Models.OperationType,System.Object,System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult"/> with operation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.Operation">
            <summary>
                Gets the type of operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.Source">
            <summary>
                Gets the sender of the operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.Exception">
            <summary>
                Gets the exception that caused the operartion to end prematurely.
                If the operation completed successfully or has not yet thrown any exceptions, this will return null.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.IsCanceled">
            <summary>
                Gets whether operation has completed execution due to being canceled.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.IsFaulted">
            <summary>
                Gets whether the operation completed due to an unhandled exception.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.Result">
            <summary>
                Gets the result value of this operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.OperationContext">
            <summary>
                Gets the context of the operation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult`1">
            <summary>
                Represents the result of operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Callbacks.IOperationResult`1.Result">
            <summary>
                Gets the result value of this operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.OperationResultImpl`1.#ctor(MugenMvvmToolkit.Models.OperationType,System.Object,System.Exception,System.Boolean,`0,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Callbacks.OperationResult.OperationResultImpl`1.Result">
            <summary>
                Gets the result value of this operation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.DelegateComparer`1">
            <summary>
                Represents the delegate comparer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.DelegateComparer`1.#ctor(System.Comparison{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.DelegateComparer`1"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.DisplayNameProvider">
            <summary>
                Represents the class that provide display name of object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IDisplayNameProvider">
            <summary>
                Represents interface that provide display name of object.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IDisplayNameProvider.GetDisplayNameAccessor(System.Reflection.MemberInfo)">
            <summary>
                Gets a display name for the specified type using the specified member.
            </summary>
            <param name="memberInfo">The specified member.</param>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.DisplayNameProvider.GetDisplayNameAccessor(System.Reflection.MemberInfo)">
            <summary>
                Gets a display name for the specified type using the specified member.
            </summary>
            <param name="memberInfo">The specified member.</param>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.DisplayNameProvider.GetDisplayNameInternal(System.Reflection.MemberInfo)">
            <summary>
                Gets a display name for the specified type using the specified member.
            </summary>
            <param name="memberInfo">The specified member.</param>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.EmptyDesignTimeManager">
            <summary>
                Represents the empty design time manager.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IDesignTimeManager">
            <summary>
                Represents the interface for the design time manager.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IDesignTimeManager.Initialize">
            <summary>
                Initializes the current design time manager.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IDesignTimeManager.InitializeViewModel(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Initializes the view model in design mode.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IDesignTimeManager.IsDesignMode">
            <summary>
                Gets the value indicating whether the control is in design mode (running under Blend or Visual Studio).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IDesignTimeManager.Priority">
            <summary>
                Gets the load-priority.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IDesignTimeManager.Platform">
            <summary>
                Gets the current platform.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EmptyDesignTimeManager.Initialize">
            <summary>
                Initializes the current design time manager.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EmptyDesignTimeManager.InitializeViewModel(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Initializes the view model in design mode.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.EmptyDesignTimeManager.IsDesignMode">
            <summary>
                Gets the value indicating whether the control is in design mode (running under Blend or Visual Studio).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.EmptyDesignTimeManager.Priority">
            <summary>
                Gets the load-priority.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.EmptyDesignTimeManager.Platform">
            <summary>
                Gets the current platform.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.EntityStateManager">
            <summary>
                Represents the base entity state manager that uses the property to save state.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IEntityStateManager">
            <summary>
                Represents the interface that provides methods to manage entity state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IEntityStateManager.CreateSnapshot(System.Object)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot"/>
            </summary>
            <param name="entity">The specified entity to create snapshot.</param>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot"/></returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.CreateSnapshot(System.Object)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot"/>
            </summary>
            <param name="entity">The specified entity to create snapshot.</param>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot"/></returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.GetPropertiesInternal(System.Object)">
            <summary>
                Gets properties for save state.
            </summary>
            <param name="entity">The specified entity.</param>
            <returns>
                A series of instances of <see cref="T:System.Reflection.PropertyInfo"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.GetProperties(System.Object,System.Boolean@)">
            <summary>
                Gets properties for save state.
            </summary>
            <param name="entity">The specified entity.</param>
            <param name="shouldCache"></param>
            <returns>
                A series of instances of <see cref="T:System.Reflection.PropertyInfo"/>.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot">
            <summary>
                Represents the entity state snapshot.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot.Restore(System.Object)">
            <summary>
                Restores the state of entity.
            </summary>
            <param name="entity">The specified entity to restore state.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot.HasChanges(System.Object)">
            <summary>
                Gets a value indicating whether the entity has changes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot.HasChanges(System.Object,System.String)">
            <summary>
                Gets a value indicating whether the entity has changes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot.Dump(System.Object)">
            <summary>
                Dumps the state of object.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IEntitySnapshot.SupportChangeDetection">
            <summary>
                Gets a value indicating whether the snapshot supports change detection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.EntitySnapshot.Equals(System.String,System.String)">
            <summary>
                Determines whether the specified objects are equal.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.EntitySnapshot.GetHashCode(System.String)">
            <summary>
                Returns a hash code for the specified object.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.EntitySnapshot.Restore(System.Object)">
            <summary>
                Restores the state of entity.
            </summary>
            <param name="entity">The specified entity to restore state.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.EntitySnapshot.HasChanges(System.Object)">
            <summary>
                Gets a value indicating whether the entity has changes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.EntitySnapshot.HasChanges(System.Object,System.String)">
            <summary>
                Gets a value indicating whether the entity has changes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.EntitySnapshot.Dump(System.Object)">
            <summary>
                Dumps the state of object.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.EntityStateManager.EntitySnapshot.SupportChangeDetection">
            <summary>
                Gets a value indicating whether the snapshot supports change detection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EntityStateManager.SavedState.#ctor(System.Reflection.PropertyInfo,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.EntityStateManager.SavedState"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.EventAggregator">
            <summary>
                Enables loosely-coupled publication of and subscription to events.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IEventAggregator">
            <summary>
                Enables loosely-coupled publication of and subscription to events.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IHandler`1">
            <summary>
                Represents the interface that can handle an event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IHandler`1.Handle(System.Object,`0)">
            <summary>
                Handles the message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">Information about event.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IObservable">
            <summary>
                Defines a provider for push-based notification.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IObservable.Subscribe(System.Object)">
            <summary>
                Subscribes an instance to events.
            </summary>
            <param name="instance">The instance to subscribe for event publication.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IObservable.Unsubscribe(System.Object)">
            <summary>
                Unsubscribes the instance from all events.
            </summary>
            <param name="instance">The instance to unsubscribe.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IEventAggregator.Publish(System.Object,System.Object)">
            <summary>
                Publishes a message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">The message instance.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IEventAggregator.GetObservers">
            <summary>
                Gets the collection of observers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IEventAggregator.Clear">
            <summary>
                Removes all listeners.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.EventAggregator"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.EventAggregator"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.Subscribe(System.Object)">
            <summary>
                Subscribes an instance to events.
            </summary>
            <param name="instance">The instance to subscribe for event publication.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.Unsubscribe(System.Object)">
            <summary>
                Unsubscribes the instance from all events.
            </summary>
            <param name="instance">The instance to unsubscribe.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.Publish(System.Object,System.Object)">
            <summary>
                Publishes a message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">The message instance.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.GetObservers">
            <summary>
                Gets the collection of observers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.Clear">
            <summary>
                Removes all listeners.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.Handle(System.Object,System.Object)">
            <summary>
                Handles the message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">Information about event.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventAggregator.PublishToItem(System.Object,System.Object,System.Object)">
            <summary>
                Notifies listener about an event.
            </summary>
            <param name="target">The specified listener to notify.</param>
            <param name="sender">The object that raised the event.</param>
            <param name="message">The message instance.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.EventTable">
            <summary>
                Represents the class to manage events.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventTable.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.EventTable"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventTable.AddHandler``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds an event handler.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventTable.RemoveHandler``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Removes an event handler.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventTable.Raise``1(MugenMvvmToolkit.Models.DataConstant{``0},System.Action{``0},System.Boolean,MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Raises an event by key.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventTable.Raise``1(MugenMvvmToolkit.Models.DataConstant,System.Action{``0},System.Boolean,MugenMvvmToolkit.Interfaces.IThreadManager)">
            <summary>
                Raises an event by key.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.EventTable.Clear">
            <summary>
                Clears the event table.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager">
            <summary>
                Represents the reflection access provider that uses the <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IReflectionManager">
            <summary>
                Represents the reflection access provider.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IReflectionManager.TryCreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)">
            <summary>
               Tries to creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument.
            </summary>
            <returns>
                A delegate of the specified type that represents the specified static method of the specified class.
            </returns>
            <param name="delegateType">The <see cref="T:System.Type" /> of delegate to create. </param>
            <param name="target">
                The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />
                .
            </param>
            <param name="method">The name of the static method that the delegate is to represent. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IReflectionManager.GetActivatorDelegate(System.Reflection.ConstructorInfo)">
            <summary>
                Gets a delegate to create an object using a <see cref="T:System.Reflection.ConstructorInfo"/>.
            </summary>
            <param name="constructor">
                The specified <see cref="T:System.Reflection.ConstructorInfo"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Func`2"/>
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IReflectionManager.GetMethodDelegate(System.Reflection.MethodInfo)">
            <summary>
                Gets a delegate to call the specified <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="method">
                The specified <see cref="T:System.Reflection.MethodInfo"/>
            </param>
            <returns>
                An instance of <see cref="T:System.Func`3"/>
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IReflectionManager.GetMethodDelegate(System.Type,System.Reflection.MethodInfo)">
            <summary>
                Gets a delegate to call the specified <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="delegateType">The type of delegate.</param>
            <param name="method">
                The specified <see cref="T:System.Reflection.MethodInfo"/>
            </param>
            <returns>
                An instance of delegate.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IReflectionManager.GetMemberGetter``1(System.Reflection.MemberInfo)">
            <summary>
                Gets a delegate to get a value in the specified <see cref="T:System.Reflection.MemberInfo"/>
            </summary>
            <typeparam name="TType">Type of the value.</typeparam>
            <param name="member">
                The specified <see cref="T:System.Reflection.MemberInfo"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IReflectionManager.GetMemberSetter``1(System.Reflection.MemberInfo)">
            <summary>
                Gets a delegate to set specified value in the specified <see cref="T:System.Reflection.MemberInfo"/> in a value type target, can be
                used with reference type.
            </summary>
            <typeparam name="TType">Type of the value.</typeparam>
            <param name="member">
                The specified <see cref="T:System.Reflection.MemberInfo"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Action`2"/>
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.TryCreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)">
            <summary>
               Tries to creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument.
            </summary>
            <returns>
                A delegate of the specified type that represents the specified static method of the specified class.
            </returns>
            <param name="delegateType">The <see cref="T:System.Type" /> of delegate to create. </param>
            <param name="target">
                The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />
                .
            </param>
            <param name="method">The name of the static method that the delegate is to represent. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.GetActivatorDelegate(System.Reflection.ConstructorInfo)">
            <summary>
                Gets a delegate to create an object using a <see cref="T:System.Reflection.ConstructorInfo"/>.
            </summary>
            <param name="constructor">
                The specified <see cref="T:System.Reflection.ConstructorInfo"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Func`2"/>
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.GetMethodDelegate(System.Reflection.MethodInfo)">
            <summary>
                Gets a delegate to call the specified <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="method">
                The specified <see cref="T:System.Reflection.MethodInfo"/>
            </param>
            <returns>
                An instance of <see cref="T:System.Func`3"/>
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.GetMethodDelegate(System.Type,System.Reflection.MethodInfo)">
            <summary>
                Gets a delegate to call the specified <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="delegateType">The type of delegate.</param>
            <param name="method">
                The specified <see cref="T:System.Reflection.MethodInfo"/>
            </param>
            <returns>
                An instance of delegate.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.GetMemberGetter``1(System.Reflection.MemberInfo)">
            <summary>
                Gets a delegate to get a value in the specified <see cref="T:System.Reflection.MemberInfo"/>
            </summary>
            <typeparam name="TType">Type of the value.</typeparam>
            <param name="member">
                The specified <see cref="T:System.Reflection.MemberInfo"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.GetMemberSetter``1(System.Reflection.MemberInfo)">
            <summary>
                Gets a delegate to set specified value in the specified <see cref="T:System.Reflection.MemberInfo"/> in a value type target, can be
                used with reference type.
            </summary>
            <typeparam name="TType">Type of the value.</typeparam>
            <param name="member">
                The specified <see cref="T:System.Reflection.MemberInfo"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Action`2"/>
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Creates the binary expression that represents an assign statement.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.TryCreateMethodDelegate(System.Type,System.Reflection.MethodInfo)">
            <summary>
            Tries to create method delegate.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.CreateLambdaExpressionByType">
            <summary>
            Gets or sets the delegate that allows to create an instance of <see cref="T:System.Linq.Expressions.LambdaExpression"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.CreateLambdaExpression">
            <summary>
            Gets or sets the delegate that allows to create an instance of <see cref="T:System.Linq.Expressions.LambdaExpression"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKeyComparer">
            <summary>
            Represents the key cache comparer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKeyComparer.Equals(MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKey,MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKey)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKeyComparer.GetHashCode(MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKey)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <returns>
            A hash code for the specified object.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> for which a hash code is to be returned.</param><exception cref="T:System.ArgumentNullException">The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.</exception>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKey">
            <summary>
            Represents the key cache structure.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKey.#ctor(System.Reflection.MethodInfo,System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ExpressionReflectionManager.MethodDelegateCacheKey"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.InitializationModuleBase">
            <summary>
                Represents the class that is used to initialize the IOC adapter.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ModuleBase">
            <summary>
                Represents the base class that is used to initialize ioc bindings.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IModule">
            <summary>
                Represents the interface that is used to initialize MVVM application.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IModule.Load(MugenMvvmToolkit.Interfaces.Models.IModuleContext)">
            <summary>
                Loads the current module.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IModule.Unload(MugenMvvmToolkit.Interfaces.Models.IModuleContext)">
            <summary>
                Unloads the current module.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IModule.Priority">
            <summary>
                Gets the priority.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ModuleBase.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ModuleBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ModuleBase.#ctor(System.Boolean,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ModuleBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ModuleBase.Load(MugenMvvmToolkit.Interfaces.Models.IModuleContext)">
            <summary>
                Loads the current module.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ModuleBase.Unload(MugenMvvmToolkit.Interfaces.Models.IModuleContext)">
            <summary>
                Unloads the current module.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ModuleBase.LoadInternal">
            <summary>
                Loads the current module.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ModuleBase.UnloadInternal">
            <summary>
                Unloads the current module.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ModuleBase.Context">
            <summary>
                Gets the current context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ModuleBase.Mode">
            <summary>
                Gets the load mode.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ModuleBase.IocContainer">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ModuleBase.Priority">
            <summary>
                Gets the priority.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.DefaultPriority">
            <summary>
                Gets the default priority.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.InitializationModuleBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.LoadInternal">
            <summary>
                Loads the current module.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.UnloadInternal">
            <summary>
                Unloads the current module.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetAttachedValueProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IAttachedValueProvider"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetReflectionManager">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IReflectionManager"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IReflectionManager"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetVisualStateManager">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IVisualStateManager"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IVisualStateManager"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetDisplayNameProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IDisplayNameProvider"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IDisplayNameProvider"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetViewMappingProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IViewMappingProvider"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IViewMappingProvider"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetViewManager">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IViewManager"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IViewManager"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetViewModelProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetViewModelPresenter">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetMessagePresenter">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IMessagePresenter"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IMessagePresenter"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetToastPresenter">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IToastPresenter"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IToastPresenter"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetWrapperManager">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IWrapperManager"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IWrapperManager"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetEventAggregator">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IEventAggregator"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IEventAggregator"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetValidationElementProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElementProvider"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElementProvider"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetEntityStateProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IEntityStateManager"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IEntityStateManager"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetValidatorProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetTracer">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.ITracer"/> that will be used by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ITracer"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetTaskExceptionHandler">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.ITaskExceptionHandler"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ITaskExceptionHandler"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetThreadManager">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetNavigationProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetNavigationCachePolicy">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationCachePolicy"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationCachePolicy"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetSerializer">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.ISerializer"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ISerializer"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetOperationCallbackManager">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.InitializationModuleBase.GetAsyncOperationAwaiterFactory">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiterFactory"/> that will be used in the current application by default.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiterFactory"/>.</returns>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1">
            <summary>
                Represents the base mediator class for dialog view.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Mediators.IWindowViewMediator">
            <summary>
                Represents the mediator interface for the dialog view.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Mediators.IWindowViewMediator.Show(MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="callback">The specified callback, if any.</param>
            <param name="context">The specified context.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Mediators.IWindowViewMediator.CloseAsync(System.Object)">
            <summary>
                Tries to close view-model.
            </summary>
            <param name="parameter">The specified parameter, if any.</param>
            <returns>An instance of task with result.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Mediators.IWindowViewMediator.Update(MugenMvvmToolkit.Interfaces.Views.IWindowViewBase,System.Boolean,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Updates the current view, for example android platform use this api to update view after recreate a dialog
                fragment.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Mediators.IWindowViewMediator.IsOpen">
            <summary>
                Gets a value that indicates whether the dialog is visible. true if the dialog is visible; otherwise, false.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Mediators.IWindowViewMediator.View">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Views.IWindowViewBase"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Mediators.IWindowViewMediator.ViewModel">
            <summary>
                Gets the underlying view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.#ctor(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.IThreadManager,MugenMvvmToolkit.Interfaces.IViewManager,MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.Show(MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="callback">The specified callback, if any.</param>
            <param name="context">The specified context.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.CloseAsync(System.Object)">
            <summary>
                Tries to close view-model.
            </summary>
            <param name="parameter">The specified parameter, if any.</param>
            <returns>An instance of task with result.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.MugenMvvmToolkit#Interfaces#Mediators#IWindowViewMediator#Update(MugenMvvmToolkit.Interfaces.Views.IWindowViewBase,System.Boolean,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Updates the current view, for example android platform use this api to update view after recreate a dialog
                fragment.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.ShowView(`0,System.Boolean)">
            <summary>
                Shows the view in the specified mode.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.CloseView(`0)">
            <summary>
                Closes the view.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.InitializeView(`0)">
            <summary>
                Initializes the specified dialog view.
            </summary>
            <param name="windowView">The specified window-view to initialize.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.CleanupView(`0)">
            <summary>
                Clears the event subscribtions from the specified view.
            </summary>
            <param name="windowView">The specified window-view to dispose.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.OnShow(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Occurs when view model is showed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.OnClosing(System.Object)">
            <summary>
                Occurs when view model is closing.
            </summary>
            <returns>
                If <c>true</c> - close, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.OnClosed(System.Object,MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Occurs when view model is closed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.OnViewClosing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
                Occurred on closing view.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.OnViewClosed(System.Object,System.EventArgs)">
            <summary>
                Occured when view is closed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.View">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Views.IWindowViewBase"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.IsClosing">
            <summary>
                Gets the value that indicates that curren view model is closing.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.ThreadManager">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.OperationCallbackManager">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.IsOpen">
            <summary>
                Gets a value that indicates whether the dialog is visible. true if the dialog is visible; otherwise, false.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.MugenMvvmToolkit#Interfaces#Mediators#IWindowViewMediator#View">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Views.IWindowViewBase"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Mediators.WindowViewMediatorBase`1.ViewModel">
            <summary>
                Gets the underlying view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Navigation.DefaultNavigationCachePolicy">
            <summary>
                Represents the view model navigation cache policy, that clear the cache during back navigation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationCachePolicy">
            <summary>
                Represents the view model navigation cache policy.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Navigation.INavigationCachePolicy.TryCacheViewModel(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext,MugenMvvmToolkit.Interfaces.Views.IView,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Tries to save a view model in the cache.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Navigation.INavigationCachePolicy.TryTakeViewModelFromCache(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext,MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Tries to get view model from cache, and delete it from the cache.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Navigation.INavigationCachePolicy.Invalidate(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Removes the view model from cache.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Navigation.INavigationCachePolicy.Invalidate">
            <summary>
                Clears the cache.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Navigation.DefaultNavigationCachePolicy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Navigation.DefaultNavigationCachePolicy"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Navigation.DefaultNavigationCachePolicy.TryCacheViewModel(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext,MugenMvvmToolkit.Interfaces.Views.IView,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Tries to save a view model in the cache.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Navigation.DefaultNavigationCachePolicy.TryTakeViewModelFromCache(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext,MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Tries to get view model from the cache, and delete it from the cache.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Navigation.DefaultNavigationCachePolicy.Invalidate(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Removes the view model from cache.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Navigation.DefaultNavigationCachePolicy.Invalidate">
            <summary>
                Clears the cache.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter">
            <summary>
                Represents the service that allows to show a view model using multi view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Presenters.IDynamicViewModelPresenter">
            <summary>
                Represents the service that allows to show a view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Presenters.IDynamicViewModelPresenter.TryShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext,MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter)">
            <summary>
                Tries to show the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="context">The specified context.</param>
            <param name="parentPresenter">The parent presenter, if any.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Presenters.IDynamicViewModelPresenter.Priority">
            <summary>
                Gets the presenter priority.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter.#ctor(MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel,MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter.TryShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext,MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter)">
            <summary>
                Tries to show the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="context">The specified context.</param>
            <param name="parentPresenter">The parent presenter, if any.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter.CanShow(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext,MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter)">
            <summary>
                Determines that presenter can handle request.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter.MultiViewModelOnViewModelClosed(System.Object,MugenMvvmToolkit.Models.EventArg.ValueEventArgs{MugenMvvmToolkit.Interfaces.ViewModels.IViewModel})">
            <summary>
                Occurs when a view model is closed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter.MultiViewModel">
            <summary>
                Get the current <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter.CallbackManager">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallbackManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Presenters.DynamicMultiViewModelPresenter.Priority">
            <summary>
                Gets the presenter priority.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Presenters.DynamicViewModelNavigationPresenter">
            <summary>
                Represents the service that allows to show a view model using <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.DynamicViewModelNavigationPresenter.TryShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext,MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter)">
            <summary>
                Tries to show the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="context">The specified context.</param>
            <param name="parentPresenter">The parent presenter, if any.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Presenters.DynamicViewModelNavigationPresenter.Priority">
            <summary>
                Gets the presenter priority.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter">
            <summary>
                Represents the service that allows to show a view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter">
            <summary>
                Represents the service that allows to show a view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter.ShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="context">The specified context.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Presenters.IViewModelPresenter.DynamicPresenters">
            <summary>
                Gets the collection of <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IDynamicViewModelPresenter"/>.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.DefaultNavigationPresenterPriority">
            <summary>
                Gets the default navigtion presenter priority.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.DefaultMultiViewModelPresenterPriority">
            <summary>
                Gets the default view model presenter priority.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.DefaultWindowPresenterPriority">
            <summary>
                Gets the default window presenter priority.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.ShowAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
            <param name="viewModel">The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to show.</param>
            <param name="context">The specified context.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.OnDynamicPresenterAdded(MugenMvvmToolkit.Interfaces.Presenters.IDynamicViewModelPresenter)">
            <summary>
                Occurs when presenter added.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.OnDynamicPresenterRemoved(MugenMvvmToolkit.Interfaces.Presenters.IDynamicViewModelPresenter)">
            <summary>
                Occurs when presenter removed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Presenters.ViewModelPresenter.DynamicPresenters">
            <summary>
                Gets the collection of <see cref="T:MugenMvvmToolkit.Interfaces.Presenters.IDynamicViewModelPresenter"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ReferenceEqualityComparer">
            <summary>
                Represents the reference equality comparer
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.ReferenceEqualityComparer.Instance">
            <summary>
                Gets an instance of <see cref="T:MugenMvvmToolkit.Infrastructure.ReferenceEqualityComparer"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Serializer">
            <summary>
                Represents the serializer interface that allows to serialize and deserialize objects.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ISerializer">
            <summary>
                Represents the serializer interface that allows to serialize and deserialize objects.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ISerializer.AddKnownType(System.Type)">
            <summary>
                Adds a known type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ISerializer.RemoveKnownType(System.Type)">
            <summary>
                Adds a known type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ISerializer.Serialize(System.Object)">
            <summary>
                Serializes data to stream.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ISerializer.Deserialize(System.IO.Stream)">
            <summary>
                Deserializes data using stream.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Serializer.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Serializer"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Serializer.AddKnownType(System.Type)">
            <summary>
                Adds a known type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Serializer.RemoveKnownType(System.Type)">
            <summary>
                Adds a known type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Serializer.Serialize(System.Object)">
            <summary>
                Serializes data to stream.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Serializer.Deserialize(System.IO.Stream)">
            <summary>
                Deserializes data using stream.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.StateTransitionManager">
            <summary>
                Represents the class that provides methods for transiting one state to another state.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IStateTransitionManager">
            <summary>
                Represents the interface that provides methods for transiting one state to another state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IStateTransitionManager.ChangeState(MugenMvvmToolkit.Models.EntityState,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Changes state from one state to another state.
            </summary>
            <param name="from">The specified state from.</param>
            <param name="to">The specified state to.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
            <returns>An instance of state, if any.</returns>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.StateTransitionManager.Instance">
            <summary>
                Gets the instance of <see cref="T:MugenMvvmToolkit.Infrastructure.StateTransitionManager"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.StateTransitionManager.ChangeState(MugenMvvmToolkit.Models.EntityState,MugenMvvmToolkit.Models.EntityState,System.Boolean)">
            <summary>
                Changes state from one state to another state.
            </summary>
            <param name="from">The specified state from.</param>
            <param name="to">The specified state to.</param>
            <param name="validateState">The flag indicating that state will be validated before assigned.</param>
            <returns>An instance of state, if any.</returns>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.SynchronousThreadManager">
            <summary>
                Represents the implemenation of <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/> that can be used for unit-test, all action invokes in
                the same thread.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IThreadManager">
            <summary>
                Represents the interface for work with threads.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IThreadManager.InvokeOnUiThread(System.Action,System.Nullable{MugenMvvmToolkit.Models.OperationPriority},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Invokes an action on the UI thread synchronous.
            </summary>
            <param name="action">
                The specified <see cref="T:System.Action"/>.
            </param>
            <param name="priority">The specified <see cref="T:MugenMvvmToolkit.Models.OperationPriority"/> to invoke the action.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the operation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IThreadManager.InvokeOnUiThreadAsync(System.Action,System.Nullable{MugenMvvmToolkit.Models.OperationPriority},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Invokes an action on the UI thread.
            </summary>
            <param name="action">
                The specified <see cref="T:System.Action"/>.
            </param>
            <param name="priority">The specified <see cref="T:MugenMvvmToolkit.Models.OperationPriority"/> to invoke the action.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the operation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IThreadManager.InvokeAsync(System.Action,System.Nullable{MugenMvvmToolkit.Models.OperationPriority},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Invokes an action asynchronous.
            </summary>
            <param name="action">
                The specified <see cref="T:System.Action"/>.
            </param>
            <param name="priority">The specified <see cref="T:MugenMvvmToolkit.Models.OperationPriority"/> to invoke the action.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the operation.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IThreadManager.IsUiThread">
            <summary>
                Determines whether the calling thread is the UI thread.
            </summary>
            <returns><c>true</c> if the calling thread is the UI thread; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.SynchronousThreadManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.SynchronousThreadManager"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.SynchronousThreadManager.InvokeOnUiThreadAsync(System.Action,System.Nullable{MugenMvvmToolkit.Models.OperationPriority},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Invokes an action on the UI thread using the UiDispatcher.
            </summary>
            <param name="action">
                The specified <see cref="T:System.Action"/>.
            </param>
            <param name="priority">The specified <see cref="T:MugenMvvmToolkit.Models.OperationPriority"/> to invoke the action.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the operation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.SynchronousThreadManager.InvokeOnUiThread(System.Action,System.Nullable{MugenMvvmToolkit.Models.OperationPriority},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Invokes an action on the UI thread synchronous using the UiDispatcher.
            </summary>
            <param name="action">
                The specified <see cref="T:System.Action"/>.
            </param>
            <param name="priority">The specified <see cref="T:MugenMvvmToolkit.Models.OperationPriority"/> to invoke the action.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the operation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.SynchronousThreadManager.InvokeAsync(System.Action,System.Nullable{MugenMvvmToolkit.Models.OperationPriority},System.Nullable{System.Threading.CancellationToken})">
            <summary>
                Invokes an action asynchronous.
            </summary>
            <param name="action">
                The specified <see cref="T:System.Action"/>.
            </param>
            <param name="priority">The specified <see cref="T:MugenMvvmToolkit.Models.OperationPriority"/> to invoke the action.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the operation.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.SynchronousThreadManager.IsUiThread">
            <summary>
                Determines whether the calling thread is the UI thread.
            </summary>
            <returns><c>true</c> if the calling thread is the UI thread; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider">
            <summary>
                Represents the dynamic data annotations provider to get the <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/>s for the specified
                instance.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElementProvider">
            <summary>
                Represents the provider to get the <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/>s for the specified instance.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidationElementProvider.GetValidationElements(System.Object)">
            <summary>
                Gets the series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/> for the specified instance.
            </summary>
            <param name="instance">The object to validate.</param>
            <returns>A series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.#ctor(MugenMvvmToolkit.Interfaces.IDisplayNameProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.GetValidationElements(System.Object)">
            <summary>
                Gets the series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/> for the specified instance.
            </summary>
            <param name="instance">The object to validate.</param>
            <returns>A series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.FillValidationAttributes(System.Type,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.Validation.IValidationElement}})">
            <summary>
                Adds a series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/> to the specified dictionary.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.TryGetValidatableObjectMethods(System.Type)">
            <summary>
                Tries to get a series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement"/> that represents the IValidatableObject
                interface.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.TryGetValidationResultConverterInternal(System.Type)">
            <summary>
                Tries to get converter to convert a dynamic validation result to the IValidationResult.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.TryGetValidationContextConverterInternal(System.Type)">
            <summary>
                Tries to get converter to convert the IValidationContext to a dynamic validation context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.GetValidationAttributes(System.Reflection.MemberInfo,System.Reflection.MemberInfo)">
            <summary>
                Gets validation attributes for the specified member.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.TryGetValidationResultConverter(System.Type)">
            <summary>
                Tries to get converter to convert a dynamic validation result to the IValidationResult.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.TryGetValidationContextConverter(System.Type)">
            <summary>
                Tries to get converter to convert the IValidationContext to a dynamic validation context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.GetMetadataTypes(System.Type)">
            <summary>
                Gets the metatata types for the specified type.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElement">
            <summary>
                Serves as the base interface for all validation elements.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidationElement.Validate(MugenMvvmToolkit.Interfaces.Validation.IValidationContext)">
            <summary>
                Determines whether the specified object is valid.
            </summary>
            <returns>
                A collection that holds failed-validation information.
            </returns>
            <param name="validationContext">The context information about the validation operation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.DynamicValidatableObject.#ctor(System.Func{MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider,System.String},System.Func{MugenMvvmToolkit.Interfaces.Validation.IValidationContext,System.Object},System.Func{System.Object,System.Object[],System.Object},System.Func{System.Object,System.Collections.Generic.IEnumerable{MugenMvvmToolkit.Interfaces.Validation.IValidationResult}})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.DynamicValidatableObject"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.DynamicValidatableObject.Validate(MugenMvvmToolkit.Interfaces.Validation.IValidationContext)">
            <summary>
                Determines whether the specified object is valid.
            </summary>
            <returns>
                A collection that holds failed-validation information.
            </returns>
            <param name="validationContext">The context information about the validation operation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.DynamicValidationAttribute.#ctor(System.String,System.Func{MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider,System.String},System.Func{System.Object,System.Object},System.Func{System.Object,MugenMvvmToolkit.Interfaces.Validation.IValidationContext,MugenMvvmToolkit.Interfaces.Validation.IValidationResult})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.DynamicValidationAttribute"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.DynamicValidationAttribute.Validate(MugenMvvmToolkit.Interfaces.Validation.IValidationContext)">
            <summary>
                Determines whether the specified object is valid.
            </summary>
            <returns>
                A collection that holds failed-validation information.
            </returns>
            <param name="validationContext">The context information about the validation operation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.ValidatableObjectElement.#ctor(System.Func{MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider,System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.ValidatableObjectElement"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.DynamicDataAnnotationsElementProvider.ValidatableObjectElement.Validate(MugenMvvmToolkit.Interfaces.Validation.IValidationContext)">
            <summary>
                Determines whether the specified object is valid.
            </summary>
            <returns>
                A collection that holds failed-validation information.
            </returns>
            <param name="validationContext">The context information about the validation operation.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator">
            <summary>
                Represents the simple validator that not has validation logic, user sets all erros.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase">
            <summary>
                Represents a base class for a validator.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.DisposableObject">
            <summary>
                Represents the base class that notifies when it is disposed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IDisposableObject">
            <summary>
                An object that notifies when it is disposed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IDisposableObject.IsDisposed">
            <summary>
                Gets a value indicating whether this instance is disposed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.Models.IDisposableObject.Disposed">
            <summary>
                Occurs when the object is disposed by a call to the Dispose method.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DisposableObject.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DisposableObject.EnsureNotDisposed">
            <summary>
                Makes sure that the object is not disposed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DisposableObject.OnDispose(System.Boolean)">
            <summary>
                Releases resources held by the object.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DisposableObject.IsDisposed">
            <summary>
                Gets a value indicating whether this instance is disposed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Models.DisposableObject.Disposed">
            <summary>
                Occurs when the object is disposed by a call to the Dispose method.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidator">
            <summary>
                Represents a validator.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.CanValidate(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.Initialize(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Initializes the current validator using the specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.GetErrors">
            <summary>
                Gets the all validation errors.
            </summary>
            <returns>
                The validation errors.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.ValidateAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.ValidateAsync">
            <summary>
                Updates information about all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.ClearErrors(System.String)">
            <summary>
                Clears errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.ClearErrors">
            <summary>
                Clears the all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.IsValid">
            <summary>
                Determines whether the current model is valid.
            </summary>
            <returns>
                If <c>true</c> current model is valid, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidator.Clone">
            <summary>
                Creates a new validator that is a copy of the current instance.
            </summary>
            <returns>
                A new validator that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidator.IsUnique">
            <summary>
                Indicates that can be only once instance of this validator.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidator.IsInitialized">
            <summary>
                Gets the initialized state of the validator.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidator.ValidateOnPropertyChanged">
            <summary>
                Gets or sets the value, that indicates that the validator will be validate property on changed. Default is true.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidator.Context">
            <summary>
                Gets the validator context.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.EmptyResult">
            <summary>
                Gets the empty dictionary.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.CanValidate(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.Initialize(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Initializes the current validator using the specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.GetErrors(System.String)">
            <summary>
                Gets the validation errors for a specified property or for the entire entity.
            </summary>
            <returns>
                The validation errors for the property or entity.
            </returns>
            <param name="propertyName">
                The name of the property to retrieve validation errors for; or null or <see cref="F:System.String.Empty" />, to
                retrieve entity-level errors.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.GetErrors">
            <summary>
                Gets the all validation errors.
            </summary>
            <returns>
                The validation errors.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ValidateAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ValidateAsync">
            <summary>
                Updates information about all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ClearErrors(System.String)">
            <summary>
                Clears errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ClearErrors">
            <summary>
                Clears the all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.IsValid">
            <summary>
                Determines whether the current model is valid.
            </summary>
            <returns>
                If <c>true</c> current model is valid, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.Clone">
            <summary>
                Creates a new validator that is a copy of the current instance.
            </summary>
            <returns>
                A new validator that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.Publish(System.Object)">
            <summary>
                Publishes a message.
            </summary>
            <param name="message">The message instance.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.OnInitialized(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Initializes the current validator using the specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.GetErrorsInternal">
            <summary>
                Gets the all validation errors.
            </summary>
            <returns>
                The validation errors.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.GetErrorsInternal(System.String)">
            <summary>
                Gets the validation errors for a specified property or for the entire entity.
            </summary>
            <returns>
                The validation errors for the property or entity.
            </returns>
            <param name="propertyName">
                The name of the property to retrieve validation errors for; or null or <see cref="F:System.String.Empty" />, to
                retrieve entity-level errors.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.IsValidInternal">
            <summary>
                Determines whether the current model is valid.
            </summary>
            <returns>
                If <c>true</c> current model is valid, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ClearErrorsInternal(System.String)">
            <summary>
                Clears errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ClearErrorsInternal">
            <summary>
                Clears the all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.RaiseErrorsChanged(System.String,System.Boolean)">
            <summary>
                Raises this object's ErrorsChangedChanged event.
            </summary>
            <param name="propertyName">The property that has new errors.</param>
            <param name="isAsyncValidate">Indicates that property was async validation.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.CanValidateContext(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.CanValidateInternal(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ValidateInternalAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ValidateInternalAsync">
            <summary>
                Updates information about all errors.
            </summary>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.CloneInternal">
            <summary>
                Creates a new validator that is a copy of the current instance.
            </summary>
            <returns>
                A new validator that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.FromResult(System.Collections.Generic.IDictionary{System.String,System.Collections.IEnumerable})">
            <summary>
                Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that's completed successfully with the specified result.
            </summary>
            <returns>
                The successfully completed task.
            </returns>
            <param name="result">The result to store into the completed task.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.UpdateErrors(System.String,System.Collections.IEnumerable,System.Boolean)">
            <summary>
                Sets errors for a property with notification.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyErrors">The collection of errors.</param>
            <param name="isAsyncValidate">Indicates that the validation was asynchronous.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.PropertyNameEqual``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Checks whether the properties are equal.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <param name="getProperty">The expression to get property.</param>
            <returns>If true property equals, otherwise false.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Gets property name from the specified expression.
            </summary>
            <typeparam name="T">The type of model.</typeparam>
            <param name="expression">The specified expression.</param>
            <returns>An instance of string.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.OnPropertyChangedNotifyDataError(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                Notifies on errors when any property changed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.EnsureInitialized">
            <summary>
                Makes sure that the object is initialized.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.UpdateErrorsInternal(System.String,System.Collections.IEnumerable)">
            <summary>
                Sets errors for a property with notification.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyErrors">The collection of errors.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.Subscribe(System.Object)">
            <summary>
                Subscribes an instance to events.
            </summary>
            <param name="instance">The instance to subscribe for event publication.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.Unsubscribe(System.Object)">
            <summary>
                Unsubscribes the instance from all events.
            </summary>
            <param name="instance">The instance to unsubscribe.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.OnDispose(System.Boolean)">
            <summary>
                Releases resources held by the object.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.IsUnique">
            <summary>
                Indicates that can be only once instance of this validator.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.IsInitialized">
            <summary>
                Gets the initialized state of the validator.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ValidateOnPropertyChanged">
            <summary>
                Gets or sets the value, that indicates that the validator will be validate property on changed. Default is true.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.Context">
            <summary>
                Gets the validator context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ValidateOnPropertyChangedDefault">
            <summary>
                Gets or sets the value, that indicates that the validator will be validate property on changed. Default is true.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.InternalErrors">
            <summary>
                Gets the dictionary that contains all errors.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.InstanceToValidate">
            <summary>
                Gets the object to validate.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.PropertiesMapping">
            <summary>
                Gets the mapping of error properties.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.IgnoreProperties">
            <summary>
                Gets the list of properties that will not be validated.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.IsValidating">
            <summary>
                Gets a value that indicates that the validator at the moment there are threads in which there is a validation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.System#ComponentModel#INotifyDataErrorInfo#HasErrors">
            <summary>
                Gets a value that indicates whether the entity has validation errors.
            </summary>
            <returns>
                true if the entity currently has validation errors; otherwise, false.
            </returns>
        </member>
        <member name="E:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase.ErrorsChanged">
            <summary>
                Occurs when the validation errors have changed for a property or for the entire entity.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator.SetErrors``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object[])">
            <summary>
                Sets errors for a property
            </summary>
            <typeparam name="T">The type of the model.</typeparam>
            <param name="propertyExpresssion">The expression for the property</param>
            <param name="errors">The collection of errors</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator.SetErrors(System.String,System.Object[])">
            <summary>
                Set errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
            <param name="errors">The collection of errors</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator.CanValidateInternal(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator.ValidateInternalAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator.ValidateInternalAsync">
            <summary>
                Updates information about all errors.
            </summary>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator.CloneInternal">
            <summary>
                Creates a new validator that is a copy of the current instance.
            </summary>
            <returns>
                A new validator that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ManualValidator.IsUnique">
            <summary>
                Indicates that can be only once instance of this validator.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator">
            <summary>
                Represents a class that can validate the IValidatableViewModel
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase`1">
            <summary>
                Represents a base class for a validator.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase`1.PropertyNameEqual(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Checks whether the properties are equal.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <param name="getProperty">The expression to get property.</param>
            <returns>If true property equals, otherwise false.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase`1.GetPropertyName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Gets property name from the specified expression.
            </summary>
            <param name="expression">The specified expression.</param>
            <returns>An instance of string.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase`1.CanValidateContext(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorBase`1.InstanceToValidate">
            <summary>
                Gets the object to validate.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.GetErrorsInternal(System.String)">
            <summary>
                Gets the validation errors for a specified property or for the entire entity.
            </summary>
            <returns>
                The validation errors for the property or entity.
            </returns>
            <param name="propertyName">
                The name of the property to retrieve validation errors for; or null or <see cref="F:System.String.Empty" />, to
                retrieve entity-level errors.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.IsValidInternal">
            <summary>
                Determines whether the current model is valid.
            </summary>
            <returns>
                If <c>true</c> current model is valid, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.ClearErrorsInternal(System.String)">
            <summary>
                Clears errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.ClearErrorsInternal">
            <summary>
                Clears the all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.OnInitialized(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Initializes the current validator using the specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.CanValidateInternal(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.OnDispose(System.Boolean)">
            <summary>
                Occurs after current view model disposed, use for clear resource and event listeners.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.GetErrorsInternal">
            <summary>
                Gets the all validation errors.
            </summary>
            <returns>
                The validation errors.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.ValidateInternalAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.ValidateInternalAsync">
            <summary>
                Updates information about all errors.
            </summary>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.CloneInternal">
            <summary>
                Creates a new validator that is a copy of the current instance.
            </summary>
            <returns>
                A new validator that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatableViewModelValidator.IsUnique">
            <summary>
                Indicates that can be only once instance of this validator.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Validation.ValidationElementValidator">
            <summary>
                Represents a validator that use a <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElementProvider"/> to validate objects.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidationElementValidator.CanValidateContext(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Checks to see whether the validator can validate objects of the specified IValidatorContext.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidationElementValidator.ValidateInternalAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidationElementValidator.ValidateInternalAsync">
            <summary>
                Updates information about all errors.
            </summary>
            <returns>
                The result of validation.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidationElementValidator.CreateContext">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationContext"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidationElementValidator.ValidationElementProvider">
            <summary>
            Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidationElementProvider"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider">
            <summary>
                Represent the factory for create <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidator"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider">
            <summary>
                Represent the factory for create <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidator"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.Register``1">
            <summary>
                Registers the specified validator using the type.
            </summary>
            <typeparam name="TValidator">The type of validator.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.Register(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Registers the specified validator.
            </summary>
            <param name="validator">The specified validator</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.Unregister``1">
            <summary>
                Unregisters the specified validator use type.
            </summary>
            <typeparam name="TValidator">The type of validator.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.IsRegistered``1">
            <summary>
                Determines whether the specified validator is registered
            </summary>
            <typeparam name="TValidator">The type of validator.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.IsRegistered(System.Type)">
            <summary>
                Determines whether the specified validator is registered
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.GetValidators(System.Object)">
            <summary>
                Gets the series of validators for the specified instance.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
            <returns>A series instances of validators.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.GetValidators(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Gets the series of validators for the specified instance.
            </summary>
            <param name="context">The specified IValidatorContext.</param>
            <returns>A series instances of validators.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider.Clone">
            <summary>
                Creates a new validator-factory that is a copy of the current instance.
            </summary>
            <returns>
                A new validator-factory that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.#ctor(System.Boolean,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Type,System.Collections.Generic.List{MugenMvvmToolkit.Interfaces.Validation.IValidator}})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.#ctor(System.Boolean,System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.Register``1">
            <summary>
                Registers the specified validator using the type.
            </summary>
            <typeparam name="TValidator">The type of validator.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.Register(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Registers the specified validator.
            </summary>
            <param name="validator">The specified validator</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.Unregister``1">
            <summary>
                Unregisters the specified validator use type.
            </summary>
            <typeparam name="TValidator">The type of validator.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.IsRegistered``1">
            <summary>
                Determines whether the specified validator is registered
            </summary>
            <typeparam name="TValidator">The type of validator.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.IsRegistered(System.Type)">
            <summary>
                Determines whether the specified validator is registered
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.GetValidators(System.Object)">
            <summary>
                Gets the series of validators for the specified instance.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
            <returns>A series instances of validators.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.GetValidators(MugenMvvmToolkit.Interfaces.Validation.IValidatorContext)">
            <summary>
                Gets the series of validators for the specified instance.
            </summary>
            <param name="context">The specified IValidatorContext.</param>
            <returns>A series instances of validators.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.Clone">
            <summary>
                Creates a new validator-factory that is a copy of the current instance.
            </summary>
            <returns>
                A new validator-factory that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.OnDispose(System.Boolean)">
            <summary>
                Releases resources held by the object.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.Validation.ValidatorProvider.ServiceProvider">
            <summary>
                Gets or sets the service provider.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ViewManager">
            <summary>
                Represents the default implemenation of <see cref="T:MugenMvvmToolkit.Interfaces.IViewManager"/>
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IViewManager">
            <summary>
                Represents the provider which creates a view for a view model
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewManager.GetViewType(System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Gets the type of view wrapper.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewManager.WrapToView(System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view object to a <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewManager.GetViewAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Gets an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/> for the specified view model.
            </summary>
            <param name="viewModel">The view model which is now initialized.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewManager.InitializeViewAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Configures the specified view for the specified view-model.
            </summary>
            <param name="viewModel">The specified view model.</param>
            <param name="view">The specified view.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewManager.CleanupViewAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Clears view in the specified view-model
            </summary>
            <param name="viewModel">The specified view model.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.#ctor(MugenMvvmToolkit.Interfaces.IThreadManager,MugenMvvmToolkit.Interfaces.IViewMappingProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ViewManager"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.GetViewType(System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Gets the type of view wrapper.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.WrapToView(System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view object to a <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.GetViewAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Gets an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/> for the specified view model.
            </summary>
            <param name="viewModel">The view model which is now initialized.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.InitializeViewAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Configures the specified view for the specified view-model.
            </summary>
            <param name="viewModel">The specified view model.</param>
            <param name="view">The specified view.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.CleanupViewAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Clears view in the specified view-model
            </summary>
            <param name="viewModel">The specified view model.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.GetOrCreateView(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{System.Boolean},MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Gets an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/> for the specified view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.GetViewTypeInternal(System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Gets the type of view wrapper.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.WrapToViewInternal(System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view object to a <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.GetView(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Gets an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/> for the specified view model.
            </summary>
            <param name="viewModel">The view model which is now initialized.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.InitializeView(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Configures the specified view for the specified view-model.
            </summary>
            <param name="viewModel">The specified view model.</param>
            <param name="view">The specified view.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.CleanupView(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Clears view in the specified view-model
            </summary>
            <param name="viewModel">The specified view model.</param>
            <param name="view">The specified view.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.InitializeViewInternal(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Configures the specified view to the specified view-model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.CleanupViewInternal(MugenMvvmToolkit.Interfaces.Views.IView)">
            <summary>
                Clears view in the specified view-model
            </summary>
            <param name="view">The specified view.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewManager.AlwaysCreateNewView">
            <summary>
                Gets or sets the default value that indicates that view manager should always create new view.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewManager.ThreadManager">
            <summary>
                Gets the thread manager.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewManager.ViewMappingProvider">
            <summary>
                Gets the view mapping provider.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ViewManager.ViewWrapper">
            <summary>
                Represents the wrapper of view object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Views.IViewWrapper">
            <summary>
                Represents the wrapper of view object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Views.IView">
            <summary>
                Represent the base interface for view.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Views.IView.DataContext">
            <summary>
                Gets or sets the data context of the current <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Views.IViewWrapper.ViewType">
            <summary>
                Gets the underlying view type.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Views.IViewWrapper.View">
            <summary>
                Gets the view object.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewManager.ViewWrapper.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ViewManager.ViewWrapper"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewManager.ViewWrapper.DataContext">
            <summary>
                Gets or sets the data context of the current <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewManager.ViewWrapper.ViewType">
            <summary>
                Gets the underlying view type.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewManager.ViewWrapper.View">
            <summary>
                Gets the view object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ViewMappingProvider">
            <summary>
                Represents the <see cref="T:MugenMvvmToolkit.Interfaces.IViewMappingProvider"/> that uses attributes to fill mappings.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IViewMappingProvider">
            <summary>
                Represents the interface to provide view mappings.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewMappingProvider.FindMappingsForView(System.Type,System.Boolean)">
            <summary>
                Finds the series of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/> for the specified type of view.
            </summary>
            <param name="viewType">The specified type of view.</param>
            <param name="throwOnError">
                true to throw an exception if the type cannot be found; false to return null. Specifying
                false also suppresses some other exception conditions, but not all of them.
            </param>
            <returns>
                The series of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewMappingProvider.FindMappingForViewModel(System.Type,System.String,System.Boolean)">
            <summary>
                Finds the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/> for the specified type of view model.
            </summary>
            <param name="viewModelType">The specified type of view model.</param>
            <param name="viewName">The specified name of view, if any.</param>
            <param name="throwOnError">
                true to throw an exception if the type cannot be found; false to return null. Specifying
                false also suppresses some other exception conditions, but not all of them.
            </param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IViewMappingProvider.ViewMappings">
            <summary>
                Gets the series instances of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ViewMappingProvider"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ViewMappingProvider"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.InitializeMapping(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Initializes view mappings.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.GetUri(System.Type,System.Type,System.String,System.UriKind)">
            <summary>
                Creates an <see cref="T:System.Uri"/> for the specified type of view.
            </summary>
            <param name="viewType">The specified type of view.</param>
            <param name="viewModelType">The specified type of view model.</param>
            <param name="url">The specified url value.</param>
            <param name="uriKind">
                The specified <see cref="T:System.UriKind"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Uri"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.AddMapping(MugenMvvmToolkit.Interfaces.Models.IViewMappingItem,System.Boolean)">
            <summary>
            Adds the view mapping to internal collection.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.FindMappingsForView(System.Type,System.Boolean)">
            <summary>
                Finds the series of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/> for the specified type of view.
            </summary>
            <param name="viewType">The specified type of view.</param>
            <param name="throwOnError">
                true to throw an exception if the type cannot be found; false to return null. Specifying
                false also suppresses some other exception conditions, but not all of them.
            </param>
            <returns>
                The series of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.FindMappingForViewModel(System.Type,System.String,System.Boolean)">
            <summary>
                Finds the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/> for the specified type of view model.
            </summary>
            <param name="viewModelType">The specified type of view model.</param>
            <param name="viewName">The specified name of view, if any.</param>
            <param name="throwOnError">
                true to throw an exception if the type cannot be found; false to return null. Specifying
                false also suppresses some other exception conditions, but not all of them.
            </param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.ViewPostfix">
            <summary>
            Gets the view postfixes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.ViewModelPostfix">
            <summary>
            Gets the view model postfixes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewMappingProvider.ViewMappings">
            <summary>
                Gets a series instances of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.ViewModelProvider">
            <summary>
                Represents the provider which creates a view models.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IViewModelProvider">
            <summary>
                Represents the provider which creates a view models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewModelProvider.GetViewModel(MugenMvvmToolkit.Models.GetViewModelDelegate{MugenMvvmToolkit.Interfaces.ViewModels.IViewModel},MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="getViewModel">The specified delegate to create view model.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewModelProvider.GetViewModel(System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelType">The type of view model.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IViewModelProvider.InitializeViewModel(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>, use this method if you have created an
                <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>
                without using the GetViewModel method.
            </summary>
            <param name="viewModel">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
        </member>
        <member name="F:MugenMvvmToolkit.Infrastructure.ViewModelProvider._iocContainer">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewModelProvider.#ctor(MugenMvvmToolkit.Interfaces.IIocContainer,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.ViewModelProvider"/> class.
            </summary>
            <param name="iocContainer">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/> value.</param>
            <param name="bindIocContainer">
                If <c>true</c> it indicates that provider should bind IocContainer to self, when creates the
                view-model.
            </param>
            <param name="useParentIocContainer">The value that is responsible to initialize the IocContainer using the IocContainer of parent view model.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewModelProvider.GetViewModel(MugenMvvmToolkit.Models.GetViewModelDelegate{MugenMvvmToolkit.Interfaces.ViewModels.IViewModel},MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="getViewModel">The specified delegate to create view model.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewModelProvider.GetViewModel(System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelType">The type of view model.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewModelProvider.InitializeViewModel(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>, use this method if you have created an <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>
                without using the GetViewModel method.
            </summary>
            <param name="viewModel">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.ViewModelProvider.CreateViewModelIocContainer(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates an instance of <see cref="P:MugenMvvmToolkit.Infrastructure.ViewModelProvider.IocContainer"/> using activation policy and the parent view model if any.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewModelProvider.IocContainer">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewModelProvider.BindIocContainer">
            <summary>
                Gets or sets value, if <c>true</c> it indicates that provider should bind IocContainer to self, when creates the
                view-model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.ViewModelProvider.UseParentIocContainer">
            <summary>
                Gets the value that is responsible to initialize the IocContainer using the IocContainer of parent view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.WeakActionToken">
            <summary>
                Represents the weak action token.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WeakActionToken.Create``1(``0,System.Action{``0})">
            <summary>
                Creates a new instance of the weak action token class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WeakActionToken.Create``2(``0,``1,System.Action{``0,``1})">
            <summary>
                Creates a new instance of the weak action token class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WeakActionToken.Create``3(``0,``1,``2,System.Action{``0,``1,``2})">
            <summary>
                Creates a new instance of the weak action token class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Infrastructure.WrapperManagerBase">
            <summary>
                Represents the base class for wrapper manager that supports to wrap the view models.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IWrapperManager">
            <summary>
                Represents the wrapper manager that supports to wrap the view models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IWrapperManager.WrapTo(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view-model to a specified type.
            </summary>
            <param name="viewModel">The specified view-model.</param>
            <param name="wrapperType">The specified type to wrap.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>, if any.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.#ctor(MugenMvvmToolkit.Interfaces.IViewModelProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Infrastructure.WrapperManagerBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.AddWrapper``2">
            <summary>
                Adds the wrapper mapping.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.AddWrapper``1(System.Type)">
            <summary>
                Adds the wrapper mapping.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.CreateWrapper(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates the wrapper view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.CreateDefaultWrapper(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Creates the default wrapper if mappig was not found.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.WrapTo(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Type,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view-model to a specified type.
            </summary>
            <param name="viewModel">The specified view-model.</param>
            <param name="wrapperType">The specified type to wrap.</param>
            <param name="dataContext">The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>, if any.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.ViewModelProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IViewMappingProvider"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.Mappings">
            <summary>
                Gets the wrapper type mappings.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Infrastructure.WrapperManagerBase.DefaultWrapperType">
            <summary>
            Gets or sets the default type of wrapper, this type is used if mappig was not found.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncStateMachineAware">
            <summary>
                Represents the interface that allows to get state machine.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncStateMachineAware.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
            <summary>
                Configures the state machine with a heap-allocated replica.
            </summary>
            <param name="stateMachine">The heap-allocated replica.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IIocContainer">
            <summary>
                Represent the base interface for ioc container.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.CreateChild">
            <summary>
                Creates a child ioc adapter.
            </summary>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.Get(System.Type,System.String,MugenMvvmToolkit.Interfaces.IIocParameter[])">
            <summary>
                Gets an instance of the specified service.
            </summary>
            <param name="service">The specified service type.</param>
            <param name="name">The specified binding name.</param>
            <param name="parameters">The specified parameters.</param>
            <returns>An instance of the service.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.GetAll(System.Type,System.String,MugenMvvmToolkit.Interfaces.IIocParameter[])">
            <summary>
                Gets all instances of the specified service.
            </summary>
            <param name="service">Specified service type.</param>
            <param name="name">The specified binding name.</param>
            <param name="parameters">The specified parameters.</param>
            <returns>An instance of the service.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.BindToConstant(System.Type,System.Object,System.String)">
            <summary>
                Indicates that the service should be bound to the specified constant value.
                <param name="service">The specified service type.</param>
                <param name="constValue">The specified value.</param>
                <param name="name">The specified binding name.</param>
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.BindToMethod(System.Type,System.Func{MugenMvvmToolkit.Interfaces.IIocContainer,System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.IIocParameter},System.Object},MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Indicates that the service should be bound to the specified method.
            </summary>
            <param name="service">The specified service type.</param>
            <param name="methodBindingDelegate">The specified factory delegate.</param>
            <param name="lifecycle">
                The specified <see cref="T:MugenMvvmToolkit.Models.IoC.DependencyLifecycle"/>
            </param>
            <param name="name">The specified binding name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.Bind(System.Type,System.Type,MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Indicates that the service should be bound to the specified type.
            </summary>
            <param name="service">The specified service type.</param>
            <param name="typeTo">The specified to type</param>
            <param name="name">The specified binding name.</param>
            <param name="lifecycle">
                The specified <see cref="T:MugenMvvmToolkit.Models.IoC.DependencyLifecycle"/>
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.Unbind(System.Type)">
            <summary>
                Unregisters all bindings with specified conditions for the specified service.
            </summary>
            <param name="service">The specified service type.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IIocContainer.CanResolve(System.Type,System.String)">
            <summary>
                Determines whether the specified request can be resolved.
            </summary>
            <param name="service">The specified service type.</param>
            <param name="name">The specified binding name.</param>
            <returns>
                <c>True</c> if the specified service has been resolved; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IIocContainer.Id">
            <summary>
                Gets the id of <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IIocContainer.Parent">
            <summary>
                Gets the parent ioc adapter.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IIocContainer.Container">
            <summary>
                Gets the original ioc container.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IIocParameter">
            <summary>
                Represents the base interface for all ioc parameters.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IIocParameter.Name">
            <summary>
                Gets the parameter name.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IIocParameter.Value">
            <summary>
                Gets the parameter value.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.IIocParameter.ParameterType">
            <summary>
                Gets the parameter type.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ITaskExceptionHandler">
            <summary>
                Represents an interface that is responsible for handling exceptions in the task.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ITaskExceptionHandler.Handle(System.Object,System.Threading.Tasks.Task)">
            <summary>
                Handles an exception.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="task">The task that throws an exception.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ITracer">
            <summary>
                Represents the tracer interface.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ITracer.TraceViewModel(MugenMvvmToolkit.Models.AuditAction,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Writes information about view-models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ITracer.Trace(MugenMvvmToolkit.Models.TraceLevel,System.String)">
            <summary>
                Writes an informational message to the trace listeners.
            </summary>
            <param name="level">The specified trace level.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ITracer.Trace(MugenMvvmToolkit.Models.TraceLevel,System.String,System.Object[])">
            <summary>
                Writes an informational message to the trace listeners.
            </summary>
            <param name="level">The specified trace level.</param>
            <param name="format">The message to write.</param>
            <param name="args">The string format members.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.IVisualStateManager">
            <summary>
                Manages states and the logic for transitioning between states for controls.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.IVisualStateManager.GoToStateAsync(MugenMvvmToolkit.Interfaces.Views.IView,System.String,System.Boolean,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Transitions the control between two states.
            </summary>
            <returns>
                true if the control successfully transitioned to the new state; otherwise, false.
            </returns>
            <param name="view">The view to transition between states. </param>
            <param name="stateName">The state to transition to.</param>
            <param name="useTransitions">true to use a VisualTransition to transition between states; otherwise, false.</param>
            <param name="context">The specified context.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IDataContext">
            <summary>
                Represents the specific operation context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.Add``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.AddOrUpdate``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds the data constant value or update existing.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.GetData``1(MugenMvvmToolkit.Models.DataConstant{``0})">
            <summary>
                Gets the data using the specified data constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.TryGetData``1(MugenMvvmToolkit.Models.DataConstant{``0},``0@)">
            <summary>
                Gets the data using the specified data constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.Contains(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Determines whether the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> contains the specified key.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.Remove(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Removes the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.Update(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Updates the current context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IDataContext.ToList">
            <summary>
                Creates an instance of <see cref="T:System.Collections.Generic.IList`1"/> from current context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IDataContext.Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
            <returns>
                The number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IDataContext.IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> is read-only.
            </summary>
            <returns>
                true if the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry">
            <summary>
                Represents the entity state entry.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry.State">
            <summary>
                Gets or sets the state of the <see cref="T:MugenMvvmToolkit.Models.EntityState"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry.Entity">
            <summary>
                Gets the entity object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IBroadcastMessage">
            <summary>
                Represents the message that can be sent through all the models in the chain.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.ITracebleMessage">
            <summary>
                Represents the message that should be traced.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IHasDisplayName">
            <summary>
                Represents the model that has display name.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IHasDisplayName.DisplayName">
            <summary>
                Gets or sets the display name for the current model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IHasOperationResult">
            <summary>
                Represents the model that has operation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IHasOperationResult.OperationResult">
            <summary>
                Gets or sets the operation result value.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IHasState">
            <summary>
                Represents the model that has state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IHasState.LoadState(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Loads state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IHasState.SaveState(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Saves state.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IModuleContext">
            <summary>
                Represents the module context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IModuleContext.IocContainer">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IModuleContext.Context">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IModuleContext.Assemblies">
            <summary>
                Gets the application assemblies.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IModuleContext.Mode">
            <summary>
                Gets the module load mode.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IModuleContext.Platform">
            <summary>
                Gets the current platform.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IRelayCommand">
            <summary>
                An extension to ICommand to provide an ability to raise changed events.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IRelayCommand.GetNotifiers">
            <summary>
                Gets the current command notifiers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IRelayCommand.AddNotifier(System.Object)">
            <summary>
                Adds the specified notifier to manage the <c>CanExecuteChanged</c> event.
            </summary>
            <param name="item">The specified notifier item.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IRelayCommand.RemoveNotifier(System.Object)">
            <summary>
                Removes the specified notifier.
            </summary>
            <param name="item">The specified notifier item.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IRelayCommand.ClearNotifiers">
            <summary>
                Removes all notifiers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IRelayCommand.RaiseCanExecuteChanged">
            <summary>
                This method can be used to raise the CanExecuteChanged handler.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IRelayCommand.ExecutionMode">
            <summary>
                Specifies the execution mode for <c>Execute</c> method.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IRelayCommand.CanExecuteMode">
            <summary>
                Specifies the execution mode for <c>RaiseCanExecuteChanged</c> method in <c>IRelayCommand</c>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.ISelectable">
            <summary>
                Represents the model that can be selected.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.ISelectable.IsSelected">
            <summary>
                Gets or sets the property that indicates that current model is selected.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem">
            <summary>
                Represents the interface which contains information about binding a view to a view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem.Name">
            <summary>
                Gets the name of mapping.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem.ViewType">
            <summary>
                Gets the type of view.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem.ViewModelType">
            <summary>
                Gets or sets the type of view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewMappingItem.Uri">
            <summary>
                Gets the uri, if any.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings">
            <summary>
                Represents the view-model settings.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.Clone">
            <summary>
                Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.BroadcastAllMessages">
            <summary>
                Gets or sets property, that is responsible for broadcast all messages through all view models in chain.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.DisposeIocContainer">
            <summary>
                Gets or sets property, that is responsible for auto dispose container when the view model disposing.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.DisposeCommands">
            <summary>
                Gets or sets property, that is responsible for auto dispose all command when the view model disposing.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.HandleBusyMessageMode">
            <summary>
                Gets or sets the value that is responsible for listen busy messages
                see the <see cref="T:MugenMvvmToolkit.Models.Messages.BeginBusyMessage"/> and the <see cref="T:MugenMvvmToolkit.Models.Messages.EndBusyMessage"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.DefaultBusyMessage">
            <summary>
                Gets or sets value that will be displayed when the BeginIsBusy method will be invoked without a message.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.ValidationBusyMessage">
            <summary>
                Gets or sets value that will be displayed when the BeginIsBusy method will be invoked without a message.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.ErrorsChangeExecutionMode">
            <summary>
                Specifies the execution mode for invoke <c>ErrorsChanged</c> event.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.Metadata">
            <summary>
                Gets the metadata context of current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings.State">
            <summary>
                Gets the serializable state of view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext">
            <summary>
                Represents the navigation context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext.IsAutoCreated">
            <summary>
                Gets the value that indicates that view-model was created using the navigation system.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext.NavigationMode">
            <summary>
                Gets the value of the mode parameter from the originating Navigate call.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext.ViewModelFrom">
            <summary>
                Gets the from navigate view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext.ViewModelTo">
            <summary>
                Gets the view model to navigate.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext.Parameters">
            <summary>
                Gets the navigation parameters.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext.NavigationProvider">
            <summary>
                Gets the navigation provider that creates this context.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider">
            <summary>
                Represent the interface for navigation provider.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.GoBack">
            <summary>
                Navigates back.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.GoForward">
            <summary>
                Navigates forward.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.Navigate(MugenMvvmToolkit.Interfaces.Callbacks.IOperationCallback,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Navigates using the specified data context.
            </summary>
            <param name="callback">The specified callback, if any.</param>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </param>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.CurrentViewModel">
            <summary>
                Gets the active view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.CurrentContent">
            <summary>
                Gets the current content.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.CachePolicy">
            <summary>
                Gets the cache policy, if any.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.CanGoBack">
            <summary>
                Indicates whether the navigator can navigate back.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.CanGoForward">
            <summary>
                Indicates whether the navigator can navigate forward.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.Navigation.INavigationProvider.Navigated">
            <summary>
                Occurs after view model was navigated.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Presenters.IMessagePresenter">
            <summary>
                Represent the base interface for message box implementation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Presenters.IMessagePresenter.ShowAsync(System.String,System.String,MugenMvvmToolkit.Models.MessageButton,MugenMvvmToolkit.Models.MessageImage,MugenMvvmToolkit.Models.MessageResult,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Displays a message box that has a message, title bar caption, button, and icon; and that accepts a default message
                box result and returns a result.
            </summary>
            <param name="messageBoxText">A <see cref="T:System.String"/> that specifies the text to display.</param>
            <param name="caption">A <see cref="T:System.String"/> that specifies the title bar caption to display.</param>
            <param name="button">A <see cref="T:MugenMvvmToolkit.Models.MessageButton"/> value that specifies which button or buttons to display.</param>
            <param name="icon">A <see cref="T:MugenMvvmToolkit.Models.MessageImage"/> value that specifies the icon to display.</param>
            <param name="defaultResult">
                A <see cref="T:MugenMvvmToolkit.Models.MessageResult"/> value that specifies the default result of the message
                box.
            </param>
            <param name="context">The specified context.</param>
            <returns>A <see cref="T:MugenMvvmToolkit.Models.MessageResult"/> value that specifies which message box button is clicked by the user.</returns>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Presenters.IToastPresenter">
            <summary>
                Provides functionality to present a timed message.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Presenters.IToastPresenter.ShowAsync(System.Object,System.Single,MugenMvvmToolkit.Models.ToastPosition,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Shows the specified message.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidatableObject">
            <summary>
                Provides a way for an object to be invalidated.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.Validation.IValidatableObject.Validate(MugenMvvmToolkit.Interfaces.Validation.IValidationContext)">
            <summary>
                Determines whether the specified object is valid.
            </summary>
            <returns>
                A collection that holds failed-validation information.
            </returns>
            <param name="validationContext">The validation context.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidationContext">
            <summary>
                Describes the context in which a validation check is performed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationContext.ObjectInstance">
            <summary>
                Gets the object to validate.
            </summary>
            <returns>
                The object to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationContext.ObjectType">
            <summary>
                Gets the type of the object to validate.
            </summary>
            <returns>
                The type of the object to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationContext.DisplayName">
            <summary>
                Gets or sets the name of the member to validate.
            </summary>
            <returns>
                The name of the member to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationContext.MemberName">
            <summary>
                Gets or sets the name of the member to validate.
            </summary>
            <returns>
                The name of the member to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationContext.Items">
            <summary>
                Gets the dictionary of key/value pairs that is associated with this context.
            </summary>
            <returns>
                The dictionary of the key/value pairs for this context.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationContext.ServiceProvider">
            <summary>
                Gets the validation services provider.
            </summary>
            <returns>
                The validation services provider.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidationResult">
            <summary>
                Represents a container for the results of a validation request.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationResult.IsValid">
            <summary>
                Gets the value which contains validation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationResult.MemberNames">
            <summary>
                Gets the collection of member names that indicate which fields have validation errors.
            </summary>
            <returns>
                The collection of member names that indicate which fields have validation errors.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidationResult.ErrorMessage">
            <summary>
                Gets the error message for the validation.
            </summary>
            <returns>
                The error message for the validation.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext">
            <summary>
                Represents the validation context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext.InstanceToValidate">
            <summary>
                Gets the object to validate.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext.ValidationMetadata">
            <summary>
                Gets or sets the validation metadata.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext.PropertiesMapping">
            <summary>
                Gets the mapping of model properties.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext.IgnoreProperties">
            <summary>
                Gets the list of properties that will not be validated.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext.ServiceProvider">
            <summary>
                Gets the service provider.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel">
            <summary>
                Represents the base interface for all view models that can be closed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel">
            <summary>
                Represents the base interface for all view models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.InitializeViewModel(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes the current view model using the specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.BeginBusy(System.Object)">
            <summary>
                Begins to indicate that the current view model is busy.
            </summary>
            <param name="message">
                The specified message for the <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.BusyMessage"/> property.
            </param>
            <returns>Id of the operation.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.EndBusy(System.Guid)">
            <summary>
                Ends to indicate that the current view model is busy.
            </summary>
            <param name="idBusy">Id of the operation to end.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.ClearBusy">
            <summary>
                Clears all busy operations.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.IsInitialized">
            <summary>
                Gets the initialized state of the current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.IsBusy">
            <summary>
                Gets the busy state of the current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.BusyMessage">
            <summary>
                Gets the information message for busy dialog.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.Settings">
            <summary>
                Gets the settings of the current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.IocContainer">
            <summary>
                Gets the ioc adapter of the current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.DisposeCancellationToken">
            <summary>
                Gets the cancellation token that uses to cancel an operation when the current object will be disposed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.Initialized">
            <summary>
                Occurs when this <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> is initialized.
                This event coincides with cases where the value of the <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> property changes from false (or
                undefined) to true.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel.CloseAsync(System.Object)">
            <summary>
                Tries to close view-model.
            </summary>
            <param name="parameter">The specified parameter, if any.</param>
            <returns>An instance of task with result.</returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel.CloseCommand">
            <summary>
                Gets or sets a command that attempts to remove this workspace from the user interface.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel.Closing">
            <summary>
                Occurs when <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel"/> is closing.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel.Closed">
            <summary>
                Occurs when <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel"/> is closed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IDesignViewModel">
            <summary>
                Represents the design view-model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IDesignViewModel.InitializeViewModel">
            <summary>
                Initializes the current view model in design mode.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel">
            <summary>
                Represent the interface for editable view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel">
            <summary>
                Represents the interface which add validation support to view-model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.GetValidators">
            <summary>
                Gets the collection of validators.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.CreateContext(System.Object)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.AddValidator(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Adds the specified validator.
            </summary>
            <param name="validator">The specified validator.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.RemoveValidator(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Removes the specified validator.
            </summary>
            <param name="validator">The specified validator.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.AddInstance(System.Object)">
            <summary>
                Adds the specified instance to validate.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.RemoveInstance(System.Object)">
            <summary>
                Removes the specified instance to validate.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.ValidateInstanceAsync(System.Object)">
            <summary>
                Updates information about errors in the specified instance.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.ValidateAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.ValidateAsync">
            <summary>
                Updates information about errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.GetErrors">
            <summary>
                Gets the all validation errors.
            </summary>
            <returns>
                The validation errors.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.ClearErrors(System.String)">
            <summary>
                Clears errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.ClearErrors">
            <summary>
                Clears the all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.IsValid">
            <summary>
                Determines whether the current view model is valid.
            </summary>
            <returns>
                If <c>true</c> current view model is valid, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.PropertiesMapping">
            <summary>
                Gets the mapping of model properties.
                <example>
                    <code>
                  <![CDATA[
                   PropertiesMapping.Add("ModelProperty", new[]{"ViewModelProperty"});
                  ]]>
                </code>
                </example>
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IValidatableViewModel.IgnoreProperties">
            <summary>
                Gets the list of properties that will not be validated.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.InitializeEntity(System.Object,System.Boolean)">
            <summary>
                Initializes the specified entity to edit.
            </summary>
            <param name="entity">The specified entity to edit.</param>
            <param name="isNewRecord">
                If <c>true</c> is new entity;otherwise <c>false</c>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.ApplyChanges">
            <summary>
                Applies the changes of entity.
            </summary>
            <returns>A series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.CancelChanges">
            <summary>
                Cancels the changes of entity.
            </summary>
            <returns>An instance of object.</returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.ModelType">
            <summary>
                Gets the type of model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.IsNewRecord">
            <summary>
                Gets the value which indicates that is the new entity or not.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.IsEntityInitialized">
            <summary>
                Gets a value indicating whether the entity is initialized.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.HasChanges">
            <summary>
                Gets a value indicating whether the entity has changes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.Entity">
            <summary>
                Gets the edited entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.EntityInitialized">
            <summary>
                Occurs at the end of initialization the entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.ChangesApplied">
            <summary>
                Occurs at the end of apply entity changes.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel.ChangesCanceled">
            <summary>
                Occurs at the end of cancel entity changes.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel`1">
            <summary>
                Represent the interface for editable view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel`1.InitializeEntity(`0,System.Boolean)">
            <summary>
                Initializes the specified entity to edit.
            </summary>
            <param name="entity">The specified entity to edit.</param>
            <param name="isNewRecord">
                If <c>true</c> is new entity;otherwise <c>false</c>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel`1.CancelChanges">
            <summary>
                Cancels the changes of entity.
            </summary>
            <returns>An instance of object.</returns>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel`1.Entity">
            <summary>
                Gets the edited entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel`1.EntityInitialized">
            <summary>
                Occurs at the end of initialization the entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IEditableViewModel`1.ChangesCanceled">
            <summary>
                Occurs at the end of cancel entity changes.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel">
            <summary>
                Represents the interface for linear lists.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.UpdateItemsSource(System.Collections.IEnumerable)">
            <summary>
                Updates the current <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.ItemsSource"/>.
            </summary>
            <param name="value">The new item source value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.UpdateFilter">
            <summary>
                Updates the filter state.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.ModelType">
            <summary>
                Gets the type of model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.OriginalItemsSource">
            <summary>
                Gets the original collection of items source without the filter.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.ItemsSource">
            <summary>
                Gets the collection of objects.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.SelectedItem">
            <summary>
                Gets or sets the selected item.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.Filter">
            <summary>
                Sets the filter.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.SelectedItemChanged">
            <summary>
                Occurs when the <c>SelectedItem</c> property changed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.ItemsSourceChanged">
            <summary>
                Occurs when the <c>ItemsSource</c> property changed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1">
            <summary>
                Represents the interface for linear lists.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.UpdateItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Updates the current <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.ItemsSource"/>.
            </summary>
            <param name="value">The new items source value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.SetOriginalItemsSource``1(``0)">
            <summary>
                Sets the original collection of items.
            </summary>
            <param name="originalItemsSource">The source collection.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.OriginalItemsSource">
            <summary>
                Gets the original collection of items source without the filter.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.ItemsSource">
            <summary>
                Gets or sets the collection of objects.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.SelectedItem">
            <summary>
                Gets or sets the selected item.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.Filter">
            <summary>
                Gets or sets the filter.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.SelectedItemChanged">
            <summary>
                Occurs when the <c>SelectedItem</c> property changed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.ItemsSourceChanged">
            <summary>
                Occurs when the <c>ItemsSource</c> property changed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel">
            <summary>
                Represents the view-model that can contains a collection of other <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.AddViewModel(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Adds the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ItemsSource"/>.
            </summary>
            <param name="viewModel">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.RemoveViewModelAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Object)">
            <summary>
                Removes the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> from <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ItemsSource"/>.
            </summary>
            <param name="viewModel">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </param>
            <param name="parameter">The specified parameter, if any.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.Clear">
            <summary>
                Clears all view models from <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ItemsSource"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.SelectedItem">
            <summary>
                Gets or sets the selected view-model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ItemsSource">
            <summary>
                Gets the collection of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>s.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.SelectedItemChanged">
            <summary>
                Occurs when the <c>SelectedItem</c> property changed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ViewModelAdded">
            <summary>
                Occurs when a view model is added.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ViewModelRemoved">
            <summary>
                Occurs when a view model is removed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.INavigableViewModel">
            <summary>
                Represents the view-model which can handle navigation events.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.INavigableViewModel.OnNavigatedTo(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model becomes the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.INavigableViewModel.OnNavigatingFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called just before a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.INavigableViewModel.OnNavigatedFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewAwareViewModel`1">
            <summary>
                Represents the interface that adds support for the view in view models.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewAwareViewModel`1.View">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IWorkspaceViewModel">
            <summary>
                Represents the base class for the view-model, which are displayed in the UI and has <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.ViewModels.IWrapperViewModel">
            <summary>
                Represents the base inteface for view model wrappers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Interfaces.ViewModels.IWrapperViewModel.Wrap(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view-model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.ViewModels.IWrapperViewModel.ViewModel">
            <summary>
                Gets the underlying view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Views.IView`1">
            <summary>
                Adds support for the view-model in view.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Interfaces.Views.IView`1.ViewModel">
            <summary>
                Gets or sets the view-model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Interfaces.Views.IWindowViewBase">
            <summary>
                Represents the base interface for window view.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.DataConstant">
            <summary>
                Identifies a piece of data that could be requested from an <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.StringConstantBase`1">
            <summary>
                Represents the base class for strong type constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.StringConstantBase`1.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.StringConstantBase`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.StringConstantBase`1.Equals(`0)">
            <summary>
                Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
                true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.StringConstantBase`1.Equals(System.Object)">
            <summary>
                Determines whether the specified <see cref="T:System.Object" /> is equal to the current
                <see cref="T:System.Object" />.
            </summary>
            <returns>
                true if the specified object  is equal to the current object; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.StringConstantBase`1.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Models.StringConstantBase`1.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>
                A string that represents the current object.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.StringConstantBase`1.Id">
            <summary>
                Gets the id of constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant.Equals(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
                true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant.#ctor(System.String,System.Type,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstant"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant.Validate(System.Object)">
            <summary>
                Validates the specifed value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant.Create(System.Linq.Expressions.Expression{System.Func{MugenMvvmToolkit.Models.DataConstant}})">
            <summary>
                Creates a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstant`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant.Create``1(System.Linq.Expressions.Expression{System.Func{MugenMvvmToolkit.Models.DataConstant{``0}}})">
            <summary>
                Creates a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstant`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant.Create``1(System.Linq.Expressions.Expression{System.Func{MugenMvvmToolkit.Models.DataConstant{``0}}},System.Boolean)">
            <summary>
                Creates a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstant`1"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DataConstant.Type">
            <summary>
                Gets the type of the constant.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DataConstant.NotNull">
            <summary>
                Gets the value that indicates that the constant value cannot be null.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.DataConstant`1">
            <summary>
                Identifies a piece of data that could be requested from an <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.#ctor(System.String,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstant`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.#ctor(System.String,System.Type,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstant`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.#ctor(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstant`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.ToValue(`0)">
            <summary>
                Converts the specified <see cref="T:MugenMvvmToolkit.Models.DataConstant`1"/> to <see cref="T:MugenMvvmToolkit.Models.DataConstantValue"/>
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.Validate(`0)">
            <summary>
                Validates the specifed value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>
                A string that represents the current object.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.Equals(MugenMvvmToolkit.Models.DataConstant{`0})">
            <summary>
                Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
                true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.Equals(System.Object)">
            <summary>
                Determines whether the specified <see cref="T:System.Object" /> is equal to the current
                <see cref="T:System.Object" />.
            </summary>
            <returns>
                true if the specified object  is equal to the current object; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstant`1.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DataConstant`1.Constant">
            <summary>
                Gets the non-generic data constant.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.DataConstantValue">
            <summary>
                Represents the DataConstant with value.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.DataConstantValue.DataConstant">
            <summary>
                Gets the <see cref="F:MugenMvvmToolkit.Models.DataConstantValue.DataConstant"/>
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.DataConstantValue.Value">
            <summary>
                Gets the value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstantValue.#ctor(MugenMvvmToolkit.Models.DataConstant,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstantValue"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstantValue.Create``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Creates a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstantValue"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstantValue.Create(MugenMvvmToolkit.Models.DataConstant,System.Object)">
            <summary>
                Creates a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataConstantValue"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataConstantValue.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>
                A string that represents the current object.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DataConstantValue.IsEmpty">
            <summary>
                Gets the value that indicates that struct is empty.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.DataContext">
            <summary>
                Represents the specific operation context.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.DataContext.Empty">
            <summary>
                Gets the empty data context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataContext"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataContext"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.#ctor(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{MugenMvvmToolkit.Models.DataConstant,System.Object}})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataContext"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.#ctor(MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataContext"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.#ctor(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DataContext"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.Equals(MugenMvvmToolkit.Models.DataConstant,MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Determines whether the specified objects are equal.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.GetHashCode(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Returns a hash code for the specified object.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.AddValue(MugenMvvmToolkit.Models.DataConstant,System.Object)">
            <summary>
                Adds the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.Add``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.AddOrUpdate``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds the data constant value or update existing.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.GetData``1(MugenMvvmToolkit.Models.DataConstant{``0})">
            <summary>
                Gets the data using the specified data constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.TryGetData``1(MugenMvvmToolkit.Models.DataConstant{``0},``0@)">
            <summary>
                Gets the data using the specified data constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.Contains(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Determines whether the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> contains the specified key.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.Remove(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Removes the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.Update(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Updates the current context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.ToList">
            <summary>
                Creates an instance of <see cref="T:System.Collections.Generic.IList`1"/> from current context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DataContext.IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> is read-only.
            </summary>
            <returns>
                true if the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.Add``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.AddOrUpdate``1(MugenMvvmToolkit.Models.DataConstant{``0},``0)">
            <summary>
                Adds the data constant value or update existing.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.GetData``1(MugenMvvmToolkit.Models.DataConstant{``0})">
            <summary>
                Gets the data using the specified data constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.TryGetData``1(MugenMvvmToolkit.Models.DataConstant{``0},``0@)">
            <summary>
                Gets the data using the specified data constant.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.Contains(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Determines whether the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> contains the specified key.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.Remove(MugenMvvmToolkit.Models.DataConstant)">
            <summary>
                Removes the data constant value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.Update(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Updates the current context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DataContext.EmptyContext.ToList">
            <summary>
                Creates an instance of <see cref="T:System.Collections.Generic.IList`1"/> from current context.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DataContext.EmptyContext.Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
            <returns>
                The number of elements contained in the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DataContext.EmptyContext.IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> is read-only.
            </summary>
            <returns>
                true if the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Models.DefaultViewModelSettings">
            <summary>
                Represents the default view-model settings.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DefaultViewModelSettings.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.DefaultViewModelSettings"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.DefaultViewModelSettings.Clone">
            <summary>
                Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.BroadcastAllMessages">
            <summary>
                Gets or sets property, that is responsible for broadcast all messages through all view models in chain.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.DisposeIocContainer">
            <summary>
                Gets or sets property, that is responsible for auto dispose container when the view model disposing.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.DisposeCommands">
            <summary>
                Gets or sets property, that is responsible for auto dispose all command when the view model disposing.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.HandleBusyMessageMode">
            <summary>
                Gets or sets the value that is responsible for listen busy messages
                see the <see cref="T:MugenMvvmToolkit.Models.Messages.BeginBusyMessage"/> and the <see cref="T:MugenMvvmToolkit.Models.Messages.EndBusyMessage"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.DefaultBusyMessage">
            <summary>
                Gets or sets value that will be displayed when the BeginIsBusy method will be invoked without a message.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.ValidationBusyMessage">
            <summary>
                Gets or sets value that will be displayed when the BeginIsBusy method will be invoked without a message.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.ErrorsChangeExecutionMode">
            <summary>
                Specifies the execution mode for invoke <c>RaiseErrorsChanged</c> method.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.Metadata">
            <summary>
                Gets the data context of current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.DefaultViewModelSettings.State">
            <summary>
                Gets the serializable state of view model.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.NotifyCollectionChangingEventHandler">
            <summary>
                Represents the method that handles the CollectionChanging event.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="T:MugenMvvmToolkit.Models.UpdateValueDelegate`4">
            <summary>
                Reprsents the attached value update delegate.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.GetViewModelDelegate`1">
            <summary>
                Represents the delegate to create view model.
            </summary>
            <typeparam name="TViewModel">The type of view-model.</typeparam>
            <param name="iocContainer">The specified <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.</param>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.</returns>
        </member>
        <member name="T:MugenMvvmToolkit.Models.FilterDelegate`1">
            <summary>
                Represents the method that used as a filter
            </summary>
            <typeparam name="T">The type of model.</typeparam>
            <param name="item">The item to filter.</param>
            <returns>The result of filter.</returns>
        </member>
        <member name="T:MugenMvvmToolkit.Models.EmptyValue`1">
            <summary>
                Represents the empty list helper.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.EmptyValue`1.ArrayInstance">
            <summary>
                Gets the array instance.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.EmptyValue`1.ListInstance">
            <summary>
                Gets the <see cref="T:System.Collections.Generic.IList`1"/> instance.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.EntityStateEntry">
            <summary>
                Represents the entity state entry.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EntityStateEntry.#ctor(MugenMvvmToolkit.Models.EntityState,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.EntityStateEntry"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EntityStateEntry.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>
                A string that represents the current object.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EntityStateEntry.Equals(MugenMvvmToolkit.Models.EntityStateEntry)">
            <summary>
                Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
                true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EntityStateEntry.Equals(System.Object)">
            <summary>
                Determines whether the specified <see cref="T:System.Object" /> is equal to the current
                <see cref="T:System.Object" />.
            </summary>
            <returns>
                true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />;
                otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EntityStateEntry.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EntityStateEntry.State">
            <summary>
                Gets or sets the state of the <see cref="T:MugenMvvmToolkit.Models.EntityState"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EntityStateEntry.Entity">
            <summary>
                Gets the entity object.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.ToastDuration">
            <summary>
                Represents the toast duration.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ToastDuration.Short">
            <summary>
            Show the view or text notification for a short period of time. This time could be user-definable. This is the default.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ToastDuration.Long">
            <summary>
            Show the view or text notification for a long period of time. This time could be user-definable.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.ToastPosition">
            <summary>
                Represents the toast position.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ToastPosition.Bottom">
            <summary>
                Toast is displayed at the bottom of the screen.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ToastPosition.Center">
            <summary>
                Toast is displayed at the center of the screen.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ToastPosition.Top">
            <summary>
                Toast is displayed at top of the screen.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.NotificationCollectionMode">
            <summary>
                Represents the enum that uses by notification collection.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NotificationCollectionMode.None">
            <summary>
                Both methods of interfaces return the real value of count.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NotificationCollectionMode.CollectionIntefaceUseNotificationValue">
            <summary>
                The ICollection interface returns the notification values.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NotificationCollectionMode.GenericCollectionInterfaceUseNotificationValue">
            <summary>
                The ICollection{T} interface returns the notification values.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NotificationCollectionMode.OnlyOnUiThread">
            <summary>
                The flag indicates that notification count will be returned only in UI thread.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.ExecutionMode">
            <summary>
                Specifies the execution mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ExecutionMode.None">
            <summary>
                Executes an action in the current thread.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ExecutionMode.SynchronousOnUiThread">
            <summary>
                Executes an action in Ui thread synchronous.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ExecutionMode.Asynchronous">
            <summary>
                Executes an action asynchronous.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ExecutionMode.AsynchronousOnUiThread">
            <summary>
                Executes an action in Ui thread asynchronous.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.ObservationMode">
            <summary>
                Specifies the observation mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ObservationMode.None">
            <summary>
                None observe.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ObservationMode.ParentObserveChild">
            <summary>
                Parent view model observes child view model.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ObservationMode.ChildObserveParent">
            <summary>
                Child view model observes parent view model.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.ObservationMode.Both">
            <summary>
                Child view model observes parent view model and parent view model observes child view model..
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.HandleMode">
            <summary>
                Specifies the hadnle mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.HandleMode.None">
            <summary>
                None handle
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.HandleMode.Handle">
            <summary>
                Handles and processes a message.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.HandleMode.NotifyObservers">
            <summary>
                Handles and notifies observers about a message.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.HandleMode.HandleAndNotifyObservers">
            <summary>
                Handles and processes a message and notifies observers about the message.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.AuditAction">
            <summary>
                Represents the audit action information.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.AuditAction.Created">
            <summary>
                Create action.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.AuditAction.Initialized">
            <summary>
                Load action
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.AuditAction.Disposed">
            <summary>
                Dispose action.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.AuditAction.Finalized">
            <summary>
                Finalize action.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.MessageButton">
            <summary>
                Specifies the buttons that are displayed on a message box. Used as an argument of the IMessageBox.Show methods.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageButton.Ok">
            <summary>
                Ok button.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageButton.OkCancel">
            <summary>
                Ok and cancel buttons.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageButton.YesNo">
            <summary>
                Yes and no buttons.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageButton.YesNoCancel">
            <summary>
                Yes, no and cancel buttons.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageButton.AbortRetryIgnore">
            <summary>
                Abort, retry and ignore buttons.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageButton.RetryCancel">
            <summary>
                Retry and cancel buttons.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.MessageImage">
            <summary>
                Specifies the icon that is displayed by a message box.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.None">
            <summary>
                None image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Asterisk">
            <summary>
                Asterisk image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Error">
            <summary>
                Error image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Exclamation">
            <summary>
                Exclamation image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Hand">
            <summary>
                Hand image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Information">
            <summary>
                Information image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Question">
            <summary>
                Question image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Stop">
            <summary>
                Stop image.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageImage.Warning">
            <summary>
                Warning image.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.MessageResult">
            <summary>
                Specifies which message box button that a user clicks.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.None">
            <summary>
                None result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.Ok">
            <summary>
                Ok result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.Cancel">
            <summary>
                Cancel result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.No">
            <summary>
                No result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.Yes">
            <summary>
                Yes result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.Abort">
            <summary>
                Abort result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.Retry">
            <summary>
                Retry result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.MessageResult.Ignore">
            <summary>
                Ignore result.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.CommandExecutionMode">
            <summary>
                Represents the enum that uses by <c>IRelayCommand</c> to call the <c>Execute</c> method.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.CommandExecutionMode.None">
            <summary>
                Call the <c>Execute</c> method without checks.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.CommandExecutionMode.CanExecuteBeforeExecute">
            <summary>
                Call the <c>CanExecute</c> method before call the <c>Execute</c> method.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.CommandExecutionMode.CanExecuteBeforeExecuteWithException">
            <summary>
                Call the <c>CanExecute</c> method before call the <c>Execute</c> method and throw an exception if needed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.OperationPriority">
            <summary>
                Describes the priorities at which operations can be invoked by way of the <c>IDispatcher</c>.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.OperationPriority.Low">
            <summary>
                Low priority.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.OperationPriority.Normal">
            <summary>
                Normal priority.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.OperationPriority.High">
            <summary>
                High priority.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.EntityState">
            <summary>
                Represents the entity state.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.EntityState.Unchanged">
            <summary>
                Unchanged state.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.EntityState.Added">
            <summary>
                Added state.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.EntityState.Deleted">
            <summary>
                Deleted state.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.EntityState.Modified">
            <summary>
                Modified state.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.EntityState.Detached">
            <summary>
                Detached state.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.NavigationMode">
            <summary>
                Specifies the type of navigation.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NavigationMode.Undefined">
            <summary>
                Undefined navigation mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NavigationMode.New">
            <summary>
                New navigation mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NavigationMode.Back">
            <summary>
                Back navigation mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NavigationMode.Forward">
            <summary>
                Forward navigation mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NavigationMode.Refresh">
            <summary>
                Refresh navigation mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.NavigationMode.Reset">
            <summary>
                Reset navigation mode.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.TraceLevel">
            <summary>
                Specifies the display trace level.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.TraceLevel.Information">
            <summary>
                Information trace level.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.TraceLevel.Warning">
            <summary>
                Warning trace level.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.TraceLevel.Error">
            <summary>
                Error trace level.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.LoadMode">
            <summary>
                Specifies the load type.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.LoadMode.Design">
            <summary>
                Desing mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.LoadMode.UnitTest">
            <summary>
                Unit-test mode.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.LoadMode.Runtime">
            <summary>
                Runtime mode.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ChangesAppliedEventArgs.#ctor(System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry})">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.ChangesAppliedEventArgs"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ChangesAppliedEventArgs.Changes">
            <summary>
                Gets the applied changes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ChangesCanceledEventArgs.#ctor(System.Object)">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.ChangesCanceledEventArgs"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ChangesCanceledEventArgs`1.#ctor(`0)">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.ChangesCanceledEventArgs`1"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.EntityInitializedEventArgs.#ctor(System.Object,System.Object)">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.EntityInitializedEventArgs"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.EntityInitializedEventArgs`1.#ctor(`0,`0)">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.EntityInitializedEventArgs`1"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ItemsSourceChangedEventArgs.#ctor(System.Collections.IEnumerable)">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.ItemsSourceChangedEventArgs"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ItemsSourceChangedEventArgs.Value">
            <summary>
                Gets the new value of items source.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ItemsSourceChangedEventArgs`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.ItemsSourceChangedEventArgs`1"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ItemsSourceChangedEventArgs`1.Value">
            <summary>
                Gets the new value of items source.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.NavigatedEventArgs.#ctor(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Initializes the <see cref="T:MugenMvvmToolkit.Models.EventArg.NavigatedEventArgs"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NavigatedEventArgs.Context">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NavigatedEventArgs.ViewModel">
            <summary>
                Gets the navigated <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs">
            <summary>
                Provides data for the CollectionChanging event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs.ChangedEventArgs">
            <summary>
                Gets the underlying <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs.Action">
            <summary>
                The action that caused the event.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs.NewItems">
            <summary>
                The items affected by the change.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs.OldItems">
            <summary>
                The old items affected by the change (for Replace events).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs.NewStartingIndex">
            <summary>
                The index where the change occurred.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs.OldStartingIndex">
            <summary>
                The old index where the change occurred (for Move events).
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ValueChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.EventArg.ValueChangedEventArgs`1"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ValueChangedEventArgs`1.OldValue">
            <summary>
                Gets the old value.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ValueChangedEventArgs`1.NewValue">
            <summary>
                Gets the new value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.SelectedItemChangedEventArgs.#ctor(System.Object,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.EventArg.SelectedItemChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.SelectedItemChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.EventArg.SelectedItemChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.SelectedItemChangedEventArgs`1.OldValue">
            <summary>
                Gets the old value.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.SelectedItemChangedEventArgs`1.NewValue">
            <summary>
                Gets the new value.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ViewModelClosedEventArgs.#ctor(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.EventArg.ViewModelClosedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ViewModelClosedEventArgs.ViewModel">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ViewModelClosedEventArgs.Parameter">
            <summary>
                The specified close parameter if any.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.EventArg.ViewModelClosingEventArgs.#ctor(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.EventArg.ViewModelClosingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.EventArg.ViewModelClosingEventArgs.Cancel">
            <summary>
                Gets or sets a value indicating whether the event should be canceled.
            </summary>
            <returns>
                true if the event should be canceled; otherwise, false.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Exceptions.DesignTimeException">
            <summary>
                Represents the design time exception.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Exceptions.DesignTimeException.#ctor(System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Exceptions.DesignTimeException"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.IoC.BindingInfo`1">
            <summary>
                Represents an information about binding.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.BindingInfo`1.Empty">
            <summary>
                Gets the empty instance of BindingInfo.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.BindingInfo`1.Instance">
            <summary>
                Gets the constant instance.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.BindingInfo`1.Lifecycle">
            <summary>
                Gets the dependecy lifecycle of service.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.BindingInfo`1.MethodBindingDelegate">
            <summary>
                Gets the method binding delegate.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.BindingInfo`1.Name">
            <summary>
                Gets the name of binding.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.BindingInfo`1.Type">
            <summary>
                Gets the type of service.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.BindingInfo`1.#ctor(System.Type,System.Func{MugenMvvmToolkit.Interfaces.IIocContainer,System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.IIocParameter},`0},`0,MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.IoC.BindingInfo`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.BindingInfo`1.FromInstance(`0,System.String)">
            <summary>
                Creates an instance of BindingInfo from an instance of service.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.BindingInfo`1.FromType``1(MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Creates an instance of BindingInfo from a type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.BindingInfo`1.FromType(System.Type,MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Creates an instance of BindingInfo from a type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.BindingInfo`1.FromMethod(System.Func{MugenMvvmToolkit.Interfaces.IIocContainer,System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.IIocParameter},`0},MugenMvvmToolkit.Models.IoC.DependencyLifecycle,System.String)">
            <summary>
                Creates an instance of BindingInfo from a method.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.BindingInfo`1.SetBinding(MugenMvvmToolkit.Interfaces.IIocContainer)">
            <summary>
                Sets the current binding.
            </summary>
            <param name="iocContainer"></param>
        </member>
        <member name="P:MugenMvvmToolkit.Models.IoC.BindingInfo`1.IsEmpty">
            <summary>
                Gets the value that indicates that binding info is empty.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.IoC.DependencyLifecycle">
            <summary>
                Represent the various lifecycles available for coponents configured in the container
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.DependencyLifecycle.SingleInstance">
            <summary>
                Singleton scope
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.DependencyLifecycle.TransientInstance">
            <summary>
                Transient scope.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.DependencyLifecycle.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.IoC.DependencyLifecycle"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.IoC.IocParameter">
            <summary>
                Represents the base interface for all ioc parameters.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.IocParameter.#ctor(System.String,System.Object,MugenMvvmToolkit.Models.IoC.IocParameterType)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.IoC.IocParameter"/> class.
            </summary>
            <param name="name">Specified parameter name.</param>
            <param name="value">Specified parameter value.</param>
            <param name="parameterType">Specified parameter type. </param>
        </member>
        <member name="P:MugenMvvmToolkit.Models.IoC.IocParameter.ParameterType">
            <summary>
                Gets the parameter type.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.IoC.IocParameter.Name">
            <summary>
                Gets the parameter name.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.IoC.IocParameter.Value">
            <summary>
                Gets the parameter value.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.IoC.IocParameterType">
            <summary>
                Represents the parameter types.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.IocParameterType.Constructor">
            <summary>
                Constructor parameter.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.IoC.IocParameterType.Property">
            <summary>
                Property parameter.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.IoC.IocParameterType.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.IoC.IocParameterType"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Messages.AsyncValidationMessage">
            <summary>
                Provides data for the error changed event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Messages.AsyncValidationMessage.#ctor(System.Guid,System.String,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Messages.AsyncValidationMessage"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Messages.AsyncValidationMessage.ToEndMessage">
            <summary>
                Converts current message to an instance of <c>AsyncValidationMessage</c>.
            </summary>
            <returns>An instance of <c>AsyncValidationMessage</c>.</returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.AsyncValidationMessage.IsEndOperation">
            <summary>
                Gets the value that indicates that this operation is final.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.AsyncValidationMessage.PropertyName">
            <summary>
                Gets the name of property, if any.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.AsyncValidationMessage.Id">
            <summary>
                Gets the id of operation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Messages.BeginBusyMessage">
            <summary>
                Represents the busy operation message.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Messages.BeginBusyMessage.#ctor(System.Guid,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Messages.BeginBusyMessage"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Messages.BeginBusyMessage.ToEndBusyMessage">
            <summary>
                Converts current message to an instance of <c>EndBusyMessage</c>.
            </summary>
            <returns>An instance of <c>EndBusyMessage</c>.</returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.BeginBusyMessage.Id">
            <summary>
                Gets the id of operation.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.BeginBusyMessage.Message">
            <summary>
                Gets the message
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Messages.DataErrorsChangedMessage">
            <summary>
                Provides data for the error changed event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Messages.DataErrorsChangedMessage.#ctor(System.String,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Messages.DataErrorsChangedMessage"/> class.
            </summary>
            <param name="propertyName">
                The name of the property that has an error.  null or <see cref="F:System.String.Empty"/> if the error is
                object-level.
            </param>
            <param name="isAsyncValidate">Indicates that property was async validation.</param>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.DataErrorsChangedMessage.PropertyName">
            <summary>
                Gets the name of the property that has an error.
            </summary>
            <returns>
                The name of the property that has an error. null or <see cref="F:System.String.Empty" /> if the error is
                object-level.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.DataErrorsChangedMessage.IsAsyncValidate">
            <summary>
                Indicates that property was async validated.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Messages.EndBusyMessage">
            <summary>
                Represents the remove busy operation message.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Messages.EndBusyMessage.#ctor(System.Guid)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Messages.EndBusyMessage"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Messages.EndBusyMessage.Id">
            <summary>
                Gets the id of operation.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Messages.StateChangedMessage">
            <summary>
                Represents the message that indicates that any state was changed.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.Messages.StateChangedMessage.Empty">
            <summary>
                Gets the empty message.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Messages.StateChangedMessage.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Messages.StateChangedMessage"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.ModuleContext">
            <summary>
                Represents the module context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.ModuleContext.#ctor(MugenMvvmToolkit.Models.PlatformInfo,MugenMvvmToolkit.Models.LoadMode,MugenMvvmToolkit.Interfaces.IIocContainer,MugenMvvmToolkit.Interfaces.Models.IDataContext,System.Collections.Generic.IList{System.Reflection.Assembly})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.ModuleContext"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ModuleContext.IocContainer">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ModuleContext.Context">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ModuleContext.Assemblies">
            <summary>
                Gets the application assemblies.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ModuleContext.Mode">
            <summary>
                Gets the module load mode.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ModuleContext.Platform">
            <summary>
                Gets the current platform.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.NavigationContext">
            <summary>
                Represents the base navigation context implementation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NavigationContext.#ctor(MugenMvvmToolkit.Models.NavigationMode,System.Boolean,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Object,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.NavigationContext"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NavigationContext.IsAutoCreated">
            <summary>
                Gets the value that indicates that view-model was created using the navigation system.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NavigationContext.NavigationMode">
            <summary>
                Gets the value of the mode parameter from the originating Navigate call.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NavigationContext.ViewModelFrom">
            <summary>
            Gets the previously navigate view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NavigationContext.ViewModelTo">
            <summary>
                Gets the view model to navigate.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NavigationContext.Parameters">
            <summary>
                Gets the navigation parameters.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NavigationContext.NavigationProvider">
            <summary>
                Gets the navigation provider that creates this context.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.NotifyPropertyChangedBase">
            <summary>
                Represents the base class which adds support <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.NotifyPropertyChangedBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.OnPropertyChanged(System.String)">
            <summary>
                Calls the event for the specified property.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.OnPropertyChanged(System.String,MugenMvvmToolkit.Models.ExecutionMode)">
            <summary>
                Calls the event for the specified property.
            </summary>
            <param name="propName">Specified property name.</param>
            <param name="executionMode">
                Specifies the execution mode for raise property changed event.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
                Calls the event for the specified property.
            </summary>
            <param name="expression">Specified expression with property.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}},MugenMvvmToolkit.Models.ExecutionMode)">
            <summary>
                Calls the event for the specified property.
            </summary>
            <param name="expression">Specified expression with property.</param>
            <param name="executionMode">
                Specifies the execution mode for raise property changed event.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.SetProperty``1(``0@,``0,System.String,System.Nullable{MugenMvvmToolkit.Models.ExecutionMode})">
            <summary>
                Sets a property with calling property change event.
            </summary>
            <typeparam name="T">The type of property.</typeparam>
            <param name="propertyValue">The property value.</param>
            <param name="newValue">The new property value.</param>
            <param name="propName">Specified expression with property.</param>
            <param name="executionMode">
                Specifies the execution mode for raise property changed event.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.SetProperty``1(``0@,``0,System.Linq.Expressions.Expression{System.Func{``0}},System.Nullable{MugenMvvmToolkit.Models.ExecutionMode})">
            <summary>
                Sets a property with calling property change event.
            </summary>
            <typeparam name="T">The type of property.</typeparam>
            <param name="propertyValue">The property value.</param>
            <param name="newValue">The new property value.</param>
            <param name="expression">Specified expression with property.</param>
            <param name="executionMode">
                Specifies the execution mode for raise property changed event.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs,MugenMvvmToolkit.Models.ExecutionMode)">
            <summary>
                Calls the event for the specified property.
            </summary>
            <param name="args">The specified property args.</param>
            <param name="executionMode">
                Specifies the execution mode for raise property changed event.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.OnEndSuspendNotifications(System.Boolean)">
            <summary>
            Occurs on end suspend notifications.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.ClearPropertyChangedSubscribers">
            <summary>
                Clears all <see cref="E:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.PropertyChanged"/> subscribers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.SuspendNotifications">
            <summary>
                Suspends the change notifications until the returned <see cref="T:System.IDisposable"/> is disposed.
            </summary>
            <returns>An instance of token.</returns>
        </member>
        <member name="E:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.PropertyChanged">
            <summary>
                Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.IsNotificationsDirty">
            <summary>
                Gets or sets a value indicating whether change to the collection is made when its notifications are suspended.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.ThreadManager">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.PropertyChangeExecutionMode">
            <summary>
                Specifies the execution mode for raise property change event.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.NotifyPropertyChangedBase.IsNotificationsSuspended">
            <summary>
                Gets or sets a value indicating whether change notifications are suspended. <c>True</c> if notifications are
                suspended, otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.OperationType.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.OperationType"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.PlatformInfo">
            <summary>
                Represents the information about a platform.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.PlatformInfo.Unknown">
            <summary>
                Gets the unknown platform info.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.PlatformInfo.UnitTest">
            <summary>
                Gets the unit test platform info.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.PlatformInfo.#ctor(MugenMvvmToolkit.Models.PlatformType,System.Version)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.PlatformInfo"/> class.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.PlatformInfo.Platform">
            <summary>
                Gets the current platform.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.PlatformInfo.Version">
            <summary>
                Gets the current platform version.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.PlatformType">
            <summary>
                Represents the platform type.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.PlatformType.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.PlatformType"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.RelayCommand">
            <summary>
                A command whose sole purpose is to relay its functionality to other objects by invoking delegates. The default
                return value for the CanExecute method is 'true'.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.RelayCommand`1">
            <summary>
                A command whose sole purpose is to relay its functionality to other objects by invoking delegates. The default
                return value for the CanExecute method is 'true'.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.RelayCommandBase">
            <summary>
                An extension to ICommand to provide an ability to raise changed events.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.RelayCommandBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.#ctor(System.Boolean,System.Object[])">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.RelayCommandBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.#ctor(System.Object[])">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.RelayCommandBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.CanExecute(System.Object)">
            <summary>
                Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
                true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">
                Data used by the command.  If the command does not require data to be passed, this object can
                be set to null.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.Execute(System.Object)">
            <summary>
                Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
                Data used by the command.  If the command does not require data to be passed, this object can
                be set to null.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.RaiseCanExecuteChanged">
            <summary>
                This method can be used to raise the CanExecuteChanged handler.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.GetNotifiers">
            <summary>
                Gets the current command notifiers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.AddNotifier(System.Object)">
            <summary>
                Adds the specified notifier to manage the <c>CanExecuteChanged</c> event.
            </summary>
            <param name="item">The specified notifier item.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.RemoveNotifier(System.Object)">
            <summary>
                Removes the specified notifier.
            </summary>
            <param name="item">The specified notifier item.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.ClearNotifiers">
            <summary>
                Removes all notifiers.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.MugenMvvmToolkit#Interfaces#Models#IHandler{MugenMvvmToolkit#Interfaces#Models#IBroadcastMessage}#Handle(System.Object,MugenMvvmToolkit.Interfaces.Models.IBroadcastMessage)">
            <summary>
                Handles the message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">Information about event.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.CanExecuteInternal(System.Object)">
            <summary>
                Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
                true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">
                Data used by the command.  If the command does not require data to be passed, this object can
                be set to null.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.ExecuteInternal(System.Object)">
            <summary>
                Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
                Data used by the command.  If the command does not require data to be passed, this object can
                be set to null.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.CreateNotifier(System.Object)">
            <summary>
                Creates the notifier.
            </summary>
            <param name="item">The specified item to create notifier.</param>
            <returns>An action to unsubscribe.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.OnDispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommandBase.OnEndSuspendNotifications(System.Boolean)">
            <summary>
            Occurs on end suspend notifications.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.RelayCommandBase.ExecuteAsynchronously">
            <summary>
                Gets or sets the value, if <c>true</c> execute asynchronously; otherwise <c>false</c> - synchronously.
                Default value is false.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.RelayCommandBase.HasCanExecuteImpl">
            <summary>
                Gets the value that indicates that command has can execute handler.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.RelayCommandBase.ExecutionMode">
            <summary>
                Specifies the execution mode for <c>Execute</c> method.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.RelayCommandBase.CanExecuteMode">
            <summary>
                Specifies the execution mode for <c>RaiseCanExecuteChanged</c> method in <c>IRelayCommand</c>.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.Models.RelayCommandBase.CanExecuteChanged">
            <summary>
                Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.RelayCommand"/> class.
            </summary>
            <param name="execute">The specified command action for execute.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0},System.Object[])">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.RelayCommand"/> class.
            </summary>
            <param name="execute">The specified command action for execute.</param>
            <param name="canExecute">The specified command condition.</param>
            <param name="notifiers">
                The specified objects that invokes the <c>RaiseCanExecuteChanged</c> method, when a change
                occurs.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommand`1.CanExecuteInternal(System.Object)">
            <summary>
                Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
                true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">
                Data used by the command.  If the command does not require data to be passed, this object can
                be set to null.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommand`1.ExecuteInternal(System.Object)">
            <summary>
                Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
                Data used by the command.  If the command does not require data to be passed, this object can
                be set to null.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.RelayCommand"/> class.
            </summary>
            <param name="execute">The specified command action for execute.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object},System.Object[])">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.RelayCommand"/> class.
            </summary>
            <param name="execute">The specified command action for execute.</param>
            <param name="canExecute">The specified command condition.</param>
            <param name="notifiers">
                The specified objects that invokes the <c>RaiseCanExecuteChanged</c> method, when a change
                occurs.
            </param>
        </member>
        <member name="T:MugenMvvmToolkit.Models.TrackingEntity`1">
            <summary>
                Represents the tracking entity.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.TrackingEntity`1.Entity">
            <summary>
                Gets the entity object.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.TrackingEntity`1.State">
            <summary>
                Gets or sets the state of the <see cref="T:MugenMvvmToolkit.Models.EntityState"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.TrackingEntity`1.#ctor(`0,MugenMvvmToolkit.Models.EntityState)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.TrackingEntity`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.TrackingEntity`1.ToString">
            <summary>
                Returns a <see cref="T:System.String"/> that represents the current <see cref="T:MugenMvvmToolkit.Models.TrackingEntity`1"/>.
            </summary>
            <returns>
                A <see cref="T:System.String"/> that represents the current <see cref="T:MugenMvvmToolkit.Models.TrackingEntity`1"/>.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Validation.ValidationContext">
            <summary>
                Describes the context in which a validation check is performed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Validation.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Validation.ValidationContext"/> class using the service provider and dictionary
                of service consumers.
            </summary>
            <param name="instance">The object to validate. This parameter is required.</param>
            <param name="serviceProvider">
                The object that implements the <see cref="T:System.IServiceProvider"/> interface. This
                parameter is optional.
            </param>
            <param name="items">
                A dictionary of key/value pairs to make available to the service consumers. This parameter is
                optional.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Validation.ValidationContext.GetService(System.Type)">
            <summary>
                Gets the service object of the specified type.
            </summary>
            <returns>
                A service object of type <paramref name="serviceType" />.
                -or-
                null if there is no service object of type <paramref name="serviceType" />.
            </returns>
            <param name="serviceType">
                An object that specifies the type of service object to get.
            </param>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationContext.ObjectInstance">
            <summary>
                Gets the object to validate.
            </summary>
            <returns>
                The object to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationContext.ObjectType">
            <summary>
                Gets the type of the object to validate.
            </summary>
            <returns>
                The type of the object to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationContext.DisplayName">
            <summary>
                Gets or sets the name of the member to validate.
            </summary>
            <returns>
                The name of the member to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationContext.MemberName">
            <summary>
                Gets or sets the name of the member to validate.
            </summary>
            <returns>
                The name of the member to validate.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationContext.Items">
            <summary>
                Gets the dictionary of key/value pairs that is associated with this context.
            </summary>
            <returns>
                The dictionary of the key/value pairs for this context.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationContext.ServiceProvider">
            <summary>
                Gets the validation services provider.
            </summary>
            <returns>
                The validation services provider.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Validation.ValidationResult">
            <summary>
                Represents a container for the results of a validation request.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Models.Validation.ValidationResult.Success">
            <summary>
                Represents the success of the validation (true if validation was successful; otherwise, false).
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Validation.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Validation.ValidationResult"/> class by using an error message and a list of
                members that have validation errors.
            </summary>
            <param name="errorMessage">The error message.</param>
            <param name="memberNames">The list of member names that have validation errors.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Validation.ValidationResult.ToString">
            <summary>
                Returns a string representation of the current validation result.
            </summary>
            <returns>
                The current validation result.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationResult.IsValid">
            <summary>
                Gets the value which contains validation result.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationResult.MemberNames">
            <summary>
                Gets the collection of member names that indicate which fields have validation errors.
            </summary>
            <returns>
                The collection of member names that indicate which fields have validation errors.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidationResult.ErrorMessage">
            <summary>
                Gets the error message for the validation.
            </summary>
            <returns>
                The error message for the validation.
            </returns>
        </member>
        <member name="T:MugenMvvmToolkit.Models.Validation.ValidatorContext">
            <summary>
                Represents the validation context.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Validation.ValidatorContext.#ctor(System.Object,System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Validation.ValidatorContext"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Validation.ValidatorContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{System.String}},System.Collections.Generic.ICollection{System.String},MugenMvvmToolkit.Interfaces.Models.IDataContext,System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.Validation.ValidatorContext"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.Validation.ValidatorContext.System#IServiceProvider#GetService(System.Type)">
            <summary>
                Gets the service object of the specified type.
            </summary>
            <returns>
                A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type
                <paramref name="serviceType" />.
            </returns>
            <param name="serviceType">An object that specifies the type of service object to get. </param>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidatorContext.InstanceToValidate">
            <summary>
                Gets the object to validate.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidatorContext.ValidationMetadata">
            <summary>
                Gets or sets the validation metadata.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidatorContext.PropertiesMapping">
            <summary>
                Gets the error properties mapping.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidatorContext.IgnoreProperties">
            <summary>
                Gets the list of properties that will not be validated.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.Validation.ValidatorContext.ServiceProvider">
            <summary>
                Gets the service provider.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Models.ViewMappingItem">
            <summary>
                Represents the interface which contains information about binding a view to a view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.ViewMappingItem.#ctor(System.Type,System.Type,System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Models.ViewMappingItem"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Models.ViewMappingItem.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ViewMappingItem.Name">
            <summary>
                Gets the name of mapping.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ViewMappingItem.ViewType">
            <summary>
                Gets the type of view.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ViewMappingItem.ViewModelType">
            <summary>
                Gets or sets the type of view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Models.ViewMappingItem.Uri">
            <summary>
                Gets the uri, if any.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ServiceProvider.Initialize(MugenMvvmToolkit.Interfaces.IIocContainer,MugenMvvmToolkit.Models.PlatformInfo)">
            <summary>
                Sets the <see cref="P:MugenMvvmToolkit.ServiceProvider.IocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.DelegateToSerializableCallbackConverter">
            <summary>
            Gets or sets the delegate that allows to convert a delegate to an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.ISerializableCallback"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.DefaultEntityFactory">
            <summary>
                Gets or sets the factory that creates an empty instance of editable entity.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.EntityMetadataTypeProvider">
            <summary>
                Gets or sets the metadata type provider.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.WeakReferenceFactory">
            <summary>
                Gets or sets the factory that creates a instance of <see cref="T:System.WeakReference"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.InstanceEventAggregatorFactory">
            <summary>
                Gets or sets the factory that creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.IEventAggregator"/> for the specified item.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.TrackingCollectionEqualityComparerFactory">
            <summary>
                Gets or sets the factory that creates an instance of <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.TrackingCollectionStateTransitionManagerFactory">
            <summary>
                Gets or sets the factory that creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.IStateTransitionManager"/>
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.IocContainer">
            <summary>
                Gets or sets the root <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.ThreadManager">
            <summary>
                Gets or sets the default <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.AttachedValueProvider">
            <summary>
                Gets or sets the attached value provider.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.HasAttachedValueProvider">
            <summary>
                Gets the flag that indicates that the attached value provider is initialized.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.ReflectionManager">
            <summary>
                Gets or sets the default <see cref="T:MugenMvvmToolkit.Interfaces.IReflectionManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.Tracer">
            <summary>
                Gets or sets the default tracer
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ServiceProvider.AsyncOperationAwaiterFactory">
            <summary>
                Gets or sets the default <see cref="T:MugenMvvmToolkit.Interfaces.Callbacks.IAsyncOperationAwaiterFactory"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Should">
            <summary>
                A static helper class that includes various parameter checking routines.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Should.NotBeNull(System.Object,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.NotBeNullOrEmpty(System.String,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentException"/> if the given argument is null or empty.
            </summary>
            <exception cref="T:System.ArgumentException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.NotBeNullOrWhitespace(System.String,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentException"/> if the given argument is null or whitespace.
            </summary>
            <exception cref="T:System.ArgumentException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.NotBeNullOrEmpty``1(``0,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentException"/> if the given argument is empty.
            </summary>
            <exception cref="T:System.ArgumentException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.NotBeNullOrDefault``1(System.Nullable{``0},System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentException"/> if the given argument is default.
            </summary>
            <exception cref="T:System.ArgumentException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.NotBeDefault``1(``0,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentException"/> if the given argument is default.
            </summary>
            <exception cref="T:System.ArgumentException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeOfType(System.Object,System.String,System.Type)">
            <summary>
                Checks whether the specified <paramref name="instance" /> is of the specified <paramref name="requiredType" />.
            </summary>
            <param name="paramName">Name of the param.</param>
            <param name="instance">The instance to check.</param>
            <param name="requiredType">The type to check for.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeOfType``1(System.Object,System.String)">
            <summary>
                Checks whether the specified <paramref name="instance" /> is of the specified T.
            </summary>
            <param name="paramName">Name of the param.</param>
            <param name="instance">The instance to check.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeOfType(System.Type,System.String,System.Type)">
            <summary>
                Checks whether the specified <paramref name="type" /> is of the specified <paramref name="requiredType" />.
            </summary>
            <param name="paramName">Name of the param.</param>
            <param name="type">The type to check.</param>
            <param name="requiredType">The type to check for.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeOfType``1(System.Type,System.String)">
            <summary>
                Checks whether the specified T is of the specified <paramref name="type" />.
            </summary>
            <param name="paramName">Name of the param.</param>
            <param name="type">The type to check for.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeSupported(System.Boolean,System.String,System.Object[])">
            <summary>
                Checks whether the passed in boolean check is <c>true</c>. If not, this method will throw a
                <see cref="T:System.NotSupportedException"/>.
            </summary>
            <param name="isSupported">if set to <c>true</c>, the action is supported; otherwise <c>false</c>.</param>
            <param name="errorFormat">The error format.</param>
            <param name="args">The arguments for the string format.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.MethodBeSupported(System.Boolean,System.String)">
            <summary>
                Checks whether the passed in boolean check is <c>true</c>. If not, this method will throw a
                <see cref="T:System.NotSupportedException"/>.
            </summary>
            <param name="isSupported">if set to <c>true</c>, the action is supported; otherwise <c>false</c>.</param>
            <param name="methodName">The specified method signature.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeValid(System.String,System.Func{System.Boolean})">
            <summary>
                Determines whether the specified argument is valid.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="validation">The validation function.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeValid``1(``0,System.String,System.Func{``0,System.Boolean})">
            <summary>
                Determines whether the specified argument is valid.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="paramName">Name of the parameter.</param>
            <param name="paramValue">The parameter value.</param>
            <param name="validation">The validation function.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.BeValid(System.String,System.Boolean)">
            <summary>
                Determines whether the specified argument is valid.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="validation">The validation function.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.PropertyBeNotNull(System.Object,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException"> if tested value if null.</exception>
            <param name="value">Argument value to test.</param>
            <param name="propertyName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.PropertyBeNotNullOrEmpty(System.String,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null or empty.
            </summary>
            <exception cref="T:System.ArgumentNullException"> if tested value if null.</exception>
            <param name="value">Argument value to test.</param>
            <param name="propertyName">Name of the parameter being tested. </param>
        </member>
        <member name="M:MugenMvvmToolkit.Should.NotBeDisposed(MugenMvvmToolkit.Interfaces.Models.IDisposableObject)">
            <summary>
                Makes sure that the object is not disposed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Tracer">
            <summary>
                Represents the default tracer.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Tracer.Instance">
            <summary>
                Gets the instance of <see cref="T:MugenMvvmToolkit.Interfaces.ITracer"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Info(System.String)">
            <summary>
            Writes an info message to the default tracer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Warn(System.String)">
            <summary>
            Writes a warning message to the default tracer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Error(System.String)">
            <summary>
            Writes an error message to the default tracer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Info(System.String,System.Object[])">
            <summary>
            Writes an info message to the default tracer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Warn(System.String,System.Object[])">
            <summary>
            Writes a warning message to the default tracer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Error(System.String,System.Object[])">
            <summary>
            Writes an error message to the default tracer.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.TraceViewModel(MugenMvvmToolkit.Models.AuditAction,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Updates information about view-models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Trace(MugenMvvmToolkit.Models.TraceLevel,System.String)">
            <summary>
                Writes an informational message to the trace listeners.
            </summary>
            <param name="level">The specified trace level.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.Trace(MugenMvvmToolkit.Models.TraceLevel,System.String,System.Object[])">
            <summary>
                Writes an informational message to the trace listeners.
            </summary>
            <param name="level">The specified trace level.</param>
            <param name="format">The message to write.</param>
            <param name="args">The string format members.</param>
        </member>
        <member name="M:MugenMvvmToolkit.Tracer.MugenMvvmToolkit#Interfaces#ITaskExceptionHandler#Handle(System.Object,System.Threading.Tasks.Task)">
            <summary>
                Handles an exception.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="task">The task that throws an exception.</param>
        </member>
        <member name="T:MugenMvvmToolkit.UnitTestBase">
            <summary>
                Represents the class that is used for unit tests.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.UnitTestBase.Initialize(MugenMvvmToolkit.Interfaces.IIocContainer,MugenMvvmToolkit.Interfaces.IModule[])">
            <summary>
                Initializes the current unit-test.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.UnitTestBase.Initialize(MugenMvvmToolkit.Interfaces.IIocContainer,MugenMvvmToolkit.Models.PlatformInfo,MugenMvvmToolkit.Interfaces.IModule[])">
            <summary>
                Initializes the current unit-test.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.UnitTestBase.CreateModuleContext(MugenMvvmToolkit.Interfaces.IIocContainer)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IModuleContext"/>.
            </summary>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IModuleContext"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.UnitTestBase.GetViewModel(MugenMvvmToolkit.Models.GetViewModelDelegate{MugenMvvmToolkit.Interfaces.ViewModels.IViewModel},MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{System.Boolean},System.Nullable{MugenMvvmToolkit.Models.ObservationMode},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="getViewModel">The specified delegate to create view model.</param>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.UnitTestBase.GetViewModel``1(MugenMvvmToolkit.Models.GetViewModelDelegate{``0},MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{System.Boolean},System.Nullable{MugenMvvmToolkit.Models.ObservationMode},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="getViewModelGeneric">The specified delegate to create view model.</param>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.UnitTestBase.GetViewModel(System.Type,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{System.Boolean},System.Nullable{MugenMvvmToolkit.Models.ObservationMode},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelType">The type of view model.</param>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.UnitTestBase.GetViewModel``1(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <typeparam name="T">The type of view model.</typeparam>
            <param name="parentViewModel">The parent view model.</param>
            <param name="useParentIocContainer">
                The value that is responsible to initialize the IocContainer using the IocContainer of
                parent view model.
            </param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="P:MugenMvvmToolkit.UnitTestBase.IocContainer">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.IIocContainer"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.UnitTestBase.ViewModelProvider">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.IViewModelProvider"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Utils.ExceptionManager">
            <summary>
                Represents the class that throws exceptions.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.ExceptionManager.EnumOutOfRange(System.String,System.Enum)">
            <summary>
                Returns an exception if enum is out of range.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.ExceptionManager.NavigateNotSupported(System.Type,System.String)">
            <summary>
                Returns an exception if navigate method is not supported.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.Utils.MvvmUtils">
            <summary>
                Represents the helper class.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Utils.MvvmUtils.TrueTaskResult">
            <summary>
                Gets the true task result.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.Utils.MvvmUtils.FalseTaskResult">
            <summary>
                Gets the false task result.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Utils.MvvmUtils"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.TryCloseAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Object,MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
            Tries to close view-model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.TraceFinalizedItem(System.Object,System.String)">
            <summary>
            Writes information about an item.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.GetDesignAssemblies(System.Boolean)">
            <summary>
                Gets assemblies.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.GetModules(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean,System.Func{System.Type,System.Boolean},System.Func{MugenMvvmToolkit.Interfaces.IModule,System.Boolean})">
            <summary>
                Gets the modules.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.InitializeDesignTimeManager">
            <summary>
                Tries to initialize <see cref="T:MugenMvvmToolkit.Interfaces.IDesignTimeManager"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.TryInitializeDesignViewModel(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Tries to initialize design view model using the <see cref="P:MugenMvvmToolkit.ApplicationSettings.GetDesignTimeManager"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtils.SkipFrameworkAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Filters assemblies.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.Utils.MvvmUtils.CanTraceFinalizedItem">
            <summary>
            Gets or sets the value that is responsible to trace disposed items.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.Utils.MvvmUtilsInternal.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.Utils.MvvmUtilsInternal"/> class.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.CloseableViewModel">
            <summary>
                Represents the base class for view models that can be closed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.ViewModelBase">
            <summary>
                Represents the base class for all view models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.ViewModelBase"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.MugenMvvmToolkit#Interfaces#ViewModels#IViewModel#InitializeViewModel(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Initializes the current view model using the specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Models.IDataContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.BeginBusy(System.Object)">
            <summary>
                Begins to indicate that the current view model is busy.
            </summary>
            <param name="message">
                The specified message for the <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel.BusyMessage"/> property.
            </param>
            <returns>Id of the operation.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.EndBusy(System.Guid)">
            <summary>
                Ends to indicate that the current view model is busy.
            </summary>
            <param name="idBusy">Id of the operation to end.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.ClearBusy">
            <summary>
                Clears all busy operations.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.Subscribe(System.Object)">
            <summary>
                Subscribes an instance to events.
            </summary>
            <param name="instance">The instance to subscribe for event publication.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.Unsubscribe(System.Object)">
            <summary>
                Unsubscribes the instance from all events.
            </summary>
            <param name="instance">The instance to unsubscribe.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.MugenMvvmToolkit#Interfaces#Models#IHandler{System#Object}#Handle(System.Object,System.Object)">
            <summary>
                Handles the message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">Information about event.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.GetViewModel(MugenMvvmToolkit.Models.GetViewModelDelegate{MugenMvvmToolkit.Interfaces.ViewModels.IViewModel},System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="getViewModel">The specified delegate to create view model.</param>
            <param name="useParentIocContainer">The value that is responsible to initialize the IocContainer using the IocContainer of parent view model.</param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.GetViewModel``1(MugenMvvmToolkit.Models.GetViewModelDelegate{``0},System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="getViewModelGeneric">The specified delegate to create view model.</param>
            <param name="useParentIocContainer">The value that is responsible to initialize the IocContainer using the IocContainer of parent view model.</param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.GetViewModel(System.Type,System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <param name="viewModelType">The type of view model.</param>
            <param name="useParentIocContainer">The value that is responsible to initialize the IocContainer using the IocContainer of parent view model.</param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.GetViewModel``1(System.Nullable{MugenMvvmToolkit.Models.ObservationMode},System.Nullable{System.Boolean},MugenMvvmToolkit.Models.DataConstantValue[])">
            <summary>
                Creates an instance of the specified view model.
            </summary>
            <typeparam name="T">The type of view model.</typeparam>
            <param name="useParentIocContainer">The value that is responsible to initialize the IocContainer using the IocContainer of parent view model.</param>
            <param name="observationMode">The value that is responsible for listen messages in created view model.</param>
            <param name="parameters">The specified parameters to get view-model.</param>
            <returns>
                An instance of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.CreateCommand``1(System.Action{``0},System.Predicate{``0})">
            <summary>
            Creates an instance of <see cref="T:MugenMvvmToolkit.Models.RelayCommand`1"/> with specified execute and canExecute actions.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.Publish(System.Object)">
            <summary>
                Publishes a message.
            </summary>
            <param name="message">The message instance.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.InvokeWithBusyIndicator(System.Action,System.Object)">
            <summary>
                Invokes an action in new thread and wrap it to busy indicator.
            </summary>
            <param name="action">The specified <see cref="T:System.Action"/>.</param>
            <param name="message">The specified message for the <see cref="P:MugenMvvmToolkit.ViewModels.ViewModelBase.BusyMessage"/> property.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.EnsureNotDisposed">
            <summary>
                Makes sure that the object is not disposed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.AddBusy(System.Guid,System.Object,System.Boolean)">
            <summary>
                Adds busy operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.RemoveBusy(System.Guid,System.Boolean)">
            <summary>
                Removes busy operation.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.DisposeInternal">
            <summary>
                Clears all event from view model command and PropertyChanged event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.Publish(System.Object,System.Object)">
            <summary>
                Publishes a message.
            </summary>
            <param name="sender">The specified sender.</param>
            <param name="message">The message instance.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnBeginBusy(System.Guid,System.Object)">
            <summary>
                Occurs after busy operation is occurred.
            </summary>
            <param name="id">The specified id.</param>
            <param name="message">The specified message.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnEndBusy(System.Guid)">
            <summary>
                Occurs after busy operation is ended.
            </summary>
            <param name="id">The specified id.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnHandle(System.Object,System.Object)">
            <summary>
                Handles the message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">Information about event.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnInitializedInternal">
            <summary>
                Occurs after the view model is fully loaded.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnInitializing(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Occurs during the initialization of the view model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnInitialized">
            <summary>
                Occurs after the view model is fully loaded.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnDisposeInternal(System.Boolean)">
            <summary>
                Occurs after the current view model is disposed, use for clear resource and event listeners(Internal only).
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.OnDispose(System.Boolean)">
            <summary>
                Occurs after the current view model is disposed, use for clear resource and event listeners.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ViewModelBase.Finalize">
            <summary>
                Destructor of view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.ViewModelEventAggregator">
            <summary>
            Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.IEventAggregator"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.ViewModelProvider">
            <summary>
                Gets or sets the default view model provider to create view models.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.IocContainer">
            <summary>
                Gets the ioc adapter of the current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.ThreadManager">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.IThreadManager"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.DisposeCancellationToken">
            <summary>
                Gets the cancellation token that uses to cancel an operation when the current view model will be disposed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.IsInitialized">
            <summary>
                Gets the initialized state of the current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.IsBusy">
            <summary>
                Gets the busy state of the current view model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.BusyMessage">
            <summary>
                Gets the information message for busy dialog.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.Settings">
            <summary>
                Gets the <see cref="T:MugenMvvmToolkit.Interfaces.Models.IViewModelSettings"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ViewModelBase.IsDisposed">
            <summary>
                Gets a value indicating whether this instance is disposed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.ViewModelBase.Initialized">
            <summary>
                Occurs when this <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> is initialized.
                This event coincides with cases where the value of the <see cref="P:MugenMvvmToolkit.ViewModels.ViewModelBase.IsInitialized"/> property changes from false to true.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.ViewModelBase.Disposed">
            <summary>
                Occurs when the object is disposed by a call to the Dispose method.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.CloseableViewModel.ImmediateCloseParameter">
            <summary>
                Gets the parameter that can be used to immediately close the closeable view model without any check.
                closeableViewModel.CloseAsync(CloseableMediator.ImmediateCloseParameter);
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.CloseableViewModel"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.CloseAsync(System.Object)">
            <summary>
                Tries to close view-model.
            </summary>
            <param name="parameter">The specified parameter, if any.</param>
            <returns>An instance of task with result.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.CanClose(System.Object)">
            <summary>
                Determines whether the specified command <c>CloseCommand</c> can be execute.
            </summary>
            <param name="param">The specified command parameter.</param>
            <returns>
                If <c>true</c> - can execute, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.OnClosing(System.Object)">
            <summary>
                Occurs when view model is closing.
            </summary>
            <returns>
                If <c>true</c> - close, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.OnClosed(System.Object)">
            <summary>
                Occurs when <c>CloseCommand</c> executed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.RaiseClosingEvent(System.Object)">
            <summary>
                Invokes the Closing event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.RaiseClosedEvent(System.Object)">
            <summary>
                Invokes the Closed event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.CloseableViewModel.OnDisposeInternal(System.Boolean)">
            <summary>
                Occurs after current view model disposed, use for clear resource and event listeners(Internal only).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.CloseableViewModel.CloseCommand">
            <summary>
                Gets or sets a command that attempts to remove this workspace from the user interface.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.CloseableViewModel.Closing">
            <summary>
                Called when <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel"/> removing from the workspace.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.CloseableViewModel.Closed">
            <summary>
                Called when <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel"/> removed from the workspace.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.EditableViewModel`1">
            <summary>
                Represent the class for editable view models.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.ValidatableViewModel">
            <summary>
                Represents the view-model which has validation support.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.ValidatableViewModel"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.AddValidator``1(System.Object)">
            <summary>
                Adds the specified validator.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ClearErrorsInternal(System.String)">
            <summary>
                Clears errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ClearErrorsInternal">
            <summary>
                Clears the all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.GetErrorsInternal(System.String)">
            <summary>
                Gets the validation errors for a specified property or for the entire entity.
            </summary>
            <returns>
                The validation errors for the property or entity.
            </returns>
            <param name="propertyName">
                The name of the property to retrieve validation errors for; or null or <see cref="F:System.String.Empty" />, to
                retrieve entity-level errors.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.GetErrorsInternal">
            <summary>
                Gets the all validation errors.
            </summary>
            <returns>
                The validation errors.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.AddValidatorInternal(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Adds the specified validator.
            </summary>
            <param name="validator">The specified validator.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.RemoveValidatorInternal(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Removes the specified validator.
            </summary>
            <param name="validator">The specified validator.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.AddInstanceInternal(System.Object)">
            <summary>
                Adds the specified instance to validate.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.RemoveInstanceInternal(System.Object)">
            <summary>
                Adds the specified instance to validate.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.IsValidInternal">
            <summary>
                Determines whether the current model is valid.
            </summary>
            <returns>
                If <c>true</c> current model is valid, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ValidateInstanceInternal(System.Object)">
            <summary>
                Updates information about errors in the specified instance.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ValidateInternal(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ValidateInternal">
            <summary>
                Updates information about all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.OnHandleAsyncValidationMessage(System.Object,MugenMvvmToolkit.Models.Messages.AsyncValidationMessage)">
            <summary>
                Occurs when processing an asynchronous validation message.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="message">Information about event.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.OnErrorsChanged(System.Object,MugenMvvmToolkit.Models.Messages.DataErrorsChangedMessage)">
            <summary>
                Occurs when the validation errors have changed for a property or for the entire entity.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.GetValidators">
            <summary>
                Gets the collection of validators.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.CreateContext(System.Object)">
            <summary>
                Creates an instance of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
            <returns>An instance of <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorContext"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.AddValidator(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Adds the specified validator.
            </summary>
            <param name="validator">The specified validator.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.RemoveValidator(MugenMvvmToolkit.Interfaces.Validation.IValidator)">
            <summary>
                Removes the specified validator.
            </summary>
            <param name="validator">The specified validator.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.AddInstance(System.Object)">
            <summary>
                Adds the specified instance to validate.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.RemoveInstance(System.Object)">
            <summary>
                Removes the specified instance to validate.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ValidateInstanceAsync(System.Object)">
            <summary>
                Updates information about errors in the specified instance.
            </summary>
            <param name="instanceToValidate">The specified instance to validate.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ValidateAsync(System.String)">
            <summary>
                Updates information about errors in the specified property.
            </summary>
            <param name="propertyName">The specified property name.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ValidateAsync">
            <summary>
                Updates information about all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.GetErrors(System.String)">
            <summary>
                Gets the validation errors for a specified property or for the entire entity.
            </summary>
            <returns>
                The validation errors for the property or entity.
            </returns>
            <param name="propertyName">
                The name of the property to retrieve validation errors for; or null or <see cref="F:System.String.Empty" />, to
                retrieve entity-level errors.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.GetErrors">
            <summary>
                Gets the all validation errors.
            </summary>
            <returns>
                The validation errors.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ClearErrors(System.String)">
            <summary>
                Clears errors for a property.
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ClearErrors">
            <summary>
                Clears the all errors.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.IsValid">
            <summary>
                Determines whether the current view model is valid.
            </summary>
            <returns>
                If <c>true</c> current view model is valid, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.RaiseErrorsChanged(System.ComponentModel.DataErrorsChangedEventArgs)">
            <summary>
                Raises this object's ErrorsChangedChanged event.
            </summary>
            <param name="args">The event args.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.OnInitializedInternal">
            <summary>
                Occurs after the initialization of the current <see cref="T:MugenMvvmToolkit.ViewModels.ViewModelBase"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.ValidatableViewModel.OnDisposeInternal(System.Boolean)">
            <summary>
                Occurs after current view model disposed, use for clear resource and event listeners(Internal only).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ValidatableViewModel.InstanceToValidators">
            <summary>
                Gets the dictionary that contains mapping from an instance to validators.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ManualValidator">
            <summary>
                Gets the validator to manage the errors.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ValidatorProvider">
            <summary>
            Gets or sets the current <see cref="T:MugenMvvmToolkit.Interfaces.Validation.IValidatorProvider"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ValidatableViewModel.PropertiesMapping">
            <summary>
                Gets the mapping of model properties.
                <example>
                    <code>
                  <![CDATA[
                   PropertiesMapping.Add("ModelProperty", new[]{"ViewModelProperty"});
                  ]]>
                </code>
                </example>
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ValidatableViewModel.IgnoreProperties">
            <summary>
                Gets the list of properties that will not be validated.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.ValidatableViewModel.System#ComponentModel#INotifyDataErrorInfo#HasErrors">
            <summary>
                Gets a value that indicates whether the entity has validation errors.
            </summary>
            <returns>
                true if the entity currently has validation errors; otherwise, false.
            </returns>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.ValidatableViewModel.ErrorsChanged">
            <summary>
                Occurs when the validation errors have changed for a property or for the entire entity.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.EditableViewModel`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.EditableViewModel`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IEditableViewModel#InitializeEntity(System.Object,System.Boolean)">
            <summary>
                Initializes the specified entity to edit.
            </summary>
            <param name="entity">The specified entity to edit.</param>
            <param name="isNewRecord">
                If <c>true</c> is new entity;otherwise <c>false</c>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.ApplyChanges">
            <summary>
                Applies the changes of entity.
            </summary>
            <returns>A series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IEditableViewModel#CancelChanges">
            <summary>
                Cancels the changes of entity.
            </summary>
            <returns>An instance of object.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.InitializeEntity(`0,System.Boolean)">
            <summary>
                Initializes the specified entity to edit.
            </summary>
            <param name="entity">The specified entity to edit.</param>
            <param name="isNewRecord">
                If <c>true</c> is new entity;otherwise <c>false</c>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.CancelChanges">
            <summary>
                Cancels the changes of entity.
            </summary>
            <returns>An instance of object.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.ValidateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Updates information about errors in the specified property.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.OnEntityInitialized">
            <summary>
                Occurs after an entity instance is initialized.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.SaveEntityState(`0)">
            <summary>
                Saves the state of entity.
            </summary>
            <returns>An instance of object.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.ApplyChangesInternal(`0@)">
            <summary>
                Applies the changes of entity.
            </summary>
            <returns>A series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.GetChanges(`0)">
            <summary>
                Gets the changes.
            </summary>
            <param name="entity">The saved entity.</param>
            <returns>A series of instances of <see cref="T:MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry"/>.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.OnChangesApplied(System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry})">
            <summary>
                Occurs after applying changes.
            </summary>
            <param name="entityStateEntries">The entity state entries.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.CancelChangesInternal">
            <summary>
                Cancels the changes of entity.
            </summary>
            <returns>An instance of object.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.OnChangesCanceled">
            <summary>
                Occurs after canceling changes.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.RaiseEntityInitialized(`0,`0)">
            <summary>
                Raises the <c>EntityInitialized</c> event
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.RaiseChangesApplied(System.Collections.Generic.IList{MugenMvvmToolkit.Interfaces.Models.IEntityStateEntry})">
            <summary>
                Raises the <c>ChangesApplied</c> event
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.RaiseChangesCanceled(`0)">
            <summary>
                Raises the <c>ChangesCanceled</c> event
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.OnInitializedInternal">
            <summary>
                Occurs after the initialization of the current <see cref="T:MugenMvvmToolkit.ViewModels.ViewModelBase"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.EditableViewModel`1.OnDisposeInternal(System.Boolean)">
            <summary>
                Occurs after current view model disposed, use for clear resource and event listeners(Internal only).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.ModelType">
            <summary>
                Gets the type of model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.IsNewRecord">
            <summary>
                Gets the value which indicates that is the new entity or not.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.HasChanges">
            <summary>
                Gets a value indicating whether the entity has changes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.IsEntityInitialized">
            <summary>
                Gets a value indicating whether the entity is initialized.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IEditableViewModel#Entity">
            <summary>
                Gets the edited entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.EditableViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IEditableViewModel#EntityInitialized">
            <summary>
                Occurs at the end of initialization the entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.EditableViewModel`1.ChangesApplied">
            <summary>
                Occurs at the end of apply entity changes.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.EditableViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IEditableViewModel#ChangesCanceled">
            <summary>
                Occurs at the end of cancel entity changes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.Entity">
            <summary>
                Gets the edited entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EntityInitialized">
            <summary>
                Occurs at the end of initialization the entity.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.EditableViewModel`1.ChangesCanceled">
            <summary>
                Occurs at the end of cancel entity changes.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.UpdateChangesOnPropertyChangedDefault">
            <summary>
                Gets or sets a value indicating whether the editor should automatically update changes when an entity property is changed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.UpdateChangesOnPropertyChanged">
            <summary>
                Gets or sets a value indicating whether the editor should automatically update changes when an entity property is changed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.StateManager">
            <summary>
                Gets the entity state manager.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EntitySnapshot">
            <summary>
            Gets the entity state snapshot, if any.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EventTable">
            <summary>
            Gets the internal event table.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EventConstants">
            <summary>
            Represents the data constants of the editable view model events.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EventConstants.ChangesCanceled">
            <summary>
            Represents the data constant for the changes canceled event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EventConstants.EntityInitialized">
            <summary>
            Represents the data constant for the entity initialized event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EventConstants.ChangesCanceledNonGeneric">
            <summary>
            Represents the data constant for the non-generic changes canceled event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EventConstants.ChangesApplied">
            <summary>
            Represents the data constant for the changes applied event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.EditableViewModel`1.EventConstants.EntityInitializedNonGeneric">
            <summary>
            Represents the data constant for the non-generic entity initialized event.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.GridViewModel`1">
            <summary>
                Represents the base class for linear lists.
            </summary>
            <typeparam name="T">The type of model.</typeparam>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.GridViewModel`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#UpdateItemsSource(System.Collections.IEnumerable)">
            <summary>
                Updates the current <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel.ItemsSource"/>.
            </summary>
            <param name="value">The new item source value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.UpdateItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Updates the current <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.ItemsSource"/>.
            </summary>
            <param name="value">The new items source value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.SetOriginalItemsSource``1(``0)">
            <summary>
                Sets the original collection of items.
            </summary>
            <param name="originalItemsSource">The source collection.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.UpdateFilter">
            <summary>
                Updates the filter state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.UpdateItemsSourceInternal(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Updates the current <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IGridViewModel`1.ItemsSource"/>.
            </summary>
            <param name="value">The new items source value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.UpdateFilterInternal">
            <summary>
                Updates the filter state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnSelectedItemChanging(`0)">
            <summary>
                Occurs when the <c>SelectedItem</c> property changing.
            </summary>
            <param name="newValue">The new value.</param>
            <returns>The value to set as selected item.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnSelectedItemChanged(`0,`0)">
            <summary>
                Occurs when the <c>SelectedItem</c> property changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnItemsSourceChanging(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Occurs when the <c>ItemsSource</c> property changing.
            </summary>
            <param name="data">The new item source data.</param>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnItemsSourceChanged(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Occurs when the <c>ItemsSource</c> property changed.
            </summary>
            <param name="data">The new item source data.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.RaiseSelectedItemChanged(`0,`0)">
            <summary>
                Invokes the <c>SelectedItemChanged</c> event.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.RaiseItemsSourceChanged(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Invokes the event <c>ItemsSourceChanged</c>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnSelectedItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                Occurs when selected item property changed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnCollectionChanging(System.Object,MugenMvvmToolkit.Models.EventArg.NotifyCollectionChangingEventArgs)">
            <summary>
                Occurs when collection changing.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Occurs when collection changed
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnInitializedInternal">
            <summary>
                Occurs after the initialization of the current <see cref="T:MugenMvvmToolkit.ViewModels.ViewModelBase"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.GridViewModel`1.OnDisposeInternal(System.Boolean)">
            <summary>
                Occurs after current view model disposed, use for clear resource and event listeners(Internal only).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventTable">
            <summary>
            Gets the internal event table.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.FilterableItemsSource">
            <summary>
                Gets the filterable items source.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#ModelType">
            <summary>
                Gets the type of model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#OriginalItemsSource">
            <summary>
                Gets the original collection of items source without the filter.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#ItemsSource">
            <summary>
                Gets the collection of objects.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#SelectedItem">
            <summary>
                Gets or sets the selected item.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#Filter">
            <summary>
                Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.Filter">
            <summary>
                Gets or sets the filter.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#SelectedItemChanged">
            <summary>
                Occurs when the <c>SelectedItem</c> property changed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.GridViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#IGridViewModel#ItemsSourceChanged">
            <summary>
                Occurs when the <c>ItemsSource</c> property changed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.OriginalItemsSource">
            <summary>
                Gets the original collection of items source without the filter.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.ItemsSource">
            <summary>
                Gets or sets the collection of objects.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.GridViewModel`1.SelectedItem">
            <summary>
                Gets or sets the selected item.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.GridViewModel`1.SelectedItemChanged">
            <summary>
                Occurs when the <c>SelectedItem</c> property changed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.GridViewModel`1.ItemsSourceChanged">
            <summary>
                Occurs when the <c>ItemsSource</c> property changed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.GridViewModel`1.CollectionChanging">
            <summary>
                Occurs before the collection changes.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.GridViewModel`1.CollectionChanged">
            <summary>
                Occurs when the collection changes.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventConstants">
            <summary>
            Represents the data constants of the grid view model events.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventConstants.SelectedItemChangedNonGeneric">
            <summary>
            Represents the data constant for the non-generic selected item change event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventConstants.ItemsSourceChangedNonGeneric">
            <summary>
            Represents the data constant for the non-generic itemssource change event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventConstants.SelectedItemChanged">
            <summary>
            Represents the data constant for the generic itemssource change event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventConstants.ItemsSourceChanged">
            <summary>
            Represents the data constant for the generic selected item change event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventConstants.CollectionChanging">
            <summary>
            Represents the data constant for the collection changing event.
            </summary>
        </member>
        <member name="F:MugenMvvmToolkit.ViewModels.GridViewModel`1.EventConstants.CollectionChanged">
            <summary>
            Represents the data constant for the collection changed event.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.MultiViewModel">
            <summary>
                Represents the view model that can contains a collection of other <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.MultiViewModel"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.AddViewModel(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Adds the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> to <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ItemsSource"/>.
            </summary>
            <param name="viewModel">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.RemoveViewModelAsync(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,System.Object)">
            <summary>
                Removes the specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/> from <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ItemsSource"/>.
            </summary>
            <param name="viewModel">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </param>
            <param name="parameter">The specified parameter, if any.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.Clear">
            <summary>
                Clears all view models from <see cref="P:MugenMvvmToolkit.Interfaces.ViewModels.IMultiViewModel.ItemsSource"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.OnSelectedItemChanged(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Occurs when the <c>SelectedItem</c> property is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.OnViewModelAdded(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Occurs when a view model is added.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.OnViewModelRemoved(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel)">
            <summary>
                Occurs when a view model is removed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.OnViewModelsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Occurs when any workspace view model is changed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.OnInitializedInternal">
            <summary>
                Occurs after the initialization of the current <see cref="T:MugenMvvmToolkit.ViewModels.ViewModelBase"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.OnClosing(System.Object)">
            <summary>
                Occurs when view model is closing.
            </summary>
            <returns>
                If <c>true</c> - close, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.MultiViewModel.OnDisposeInternal(System.Boolean)">
            <summary>
                Occurs after current view model disposed, use for clear resource and event listeners(Internal only).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.MultiViewModel.DisposeViewModelOnRemove">
            <summary>
                Gets or sets the value.
                If <c>true</c> the view-model will disposed view model when it closed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.MultiViewModel.SelectedItem">
            <summary>
                Gets or sets the selected view-model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.MultiViewModel.ItemsSource">
            <summary>
                Gets the collection of <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>s.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.MultiViewModel.SelectedItemChanged">
            <summary>
                Occurs when the <c>SelectedItem</c> property changed.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.MultiViewModel.ViewModelAdded">
            <summary>
                Occurs when a view model is added.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.MultiViewModel.ViewModelRemoved">
            <summary>
                Occurs when a view model is removed.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.WorkspaceViewModel">
            <summary>
                Represents the base class for the view-model, which are displayed in the UI and has <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1">
            <summary>
                Represents the base class for the view-model, which are displayed in the UI and has <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#INavigableViewModel#OnNavigatedTo(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model becomes the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#INavigableViewModel#OnNavigatedFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.MugenMvvmToolkit#Interfaces#ViewModels#INavigableViewModel#OnNavigatingFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called just before a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.OnNavigatingFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called just before a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.OnNavigatedFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.OnNavigatedTo(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model becomes the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.OnViewChanged(`0,`0)">
            <summary>
                Occurs when an <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/> for the current <see cref="T:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1"/> changed.
            </summary>
            <param name="oldView">
                The old value of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </param>
            <param name="newView">
                The new value of <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </param>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.View">
            <summary>
                Gets or sets the <see cref="T:MugenMvvmToolkit.Interfaces.Views.IView"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.DisplayName">
            <summary>
                Gets or sets the display name for the current model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WorkspaceViewModel`1.IsSelected">
            <summary>
                Gets or sets the property that indicates that current model is selected.
            </summary>
        </member>
        <member name="T:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1">
            <summary>
                Represents the base wrapper for view models.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1"/> class.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.Wrap(MugenMvvmToolkit.Interfaces.ViewModels.IViewModel,MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Wraps the specified view-model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.MugenMvvmToolkit#Interfaces#ViewModels#ICloseableViewModel#CloseAsync(System.Object)">
            <summary>
                Tries to close view-model.
            </summary>
            <param name="parameter">The specified parameter, if any.</param>
            <returns>An instance of task with result.</returns>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.MugenMvvmToolkit#Interfaces#ViewModels#INavigableViewModel#OnNavigatedTo(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model becomes the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.MugenMvvmToolkit#Interfaces#ViewModels#INavigableViewModel#OnNavigatingFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called just before a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.MugenMvvmToolkit#Interfaces#ViewModels#INavigableViewModel#OnNavigatedFrom(MugenMvvmToolkit.Interfaces.Navigation.INavigationContext)">
            <summary>
                Called when a view-model is no longer the active view-model in a frame.
            </summary>
            <param name="context">
                The specified <see cref="T:MugenMvvmToolkit.Interfaces.Navigation.INavigationContext"/>.
            </param>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.MugenMvvmToolkit#Interfaces#Models#IHasState#LoadState(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Loads state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.MugenMvvmToolkit#Interfaces#Models#IHasState#SaveState(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Saves state.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.CloseAsync(System.Object)">
            <summary>
                Tries to close view-model.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.OnWrapped(MugenMvvmToolkit.Interfaces.Models.IDataContext)">
            <summary>
                Occurs when view model was wrapped.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.OnClosed(System.Object)">
            <summary>
                Occurs when view model is closed.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.OnShow(System.Object)">
            <summary>
                Occurs when view model is shown.
            </summary>
        </member>
        <member name="M:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.OnDisposeInternal(System.Boolean)">
            <summary>
                Occurs after the current view model is disposed, use for clear resource and event listeners(Internal only).
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.ViewModel">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.WrappedPropertyNames">
            <summary>
                Gets the collection of properties that should be retranslated use property changed handler.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.MugenMvvmToolkit#Interfaces#ViewModels#IWrapperViewModel#ViewModel">
            <summary>
                Gets the current <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.IViewModel"/>.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.CloseCommand">
            <summary>
                Gets or sets a command that attempts to remove this workspace from the user interface.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.Closing">
            <summary>
                Occurs when <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel"/> is closing.
            </summary>
        </member>
        <member name="E:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.Closed">
            <summary>
                Occurs when <see cref="T:MugenMvvmToolkit.Interfaces.ViewModels.ICloseableViewModel"/> is closed.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.DisplayName">
            <summary>
                Gets or sets the display name for the current model.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.OperationResult">
            <summary>
                Gets or sets the operation result value.
            </summary>
        </member>
        <member name="P:MugenMvvmToolkit.ViewModels.WrapperViewModelBase`1.IsSelected">
            <summary>
                Gets or sets the property that indicates that current model is selected.
            </summary>
        </member>
    </members>
</doc>
